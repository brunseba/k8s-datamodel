{
  "cluster_info": {
    "version": [
      "unknown"
    ],
    "node_count": 1,
    "nodes": [
      "orbstack"
    ]
  },
  "export_timestamp": "2025-09-07T09:46:37.576396+00:00",
  "namespace_filter": null,
  "olm_csvs": [
    {
      "name": "cloudnative-pg.v1.27.0",
      "namespace": "cert-manager",
      "display_name": "CloudNativePG",
      "version": "1.27.0",
      "phase": "Succeeded",
      "description": "Main features:\n\n- Direct integration with the Kubernetes API server for High Availability,\n  eliminating the need for external tools.\n- Self-healing capabilities, including:\n    - Automated failover by promoting the most aligned replica.\n    - Automatic recreation of failed replicas.\n- Planned switchover of the primary instance by promoting a selected replica.\n- Declarative management of key PostgreSQL configurations, including:\n    - PostgreSQL settings.\n    - Roles, users, and groups.\n    - Databases, extensions, and schemas.\n    - Tablespaces (including temporary tablespaces).\n- Flexible instance definition, supporting any number of instances (minimum 1\n  primary server).\n- Scale-up/down capabilities to dynamically adjust cluster size.\n- Read-Write and Read-Only Services, ensuring applications connect correctly:\n    - *Read-Write Service*: Routes connections to the primary server.\n    - *Read-Only Service*: Distributes connections among replicas for read workloads.\n- Support for quorum-based and priority-based PostgreSQL Synchronous\n  Replication.\n- Replica clusters enabling PostgreSQL distributed topologies across multiple\n  Kubernetes clusters (private, public, hybrid, and multi-cloud).\n- Delayed Replica clusters for point-in-time access to historical data.\n- Persistent volume management, including:\n    - Support for Local Persistent Volumes with PVC templates.\n    - Reuse of Persistent Volumes storage in Pods.\n    - Separate volumes for WAL files and tablespaces.\n- Backup and recovery options, including:\n    - Integration with the [Barman Cloud plugin](https://github.com/cloudnative-pg/plugin-barman-cloud)\n      for continuous online backup via WAL archiving to AWS S3, S3-compatible\n      services, Azure Blob Storage, and Google Cloud Storage, with support for\n      retention policies based on a configurable recovery window.\n    - Backups using volume snapshots (where supported by storage classes).\n    - Full and Point-In-Time recovery from volume snapshots or object stores (via Barman Cloud plugin).\n    - Backup from standby replicas to reduce primary workload impact.\n- Offline and online import of PostgreSQL databases, including major upgrades:\n    - *Offline Import*: Direct restore from existing databases.\n    - *Online Import*: PostgreSQL native logical replication via the `Subscription` resource.\n- Offline In-Place Major Upgrades of PostgreSQL\n- High Availability physical replication slots, including synchronization of\n  user-defined replication slots.\n- Parallel WAL archiving and restore, ensuring high-performance data\n  synchronization in high-write environments.\n- TLS support, including:\n    - Secure connections and client certificate authentication.\n    - Custom TLS certificates (integrated with `cert-manager`).\n- Startup and readiness probes, including replica probes based on desired lag\n  from the primary.\n- Declarative rolling updates for:\n    - PostgreSQL minor versions.\n    - Operator upgrades (in-place or rolling updates).\n- Standard output logging of PostgreSQL error messages in JSON format for\n  easier integration with log aggregation tools.\n- Prometheus-compatible metrics exporter (`metrics` port 9187) for custom\n  monitoring.\n- `cnpg` plugin for `kubectl` to simplify cluster operations.\n- Cluster hibernation for resource efficiency in inactive states.\n- Fencing of PostgreSQL clusters (full cluster or subset) to isolate instances\n  when needed.\n- Connection pooling with PgBouncer for improved database efficiency.\n- OLM (Operator Lifecycle Manager) installation support for streamlined\n  deployments.\n- Multi-arch container images, including Software Bill of Materials (SBOM) and\n  provenance attestations for security compliance.\n",
      "provider": "The CloudNativePG Contributors",
      "install_strategy": "OwnNamespace",
      "creation_timestamp": "2025-09-07T09:12:56Z",
      "labels": {
        "olm.copiedFrom": "operators",
        "olm.managed": "true",
        "operatorframework.io/arch.amd64": "supported"
      },
      "annotations": {
        "alm-examples": "[\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"backup-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      }\n    },\n    \"status\": {\n      \"serverName\": null\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Cluster\",\n    \"metadata\": {\n      \"name\": \"cluster-sample\"\n    },\n    \"spec\": {\n      \"instances\": 3,\n      \"logLevel\": \"info\",\n      \"primaryUpdateStrategy\": \"unsupervised\",\n      \"storage\": {\n        \"size\": \"1Gi\"\n      },\n      \"walStorage\": {\n        \"size\": \"1Gi\"\n      }\n    },\n    \"status\": {\n      \"instances\": 3\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"ClusterImageCatalog\",\n    \"metadata\": {\n      \"name\": \"postgresql\"\n    },\n    \"spec\": {\n      \"images\": [\n        {\n          \"image\": \"ghcr.io/cloudnative-pg/postgresql@sha256:1c97e0d6e94d8b335be7f258eeda2202966df5fde0c934eef4b13c760ec6a891\",\n          \"major\": 15\n        },\n        {\n          \"image\": \"ghcr.io/cloudnative-pg/postgresql@sha256:ee2e3ce7f0ea935c3f4ab245c0b3959c9f1c49816ae02222ceb6bc347f48e43b\",\n          \"major\": 16\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Database\",\n    \"metadata\": {\n      \"name\": \"database-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      },\n      \"name\": \"database-sample\",\n      \"owner\": \"app\"\n    },\n    \"status\": {\n      \"applied\": false\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"ImageCatalog\",\n    \"metadata\": {\n      \"name\": \"postgresql\",\n      \"namespace\": \"default\"\n    },\n    \"spec\": {\n      \"images\": [\n        {\n          \"image\": \"ghcr.io/cloudnative-pg/postgresql@sha256:1c97e0d6e94d8b335be7f258eeda2202966df5fde0c934eef4b13c760ec6a891\",\n          \"major\": 15\n        },\n        {\n          \"image\": \"ghcr.io/cloudnative-pg/postgresql@sha256:ee2e3ce7f0ea935c3f4ab245c0b3959c9f1c49816ae02222ceb6bc347f48e43b\",\n          \"major\": 16\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Pooler\",\n    \"metadata\": {\n      \"name\": \"pooler-sample-rw\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      },\n      \"instances\": 1,\n      \"pgbouncer\": {\n        \"poolMode\": \"session\"\n      },\n      \"type\": \"rw\"\n    },\n    \"status\": {\n      \"instances\": 1\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Publication\",\n    \"metadata\": {\n      \"name\": \"publication-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      },\n      \"dbname\": \"app\",\n      \"name\": \"pub\",\n      \"target\": {\n        \"allTables\": true\n      }\n    },\n    \"status\": {\n      \"applied\": false\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"ScheduledBackup\",\n    \"metadata\": {\n      \"name\": \"scheduledbackup-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      },\n      \"schedule\": \"0 0 0 * * *\"\n    },\n    \"status\": {\n      \"lastCheckTime\": null\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Subscription\",\n    \"metadata\": {\n      \"name\": \"subscription-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample-dest\"\n      },\n      \"dbname\": \"app\",\n      \"externalClusterName\": \"cluster-sample\",\n      \"name\": \"sub\",\n      \"publicationName\": \"pub\"\n    },\n    \"status\": {\n      \"applied\": false\n    }\n  }\n]",
        "capabilities": "Auto Pilot",
        "categories": "Database",
        "certified": "true",
        "containerImage": "ghcr.io/cloudnative-pg/cloudnative-pg@sha256:53995e9d6a7760c77d77e5298f78b49029427494f4dd933d5fa7a74f7af3bb44",
        "createdAt": "2025-08-12T14:08:35Z",
        "description": "CloudNativePG is an open source operator designed to manage highly available PostgreSQL databases with a primary/standby architecture on any supported Kubernetes cluster.",
        "features.operators.openshift.io/disconnected": "true",
        "features.operators.openshift.io/fips-compliant": "false",
        "features.operators.openshift.io/proxy-aware": "false",
        "features.operators.openshift.io/tls-profiles": "false",
        "features.operators.openshift.io/token-auth-aws": "false",
        "features.operators.openshift.io/token-auth-azure": "false",
        "features.operators.openshift.io/token-auth-gcp": "false",
        "olm.operatorGroup": "global-operators",
        "olm.operatorNamespace": "operators",
        "operatorframework.io/properties": "{\"properties\":[{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Backup\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Cluster\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"ClusterImageCatalog\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Database\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"FailoverQuorum\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"ImageCatalog\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Pooler\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Publication\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"ScheduledBackup\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Subscription\",\"version\":\"v1\"}},{\"type\":\"olm.package\",\"value\":{\"packageName\":\"cloudnative-pg\",\"version\":\"1.27.0\"}}]}",
        "operators.operatorframework.io/builder": "operator-sdk-v1.41.1",
        "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v4",
        "repository": "https://github.com/cloudnative-pg/cloudnative-pg",
        "support": "Community"
      },
      "owned_crds": [
        "backups.postgresql.cnpg.io",
        "clusterimagecatalogs.postgresql.cnpg.io",
        "clusters.postgresql.cnpg.io",
        "databases.postgresql.cnpg.io",
        "failoverquorums.postgresql.cnpg.io",
        "imagecatalogs.postgresql.cnpg.io",
        "poolers.postgresql.cnpg.io",
        "publications.postgresql.cnpg.io",
        "scheduledbackups.postgresql.cnpg.io",
        "subscriptions.postgresql.cnpg.io"
      ],
      "required_crds": [],
      "permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps",
                "secrets",
                "services"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps/status",
                "secrets/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "events"
              ],
              "verbs": [
                "create",
                "patch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "nodes"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "persistentvolumeclaims",
                "pods",
                "pods/exec"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "pods/status"
              ],
              "verbs": [
                "get"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "serviceaccounts"
              ],
              "verbs": [
                "create",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "admissionregistration.k8s.io"
              ],
              "resources": [
                "mutatingwebhookconfigurations",
                "validatingwebhookconfigurations"
              ],
              "verbs": [
                "get",
                "patch"
              ]
            },
            {
              "apiGroups": [
                "apps"
              ],
              "resources": [
                "deployments"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "batch"
              ],
              "resources": [
                "jobs"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "coordination.k8s.io"
              ],
              "resources": [
                "leases"
              ],
              "verbs": [
                "create",
                "get",
                "update"
              ]
            },
            {
              "apiGroups": [
                "monitoring.coreos.com"
              ],
              "resources": [
                "podmonitors"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "policy"
              ],
              "resources": [
                "poddisruptionbudgets"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "backups",
                "clusters",
                "databases",
                "poolers",
                "publications",
                "scheduledbackups",
                "subscriptions"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "backups/status",
                "databases/status",
                "publications/status",
                "scheduledbackups/status",
                "subscriptions/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "clusterimagecatalogs",
                "imagecatalogs"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "clusters/finalizers",
                "poolers/finalizers"
              ],
              "verbs": [
                "update"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "clusters/status",
                "failoverquorums/status",
                "poolers/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "failoverquorums"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "rbac.authorization.k8s.io"
              ],
              "resources": [
                "rolebindings",
                "roles"
              ],
              "verbs": [
                "create",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "snapshot.storage.k8s.io"
              ],
              "resources": [
                "volumesnapshots"
              ],
              "verbs": [
                "create",
                "get",
                "list",
                "patch",
                "watch"
              ]
            }
          ],
          "serviceAccountName": "cnpg-manager"
        }
      ],
      "cluster_permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "nodes"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "clusterimagecatalogs"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            }
          ],
          "serviceAccountName": "cnpg-manager"
        }
      ],
      "replaces": "cloudnative-pg.v1.26.1",
      "skips": [],
      "min_kube_version": "1.23.0"
    },
    {
      "name": "mariadb-operator.v25.8.3",
      "namespace": "cert-manager",
      "display_name": "MariaDB Operator",
      "version": "25.8.3",
      "phase": "Succeeded",
      "description": "Install [`mariadb-operator`](https://github.com/mariadb-operator/mariadb-operator) via [OLM](https://olm.operatorframework.io/) using the [helm chart](https://artifacthub.io/packages/helm/mariadb-operator/mariadb-operator).\n\nThis helm operator provides provides a 1:1 mapping between the official helm chart and the [`MariadbOperator`](https://github.com/mariadb-operator/mariadb-operator-helm/blob/main/config/samples/helm_v1alpha1_mariadboperator.yaml) CRD, allowing to install [`mariadb-operator`](https://github.com/mariadb-operator/mariadb-operator) via OLM without having to do any change in the helm chart.\n\nNormally, you would install [`mariadb-operator`](https://github.com/mariadb-operator/mariadb-operator) providing this `values.yaml` to the helm chart:\n```yaml\nimage:\n  repository: ghcr.io/mariadb-operator/mariadb-operator\n  pullPolicy: IfNotPresent\nlogLevel: INFO\nha:\n  enabled: true\nmetrics:\n  enabled: true\n  serviceMonitor:\n    enabled: true\nwebhook:\n  cert:\n    certManager:\n      enabled: true\n```\n\nThis helm chart installation is abstracted in the [`MariadbOperator`](https://github.com/mariadb-operator/mariadb-operator-helm/blob/main/config/samples/helm_v1alpha1_mariadboperator.yaml) CRD, which will be reconciled by the helm operator:\n```yaml\napiVersion: helm.k8s.mariadb.com/v1alpha1\nkind: MariadbOperator\nmetadata:\n  name: mariadb-operator\nspec:\n  image:\n    repository: ghcr.io/mariadb-operator/mariadb-operator\n    pullPolicy: IfNotPresent\n  logLevel: INFO\n  ha:\n    enabled: true\n  metrics:\n    enabled: true\n    serviceMonitor:\n      enabled: true\n  webhook:\n    cert:\n      certManager:\n        enabled: true\n```\n\nOnce you have installed the operator, you will able to install a [`MariaDB`](https://github.com/mariadb-operator/mariadb-operator/blob/main/examples/manifests/mariadb_v1alpha1_mariadb.yaml) instance. Refer to the main [`mariadb-operator`](https://github.com/mariadb-operator/mariadb-operator) documentation for getting started with the rest of CRDs.\n\n## Documentation\n* [mariadb-operator](https://github.com/mariadb-operator/mariadb-operator/blob/main/README.md)\n* [mariadb-operator-helm](https://github.com/mariadb-operator/mariadb-operator-helm/blob/main/README.md)\n\n## Releases\nThis operator is automatically published in the following repositories whenever a new version of the [helm chart](https://artifacthub.io/packages/helm/mariadb-operator/mariadb-operator) is released:\n- [k8s-operatorhub/community-operators](https://github.com/k8s-operatorhub/community-operators)\n- [redhat-openshift-ecosystem/community-operators-prod](https://github.com/redhat-openshift-ecosystem/community-operators-prod)\n\n## Roadmap\nTake a look at our [roadmap](https://github.com/mariadb-operator/mariadb-operator/blob/main/ROADMAP.md) and feel free to open an issue to suggest new features.\n\n## Contributing\nWe welcome and encourage contributions to this project! Please check our [contributing](https://github.com/mariadb-operator/mariadb-operator/blob/main/CONTRIBUTING.md) and [development](https://github.com/mariadb-operator/mariadb-operator/blob/main/docs/DEVELOPMENT.md) guides. PRs welcome!\n\n## Get in touch\nJoin us on Slack: **[MariaDB Community Slack](https://r.mariadb.com/join-community-slack)**.\n",
      "provider": "mariadb-operator",
      "install_strategy": "OwnNamespace",
      "creation_timestamp": "2025-09-07T09:15:58Z",
      "labels": {
        "olm.copiedFrom": "operators",
        "olm.managed": "true"
      },
      "annotations": {
        "alm-examples": "[\n  {\n    \"apiVersion\": \"helm.mariadb.mmontes.io/v1alpha1\",\n    \"kind\": \"MariadbOperator\",\n    \"metadata\": {\n      \"name\": \"mariadb-operator\"\n    },\n    \"spec\": {\n      \"affinity\": {},\n      \"certController\": {\n        \"affinity\": {},\n        \"caValidity\": \"35064h\",\n        \"certValidity\": \"8766h\",\n        \"enabled\": true,\n        \"extrArgs\": [],\n        \"extraVolumeMounts\": [],\n        \"extraVolumes\": [],\n        \"ha\": {\n          \"enabled\": false,\n          \"replicas\": 3\n        },\n        \"image\": {\n          \"pullPolicy\": \"IfNotPresent\",\n          \"repository\": \"ghcr.io/mariadb-operator/mariadb-operator\",\n          \"tag\": \"\"\n        },\n        \"imagePullSecrets\": [],\n        \"lookaheadValidity\": \"2160h\",\n        \"nodeSelector\": {},\n        \"podAnnotations\": {},\n        \"podSecurityContext\": {},\n        \"requeueDuration\": \"5m\",\n        \"resources\": {},\n        \"securityContext\": {},\n        \"serviceAccount\": {\n          \"annotations\": {},\n          \"automount\": true,\n          \"enabled\": true,\n          \"extraLabels\": {},\n          \"name\": \"\"\n        },\n        \"serviceMonitor\": {\n          \"additionalLabels\": {},\n          \"enabled\": true,\n          \"interval\": \"30s\",\n          \"scrapeTimeout\": \"25s\"\n        },\n        \"tolerations\": []\n      },\n      \"clusterName\": \"cluster.local\",\n      \"extrArgs\": [],\n      \"extraVolumeMounts\": [],\n      \"extraVolumes\": [],\n      \"fullnameOverride\": \"\",\n      \"ha\": {\n        \"enabled\": false,\n        \"replicas\": 3\n      },\n      \"image\": {\n        \"pullPolicy\": \"IfNotPresent\",\n        \"repository\": \"ghcr.io/mariadb-operator/mariadb-operator\",\n        \"tag\": \"\"\n      },\n      \"imagePullSecrets\": [],\n      \"logLevel\": \"INFO\",\n      \"metrics\": {\n        \"enabled\": false,\n        \"serviceMonitor\": {\n          \"additionalLabels\": {},\n          \"enabled\": true,\n          \"interval\": \"30s\",\n          \"scrapeTimeout\": \"25s\"\n        }\n      },\n      \"nameOverride\": \"\",\n      \"nodeSelector\": {},\n      \"podAnnotations\": {},\n      \"podSecurityContext\": {},\n      \"rbac\": {\n        \"enabled\": true\n      },\n      \"resources\": {},\n      \"securityContext\": {},\n      \"serviceAccount\": {\n        \"annotations\": {},\n        \"automount\": true,\n        \"enabled\": true,\n        \"extraLabels\": {},\n        \"name\": \"\"\n      },\n      \"tolerations\": [],\n      \"webhook\": {\n        \"affinity\": {},\n        \"annotations\": {},\n        \"cert\": {\n          \"caPath\": \"/tmp/k8s-webhook-server/certificate-authority\",\n          \"certManager\": {\n            \"duration\": \"\",\n            \"enabled\": false,\n            \"issuerRef\": {},\n            \"renewBefore\": \"\"\n          },\n          \"path\": \"/tmp/k8s-webhook-server/serving-certs\",\n          \"secretAnnotations\": {}\n        },\n        \"extrArgs\": [],\n        \"extraVolumeMounts\": [],\n        \"extraVolumes\": [],\n        \"ha\": {\n          \"enabled\": false,\n          \"replicas\": 3\n        },\n        \"hostNetwork\": false,\n        \"image\": {\n          \"pullPolicy\": \"IfNotPresent\",\n          \"repository\": \"ghcr.io/mariadb-operator/mariadb-operator\",\n          \"tag\": \"\"\n        },\n        \"imagePullSecrets\": [],\n        \"nodeSelector\": {},\n        \"podAnnotations\": {},\n        \"podSecurityContext\": {},\n        \"port\": 10250,\n        \"resources\": {},\n        \"securityContext\": {},\n        \"serviceAccount\": {\n          \"annotations\": {},\n          \"automount\": true,\n          \"enabled\": true,\n          \"extraLabels\": {},\n          \"name\": \"\"\n        },\n        \"serviceMonitor\": {\n          \"additionalLabels\": {},\n          \"enabled\": true,\n          \"interval\": \"30s\",\n          \"scrapeTimeout\": \"25s\"\n        },\n        \"tolerations\": []\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"backup\"\n    },\n    \"spec\": {\n      \"args\": [\n        \"--single-transaction\",\n        \"--all-databases\"\n      ],\n      \"logLevel\": \"info\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"maxRetention\": \"720h\",\n      \"resources\": {\n        \"limits\": {\n          \"cpu\": \"300m\",\n          \"memory\": \"512Mi\"\n        },\n        \"requests\": {\n          \"cpu\": \"100m\",\n          \"memory\": \"128Mi\"\n        }\n      },\n      \"schedule\": {\n        \"cron\": \"*/1 * * * *\",\n        \"suspend\": false\n      },\n      \"storage\": {\n        \"s3\": {\n          \"accessKeyIdSecretKeyRef\": {\n            \"key\": \"access-key-id\",\n            \"name\": \"minio\"\n          },\n          \"bucket\": \"backups\",\n          \"endpoint\": \"minio.minio.svc.cluster.local:9000\",\n          \"prefix\": \"mariadb\",\n          \"secretAccessKeySecretKeyRef\": {\n            \"key\": \"secret-access-key\",\n            \"name\": \"minio\"\n          },\n          \"tls\": {\n            \"caSecretKeyRef\": {\n              \"key\": \"ca.crt\",\n              \"name\": \"minio-ca\"\n            },\n            \"enabled\": true\n          }\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Connection\",\n    \"metadata\": {\n      \"name\": \"connection\"\n    },\n    \"spec\": {\n      \"database\": \"mariadb\",\n      \"healthCheck\": {\n        \"interval\": \"10s\",\n        \"retryInterval\": \"3s\"\n      },\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"params\": {\n        \"parseTime\": \"true\"\n      },\n      \"passwordSecretKeyRef\": {\n        \"key\": \"password\",\n        \"name\": \"mariadb\"\n      },\n      \"secretName\": \"connection\",\n      \"secretTemplate\": {\n        \"annotations\": {\n          \"k8s.mariadb.com/connection\": \"sample\"\n        },\n        \"databaseKey\": \"database\",\n        \"hostKey\": \"host\",\n        \"key\": \"dsn\",\n        \"labels\": {\n          \"k8s.mariadb.com/connection\": \"sample\"\n        },\n        \"passwordKey\": \"password\",\n        \"portKey\": \"port\",\n        \"usernameKey\": \"username\"\n      },\n      \"serviceName\": \"mariadb\",\n      \"username\": \"mariadb\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Database\",\n    \"metadata\": {\n      \"name\": \"data-test\"\n    },\n    \"spec\": {\n      \"characterSet\": \"utf8\",\n      \"collate\": \"utf8_general_ci\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"retryInterval\": \"5s\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Grant\",\n    \"metadata\": {\n      \"name\": \"grant\"\n    },\n    \"spec\": {\n      \"database\": \"*\",\n      \"grantOption\": true,\n      \"host\": \"%\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"privileges\": [\n        \"SELECT\",\n        \"INSERT\",\n        \"UPDATE\"\n      ],\n      \"requeueInterval\": \"30s\",\n      \"retryInterval\": \"5s\",\n      \"table\": \"*\",\n      \"username\": \"user\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"MariaDB\",\n    \"metadata\": {\n      \"name\": \"mariadb\"\n    },\n    \"spec\": {\n      \"connection\": {\n        \"secretName\": \"mariadb-conn\",\n        \"secretTemplate\": {\n          \"key\": \"dsn\"\n        }\n      },\n      \"database\": \"mariadb\",\n      \"galera\": {\n        \"enabled\": true\n      },\n      \"metrics\": {\n        \"enabled\": true,\n        \"passwordSecretKeyRef\": {\n          \"generate\": true,\n          \"key\": \"password\",\n          \"name\": \"mariadb-metrics\"\n        }\n      },\n      \"myCnf\": \"[mariadb]\\nbind-address=*\\ndefault_storage_engine=InnoDB\\nbinlog_format=row\\ninnodb_autoinc_lock_mode=2\\ninnodb_buffer_pool_size=1024M\\nmax_allowed_packet=256M\\n\",\n      \"passwordSecretKeyRef\": {\n        \"generate\": true,\n        \"key\": \"password\",\n        \"name\": \"mariadb-password\"\n      },\n      \"primaryConnection\": {\n        \"secretName\": \"mariadb-conn-primary\",\n        \"secretTemplate\": {\n          \"key\": \"dsn\"\n        }\n      },\n      \"primaryService\": {\n        \"type\": \"ClusterIP\"\n      },\n      \"replicas\": 3,\n      \"rootPasswordSecretKeyRef\": {\n        \"generate\": true,\n        \"key\": \"password\",\n        \"name\": \"mariadb-root\"\n      },\n      \"secondaryConnection\": {\n        \"secretName\": \"mariadb-conn-secondary\",\n        \"secretTemplate\": {\n          \"key\": \"dsn\"\n        }\n      },\n      \"secondaryService\": {\n        \"type\": \"ClusterIP\"\n      },\n      \"service\": {\n        \"type\": \"ClusterIP\"\n      },\n      \"storage\": {\n        \"size\": \"1Gi\"\n      },\n      \"updateStrategy\": {\n        \"type\": \"ReplicasFirstPrimaryLast\"\n      },\n      \"username\": \"mariadb\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"MaxScale\",\n    \"metadata\": {\n      \"name\": \"maxscale-galera\"\n    },\n    \"spec\": {\n      \"admin\": {\n        \"guiEnabled\": true,\n        \"port\": 8989\n      },\n      \"auth\": {\n        \"generate\": true\n      },\n      \"config\": {\n        \"sync\": {\n          \"database\": \"mysql\",\n          \"interval\": \"5s\",\n          \"timeout\": \"10s\"\n        }\n      },\n      \"connection\": {\n        \"port\": 3306,\n        \"secretName\": \"mxs-galera-conn\"\n      },\n      \"guiKubernetesService\": {\n        \"metadata\": {\n          \"annotations\": {\n            \"metallb.universe.tf/loadBalancerIPs\": \"172.18.0.231\"\n          }\n        },\n        \"type\": \"LoadBalancer\"\n      },\n      \"kubernetesService\": {\n        \"annotations\": {\n          \"metallb.universe.tf/loadBalancerIPs\": \"172.18.0.224\"\n        },\n        \"type\": \"LoadBalancer\"\n      },\n      \"mariaDbRef\": {\n        \"name\": \"mariadb-galera\"\n      },\n      \"monitor\": {\n        \"cooperativeMonitoring\": \"majority_of_all\",\n        \"interval\": \"2s\",\n        \"params\": {\n          \"available_when_donor\": \"false\",\n          \"disable_master_failback\": \"false\",\n          \"disable_master_role_setting\": \"false\"\n        }\n      },\n      \"replicas\": 3,\n      \"requeueInterval\": \"10s\",\n      \"services\": [\n        {\n          \"listener\": {\n            \"params\": {\n              \"connection_metadata\": \"tx_isolation=auto\"\n            },\n            \"port\": 3306,\n            \"protocol\": \"MariaDBProtocol\"\n          },\n          \"name\": \"rw-router\",\n          \"params\": {\n            \"master_accept_reads\": \"true\",\n            \"max_replication_lag\": \"3s\",\n            \"max_slave_connections\": \"255\",\n            \"transaction_replay\": \"true\",\n            \"transaction_replay_attempts\": \"10\",\n            \"transaction_replay_timeout\": \"5s\"\n          },\n          \"router\": \"readwritesplit\"\n        },\n        {\n          \"listener\": {\n            \"port\": 3307\n          },\n          \"name\": \"rconn-master-router\",\n          \"params\": {\n            \"master_accept_reads\": \"true\",\n            \"max_replication_lag\": \"3s\",\n            \"router_options\": \"master\"\n          },\n          \"router\": \"readconnroute\"\n        },\n        {\n          \"listener\": {\n            \"port\": 3308\n          },\n          \"name\": \"rconn-slave-router\",\n          \"params\": {\n            \"max_replication_lag\": \"3s\",\n            \"router_options\": \"slave\"\n          },\n          \"router\": \"readconnroute\"\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"PhysicalBackup\",\n    \"metadata\": {\n      \"name\": \"physicalbackup\"\n    },\n    \"spec\": {\n      \"compression\": \"bzip2\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"maxRetention\": \"720h\",\n      \"podAffinity\": true,\n      \"resources\": {\n        \"limits\": {\n          \"cpu\": \"300m\",\n          \"memory\": \"512Mi\"\n        },\n        \"requests\": {\n          \"cpu\": \"100m\",\n          \"memory\": \"128Mi\"\n        }\n      },\n      \"schedule\": {\n        \"cron\": \"*/1 * * * *\",\n        \"immediate\": true,\n        \"suspend\": false\n      },\n      \"serviceAccountName\": \"backup\",\n      \"stagingStorage\": {\n        \"persistentVolumeClaim\": {\n          \"accessModes\": [\n            \"ReadWriteOnce\"\n          ],\n          \"resources\": {\n            \"requests\": {\n              \"storage\": \"1Gi\"\n            }\n          }\n        }\n      },\n      \"storage\": {\n        \"s3\": {\n          \"accessKeyIdSecretKeyRef\": {\n            \"key\": \"access-key-id\",\n            \"name\": \"minio\"\n          },\n          \"bucket\": \"physicalbackups\",\n          \"endpoint\": \"minio.minio.svc.cluster.local:9000\",\n          \"prefix\": \"mariadb\",\n          \"region\": \"us-east-1\",\n          \"secretAccessKeySecretKeyRef\": {\n            \"key\": \"secret-access-key\",\n            \"name\": \"minio\"\n          },\n          \"tls\": {\n            \"caSecretKeyRef\": {\n              \"key\": \"ca.crt\",\n              \"name\": \"minio-ca\"\n            },\n            \"enabled\": true\n          }\n        }\n      },\n      \"timeout\": \"1h\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Restore\",\n    \"metadata\": {\n      \"name\": \"restore\"\n    },\n    \"spec\": {\n      \"backupRef\": {\n        \"name\": \"backup\"\n      },\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"resources\": {\n        \"limits\": {\n          \"cpu\": \"300m\",\n          \"memory\": \"512Mi\"\n        },\n        \"requests\": {\n          \"cpu\": \"100m\",\n          \"memory\": \"128Mi\"\n        }\n      },\n      \"targetRecoveryTime\": \"2023-12-19T09:00:00Z\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"SqlJob\",\n    \"metadata\": {\n      \"name\": \"03-stars\"\n    },\n    \"spec\": {\n      \"database\": \"mariadb\",\n      \"dependsOn\": [\n        {\n          \"name\": \"01-users\"\n        },\n        {\n          \"name\": \"02-repos\"\n        }\n      ],\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"passwordSecretKeyRef\": {\n        \"key\": \"password\",\n        \"name\": \"mariadb\"\n      },\n      \"schedule\": {\n        \"cron\": \"*/1 * * * *\",\n        \"suspend\": false\n      },\n      \"sql\": \"CREATE TABLE IF NOT EXISTS stars (\\n  id bigint PRIMARY KEY AUTO_INCREMENT,\\n  user_id bigint NOT NULL,\\n  repo_id bigint NOT NULL,\\n  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,\\n  FOREIGN KEY (repo_id) REFERENCES repos(id) ON DELETE CASCADE,\\n  UNIQUE KEY (user_id, repo_id)\\n);\\nINSERT INTO stars(user_id, repo_id) \\n  VALUES((SELECT id FROM users ORDER BY RAND() LIMIT 1), (SELECT id FROM repos ORDER BY RAND() LIMIT 1))\\n  ON DUPLICATE KEY UPDATE id=id;\\nDELETE FROM stars WHERE id = (SELECT id FROM stars ORDER BY RAND() LIMIT 1);\\nSELECT r.name AS repo, COUNT(*) AS stars\\nFROM stars s\\nJOIN repos r\\nON s.repo_id = r.id\\nGROUP BY r.id\\nORDER BY stars DESC;\",\n      \"username\": \"mariadb\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"User\",\n    \"metadata\": {\n      \"name\": \"user\"\n    },\n    \"spec\": {\n      \"host\": \"%\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"maxUserConnections\": 20,\n      \"passwordSecretKeyRef\": {\n        \"key\": \"password\",\n        \"name\": \"mariadb\"\n      },\n      \"retryInterval\": \"5s\"\n    }\n  }\n]",
        "capabilities": "Deep Insights",
        "categories": "Database",
        "containerImage": "ghcr.io/mariadb-operator/mariadb-operator-helm:25.8.3",
        "createdAt": "2025-08-08T12:14:12Z",
        "description": "Run and operate MariaDB in a cloud native way",
        "features.operators.openshift.io/disconnected": "false",
        "features.operators.openshift.io/fips-compliant": "false",
        "features.operators.openshift.io/proxy-aware": "false",
        "features.operators.openshift.io/tls-profiles": "false",
        "features.operators.openshift.io/token-auth-aws": "false",
        "features.operators.openshift.io/token-auth-azure": "false",
        "features.operators.openshift.io/token-auth-gcp": "false",
        "olm.operatorGroup": "global-operators",
        "olm.operatorNamespace": "operators",
        "operatorframework.io/properties": "{\"properties\":[{\"type\":\"olm.gvk\",\"value\":{\"group\":\"helm.mariadb.mmontes.io\",\"kind\":\"MariadbOperator\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Backup\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Connection\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Database\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Grant\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"MariaDB\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"MaxScale\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"PhysicalBackup\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Restore\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"SqlJob\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"User\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.package\",\"value\":{\"packageName\":\"mariadb-operator\",\"version\":\"25.8.3\"}}]}",
        "operators.operatorframework.io/builder": "operator-sdk-v1.26.0",
        "operators.operatorframework.io/project_layout": "helm.sdk.operatorframework.io/v1",
        "repository": "https://github.com/mariadb-operator/mariadb-operator",
        "support": "mariadb-operator"
      },
      "owned_crds": [
        "backups.k8s.mariadb.com",
        "connections.k8s.mariadb.com",
        "databases.k8s.mariadb.com",
        "grants.k8s.mariadb.com",
        "mariadboperators.helm.mariadb.mmontes.io",
        "mariadbs.k8s.mariadb.com",
        "maxscales.k8s.mariadb.com",
        "physicalbackups.k8s.mariadb.com",
        "restores.k8s.mariadb.com",
        "sqljobs.k8s.mariadb.com",
        "users.k8s.mariadb.com"
      ],
      "required_crds": [],
      "permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps"
              ],
              "verbs": [
                "get",
                "list",
                "watch",
                "create",
                "update",
                "patch",
                "delete"
              ]
            },
            {
              "apiGroups": [
                "coordination.k8s.io"
              ],
              "resources": [
                "leases"
              ],
              "verbs": [
                "get",
                "list",
                "watch",
                "create",
                "update",
                "patch",
                "delete"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "events"
              ],
              "verbs": [
                "create",
                "patch"
              ]
            }
          ],
          "serviceAccountName": "mariadb-operator-helm-controller-manager"
        }
      ],
      "cluster_permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "namespaces"
              ],
              "verbs": [
                "get"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "secrets"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "events"
              ],
              "verbs": [
                "create"
              ]
            },
            {
              "apiGroups": [
                "helm.mariadb.mmontes.io"
              ],
              "resources": [
                "mariadboperators",
                "mariadboperators/status",
                "mariadboperators/finalizers"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "rbac.authorization.k8s.io"
              ],
              "resources": [
                "clusterrolebindings",
                "clusterroles"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "admissionregistration.k8s.io"
              ],
              "resources": [
                "validatingwebhookconfigurations",
                "mutatingwebhookconfigurations"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "rbac.authorization.k8s.io"
              ],
              "resources": [
                "rolebindings",
                "roles"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "apps"
              ],
              "resources": [
                "deployments"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "serviceaccounts",
                "services"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "apiextensions.k8s.io"
              ],
              "resources": [
                "customresourcedefinitions"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "cert-manager.io"
              ],
              "resources": [
                "certificates",
                "issuers"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "monitoring.coreos.com"
              ],
              "resources": [
                "servicemonitors"
              ],
              "verbs": [
                "*"
              ]
            }
          ],
          "serviceAccountName": "mariadb-operator-helm-controller-manager"
        }
      ],
      "replaces": "mariadb-operator.v25.8.2",
      "skips": [],
      "min_kube_version": "1.16.0"
    },
    {
      "name": "oracle-database-operator.v1.2.0",
      "namespace": "cert-manager",
      "display_name": "Oracle Database Operator",
      "version": "1.2.0",
      "phase": "Installing",
      "description": "As part of Oracle's resolution to make Oracle Database Kubernetes native (that is, observable and operable by Kubernetes), Oracle released Oracle Database Operator for Kubernetes (OraOperator or the operator). OraOperator extends the Kubernetes API with custom resources and controllers for automating Oracle Database lifecycle management.\nIn this v1.2.0 production release, OraOperator supports the following database configurations and infrastructure:\n##Supported Database Configurations:\n* Oracle Cloud Infrastructure (OCI) Databases\n  * Oracle Autonomous Database Serverless (ADB-S)\n  * Oracle Autonomous Database on Dedicated on (ADB-D)\n  * Oracle Base Database Cloud Service (Base DB)\n* Containerized Database deployments on Kubernetes\n  * Oracle Kubernetes Engine (OKE) and Oracle Cloud Native Environments (OCNE)\n    * Single Instance databases (SIDB)\n    * Globally Distributed Databases (Shared)\n    * Oracle Data Guard\n    * True Cache (Preview release)\n    * Oracle Database Observability\n* On-Premises Databases\n  * Oracle Multitenant Databases (CDB/PDBs management)\n  * ORDS Services\n\nRefer to full feature list and capabilities: [https://github.com/oracle/oracle-database-operator/blob/main/README.md](https://github.com/oracle/oracle-database-operator/blob/main/README.md)\n",
      "provider": "Oracle",
      "install_strategy": "OwnNamespace",
      "creation_timestamp": "2025-09-07T09:13:37Z",
      "labels": {
        "olm.copiedFrom": "operators",
        "olm.managed": "true"
      },
      "annotations": {
        "alm-examples": "[\n  {\n    \"apiVersion\": \"database.oracle.com/v1alpha1\",\n    \"kind\": \"CDB\",\n    \"metadata\": {\n      \"name\": \"cdb-dev\",\n      \"namespace\": \"oracle-database-operator-system\"\n    },\n    \"spec\": {\n      \"cdbAdminPwd\": {\n        \"secret\": {\n          \"key\": \"cdbadmin_pwd\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"cdbAdminUser\": {\n        \"secret\": {\n          \"key\": \"cdbadmin_user\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"cdbName\": \"devcdb\",\n      \"dbPort\": 1521,\n      \"dbServer\": \"172.17.0.4\",\n      \"ordsImage\": \"\",\n      \"ordsImagePullPolicy\": \"Always\",\n      \"ordsPwd\": {\n        \"secret\": {\n          \"key\": \"ords_pwd\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"replicas\": 1,\n      \"serviceName\": \"devdb.example.com\",\n      \"sysAdminPwd\": {\n        \"secret\": {\n          \"key\": \"sysadmin_pwd\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"webServerPwd\": {\n        \"secret\": {\n          \"key\": \"webserver_pwd\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"webServerUser\": {\n        \"secret\": {\n          \"key\": \"webserver_user\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v1alpha1\",\n    \"kind\": \"DbcsSystem\",\n    \"metadata\": {\n      \"name\": \"dbcssystem-sample\"\n    },\n    \"spec\": {\n      \"foo\": \"bar\"\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v1alpha1\",\n    \"kind\": \"PDB\",\n    \"metadata\": {\n      \"labels\": {\n        \"cdb\": \"cdb-dev\"\n      },\n      \"name\": \"pdb1\",\n      \"namespace\": \"oracle-database-operator-system\"\n    },\n    \"spec\": {\n      \"action\": \"Create\",\n      \"adminName\": {\n        \"secret\": {\n          \"key\": \"sysadmin_user\",\n          \"secretName\": \"pdb1-secret\"\n        }\n      },\n      \"adminPwd\": {\n        \"secret\": {\n          \"key\": \"sysadmin_pwd\",\n          \"secretName\": \"pdb1-secret\"\n        }\n      },\n      \"cdbName\": \"devcdb\",\n      \"cdbResName\": \"cdb-dev\",\n      \"fileNameConversions\": \"NONE\",\n      \"pdbName\": \"pdbdev\",\n      \"tempSize\": \"100M\",\n      \"totalSize\": \"1G\"\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v4\",\n    \"kind\": \"AutonomousContainerDatabase\",\n    \"metadata\": {\n      \"name\": \"autonomouscontainerdatabase-sample\"\n    },\n    \"spec\": {\n      \"autonomousExadataVMClusterOCID\": \"ocid1.autonomousexainfrastructure...\",\n      \"compartmentOCID\": \"ocid1.compartment... OR ocid1.tenancy...\",\n      \"displayName\": \"newACD\",\n      \"ociConfig\": {\n        \"configMapName\": \"oci-cred\",\n        \"secretName\": \"oci-privatekey\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v4\",\n    \"kind\": \"AutonomousDatabase\",\n    \"metadata\": {\n      \"name\": \"autonomousdatabase-sample\"\n    },\n    \"spec\": {\n      \"action\": \"Create\",\n      \"details\": {\n        \"adminPassword\": {\n          \"k8sSecret\": {\n            \"name\": \"admin-password\"\n          }\n        },\n        \"compartmentId\": \"ocid1.compartment... OR ocid1.tenancy...\",\n        \"cpuCoreCount\": 1,\n        \"dataStorageSizeInTBs\": 1,\n        \"dbName\": \"NewADB\",\n        \"displayName\": \"NewADB\"\n      },\n      \"ociConfig\": {\n        \"configMapName\": \"oci-cred\",\n        \"secretName\": \"oci-privatekey\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v4\",\n    \"kind\": \"AutonomousDatabaseBackup\",\n    \"metadata\": {\n      \"name\": \"autonomousdatabasebackup-sample\"\n    },\n    \"spec\": {\n      \"displayName\": \"autonomousdatabasebackup-sample\",\n      \"isLongTermBackup\": true,\n      \"ociConfig\": {\n        \"configMapName\": \"oci-cred\",\n        \"secretName\": \"oci-privatekey\"\n      },\n      \"retentionPeriodInDays\": 90,\n      \"target\": {\n        \"k8sADB\": {\n          \"name\": \"autonomousdatabase-sample\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v4\",\n    \"kind\": \"SingleInstanceDatabase\",\n    \"metadata\": {\n      \"name\": \"sidb-sample\",\n      \"namespace\": \"default\"\n    },\n    \"spec\": {\n      \"adminPassword\": {\n        \"secretName\": \"db-admin-secret\"\n      },\n      \"archiveLog\": true,\n      \"charset\": \"AL32UTF8\",\n      \"edition\": \"enterprise\",\n      \"image\": {\n        \"pullFrom\": \"container-registry.oracle.com/database/enterprise_ru:19\",\n        \"pullSecrets\": \"oracle-container-registry-secret\"\n      },\n      \"pdbName\": \"orclpdb1\",\n      \"persistence\": {\n        \"accessMode\": \"ReadWriteOnce\",\n        \"size\": \"100Gi\",\n        \"storageClass\": \"oci-bv\"\n      },\n      \"replicas\": 1,\n      \"sid\": \"ORCL1\"\n    }\n  },\n  {\n    \"apiVersion\": \"observability.oracle.com/v1alpha1\",\n    \"kind\": \"DatabaseObserver\",\n    \"metadata\": {\n      \"name\": \"obs-sample\"\n    },\n    \"spec\": {\n      \"database\": {\n        \"dbConnectionString\": {\n          \"key\": \"connection\",\n          \"secret\": \"db-secret\"\n        },\n        \"dbPassword\": {\n          \"key\": \"password\",\n          \"secret\": \"db-secret\"\n        },\n        \"dbUser\": {\n          \"key\": \"username\",\n          \"secret\": \"db-secret\"\n        },\n        \"dbWallet\": {\n          \"secret\": \"instance-wallet\"\n        }\n      },\n      \"exporter\": {\n        \"configuration\": {\n          \"configmap\": {\n            \"configmapName\": \"devcm-oradevdb-config\",\n            \"key\": \"config.toml\"\n          }\n        },\n        \"image\": \"container-registry.oracle.com/database/observability-exporter:latest\",\n        \"service\": {\n          \"port\": 9161\n        }\n      },\n      \"ociConfig\": {\n        \"configMapName\": \"oci-cred\",\n        \"secretName\": \"oci-privatekey\"\n      },\n      \"prometheus\": {\n        \"labels\": {\n          \"app\": \"app-sample-label\"\n        },\n        \"port\": \"metrics\"\n      },\n      \"replicas\": 1\n    }\n  }\n]",
        "capabilities": "Seamless Upgrades",
        "categories": "Database",
        "containerImage": "container-registry.oracle.com/database/operator:1.2.0",
        "createdAt": "2025-04-10T20:09:48Z",
        "olm.operatorGroup": "global-operators",
        "olm.operatorNamespace": "operators",
        "operatorframework.io/properties": "{\"properties\":[{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousContainerDatabase\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousContainerDatabase\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabase\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabase\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabaseBackup\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabaseBackup\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabaseRestore\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabaseRestore\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"CDB\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"CDB\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"DataguardBroker\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"DataguardBroker\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"DbcsSystem\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"DbcsSystem\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"LREST\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"LRPDB\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"OracleRestDataService\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"OracleRestDataService\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"OrdsSrvs\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"PDB\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"PDB\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"ShardingDatabase\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"ShardingDatabase\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"SingleInstanceDatabase\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"SingleInstanceDatabase\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"observability.oracle.com\",\"kind\":\"DatabaseObserver\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"observability.oracle.com\",\"kind\":\"DatabaseObserver\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"observability.oracle.com\",\"kind\":\"DatabaseObserver\",\"version\":\"v4\"}},{\"type\":\"olm.package\",\"value\":{\"packageName\":\"oracle-database-operator\",\"version\":\"1.2.0\"}}]}",
        "operators.operatorframework.io/builder": "operator-sdk-v1.39.2",
        "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v4"
      },
      "owned_crds": [
        "autonomouscontainerdatabases.database.oracle.com",
        "autonomouscontainerdatabases.database.oracle.com",
        "autonomousdatabasebackups.database.oracle.com",
        "autonomousdatabasebackups.database.oracle.com",
        "autonomousdatabaserestores.database.oracle.com",
        "autonomousdatabaserestores.database.oracle.com",
        "autonomousdatabases.database.oracle.com",
        "autonomousdatabases.database.oracle.com",
        "cdbs.database.oracle.com",
        "cdbs.database.oracle.com",
        "databaseobservers.observability.oracle.com",
        "databaseobservers.observability.oracle.com",
        "databaseobservers.observability.oracle.com",
        "dataguardbrokers.database.oracle.com",
        "dataguardbrokers.database.oracle.com",
        "dbcssystems.database.oracle.com",
        "dbcssystems.database.oracle.com",
        "lrests.database.oracle.com",
        "lrpdbs.database.oracle.com",
        "oraclerestdataservices.database.oracle.com",
        "oraclerestdataservices.database.oracle.com",
        "ordssrvs.database.oracle.com",
        "pdbs.database.oracle.com",
        "pdbs.database.oracle.com",
        "shardingdatabases.database.oracle.com",
        "shardingdatabases.database.oracle.com",
        "singleinstancedatabases.database.oracle.com",
        "singleinstancedatabases.database.oracle.com"
      ],
      "required_crds": [],
      "permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps"
              ],
              "verbs": [
                "get",
                "list",
                "watch",
                "create",
                "update",
                "patch",
                "delete"
              ]
            },
            {
              "apiGroups": [
                "coordination.k8s.io"
              ],
              "resources": [
                "leases"
              ],
              "verbs": [
                "get",
                "list",
                "watch",
                "create",
                "update",
                "patch",
                "delete"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps/status"
              ],
              "verbs": [
                "get",
                "update",
                "patch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "events"
              ],
              "verbs": [
                "create",
                "patch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps",
                "containers",
                "deployments",
                "events",
                "namespaces",
                "persistentvolumeclaims",
                "pods",
                "pods/exec",
                "pods/log",
                "replicasets",
                "secrets",
                "services"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps/status",
                "daemonsets/status",
                "deployments/status",
                "services/status",
                "statefulsets/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "persistentvolumes"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "secrets/status"
              ],
              "verbs": [
                "get"
              ]
            },
            {
              "apiGroups": [
                "''"
              ],
              "resources": [
                "statefulsets/finalizers"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "apps"
              ],
              "resources": [
                "configmaps"
              ],
              "verbs": [
                "get",
                "list"
              ]
            },
            {
              "apiGroups": [
                "apps"
              ],
              "resources": [
                "daemonsets",
                "deployments",
                "pods",
                "replicasets",
                "services",
                "statefulsets"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "coordination.k8s.io"
              ],
              "resources": [
                "leases"
              ],
              "verbs": [
                "create",
                "get",
                "list",
                "update"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "autonomouscontainerdatabases",
                "autonomousdatabases",
                "cdbs",
                "dataguardbrokers",
                "dbcssystems",
                "events",
                "lrests",
                "lrpdbs",
                "oraclerestdataservices",
                "ordssrvs",
                "pdbs",
                "shardingdatabases",
                "singleinstancedatabases"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "autonomouscontainerdatabases/status",
                "autonomousdatabasebackups/status",
                "autonomousdatabaserestores/status",
                "cdbs/status",
                "dataguardbrokers/status",
                "dbcssystems/status",
                "lrests/status",
                "lrpdbs/status",
                "oraclerestdataservices/status",
                "ordssrvs/status",
                "pdbs/status",
                "shardingdatabases/status",
                "singleinstancedatabases/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "autonomousdatabasebackups",
                "autonomousdatabaserestores"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "autonomousdatabases/status"
              ],
              "verbs": [
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "cdbs/finalizers",
                "dataguardbrokers/finalizers",
                "lrests/finalizers",
                "oraclerestdataservices/finalizers",
                "ordssrvs/finalizers",
                "singleinstancedatabases/finalizers"
              ],
              "verbs": [
                "update"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "dbcssystems/finalizers",
                "lrpdbs/finalizers",
                "pdbs/finalizers",
                "shardingdatabases/finalizers"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "monitoring.coreos.com"
              ],
              "resources": [
                "servicemonitors"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "observability.oracle.com"
              ],
              "resources": [
                "databaseobservers"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "observability.oracle.com"
              ],
              "resources": [
                "databaseobservers/finalizers"
              ],
              "verbs": [
                "update"
              ]
            },
            {
              "apiGroups": [
                "observability.oracle.com"
              ],
              "resources": [
                "databaseobservers/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "storage.k8s.io"
              ],
              "resources": [
                "storageclasses"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            }
          ],
          "serviceAccountName": "default"
        }
      ],
      "cluster_permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                "authentication.k8s.io"
              ],
              "resources": [
                "tokenreviews"
              ],
              "verbs": [
                "create"
              ]
            },
            {
              "apiGroups": [
                "authorization.k8s.io"
              ],
              "resources": [
                "subjectaccessreviews"
              ],
              "verbs": [
                "create"
              ]
            }
          ],
          "serviceAccountName": "default"
        }
      ],
      "replaces": "oracle-database-operator.v1.1.0",
      "skips": [],
      "min_kube_version": ""
    },
    {
      "name": "cloudnative-pg.v1.27.0",
      "namespace": "default",
      "display_name": "CloudNativePG",
      "version": "1.27.0",
      "phase": "Succeeded",
      "description": "Main features:\n\n- Direct integration with the Kubernetes API server for High Availability,\n  eliminating the need for external tools.\n- Self-healing capabilities, including:\n    - Automated failover by promoting the most aligned replica.\n    - Automatic recreation of failed replicas.\n- Planned switchover of the primary instance by promoting a selected replica.\n- Declarative management of key PostgreSQL configurations, including:\n    - PostgreSQL settings.\n    - Roles, users, and groups.\n    - Databases, extensions, and schemas.\n    - Tablespaces (including temporary tablespaces).\n- Flexible instance definition, supporting any number of instances (minimum 1\n  primary server).\n- Scale-up/down capabilities to dynamically adjust cluster size.\n- Read-Write and Read-Only Services, ensuring applications connect correctly:\n    - *Read-Write Service*: Routes connections to the primary server.\n    - *Read-Only Service*: Distributes connections among replicas for read workloads.\n- Support for quorum-based and priority-based PostgreSQL Synchronous\n  Replication.\n- Replica clusters enabling PostgreSQL distributed topologies across multiple\n  Kubernetes clusters (private, public, hybrid, and multi-cloud).\n- Delayed Replica clusters for point-in-time access to historical data.\n- Persistent volume management, including:\n    - Support for Local Persistent Volumes with PVC templates.\n    - Reuse of Persistent Volumes storage in Pods.\n    - Separate volumes for WAL files and tablespaces.\n- Backup and recovery options, including:\n    - Integration with the [Barman Cloud plugin](https://github.com/cloudnative-pg/plugin-barman-cloud)\n      for continuous online backup via WAL archiving to AWS S3, S3-compatible\n      services, Azure Blob Storage, and Google Cloud Storage, with support for\n      retention policies based on a configurable recovery window.\n    - Backups using volume snapshots (where supported by storage classes).\n    - Full and Point-In-Time recovery from volume snapshots or object stores (via Barman Cloud plugin).\n    - Backup from standby replicas to reduce primary workload impact.\n- Offline and online import of PostgreSQL databases, including major upgrades:\n    - *Offline Import*: Direct restore from existing databases.\n    - *Online Import*: PostgreSQL native logical replication via the `Subscription` resource.\n- Offline In-Place Major Upgrades of PostgreSQL\n- High Availability physical replication slots, including synchronization of\n  user-defined replication slots.\n- Parallel WAL archiving and restore, ensuring high-performance data\n  synchronization in high-write environments.\n- TLS support, including:\n    - Secure connections and client certificate authentication.\n    - Custom TLS certificates (integrated with `cert-manager`).\n- Startup and readiness probes, including replica probes based on desired lag\n  from the primary.\n- Declarative rolling updates for:\n    - PostgreSQL minor versions.\n    - Operator upgrades (in-place or rolling updates).\n- Standard output logging of PostgreSQL error messages in JSON format for\n  easier integration with log aggregation tools.\n- Prometheus-compatible metrics exporter (`metrics` port 9187) for custom\n  monitoring.\n- `cnpg` plugin for `kubectl` to simplify cluster operations.\n- Cluster hibernation for resource efficiency in inactive states.\n- Fencing of PostgreSQL clusters (full cluster or subset) to isolate instances\n  when needed.\n- Connection pooling with PgBouncer for improved database efficiency.\n- OLM (Operator Lifecycle Manager) installation support for streamlined\n  deployments.\n- Multi-arch container images, including Software Bill of Materials (SBOM) and\n  provenance attestations for security compliance.\n",
      "provider": "The CloudNativePG Contributors",
      "install_strategy": "OwnNamespace",
      "creation_timestamp": "2025-09-07T09:12:58Z",
      "labels": {
        "olm.copiedFrom": "operators",
        "olm.managed": "true",
        "operatorframework.io/arch.amd64": "supported"
      },
      "annotations": {
        "alm-examples": "[\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"backup-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      }\n    },\n    \"status\": {\n      \"serverName\": null\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Cluster\",\n    \"metadata\": {\n      \"name\": \"cluster-sample\"\n    },\n    \"spec\": {\n      \"instances\": 3,\n      \"logLevel\": \"info\",\n      \"primaryUpdateStrategy\": \"unsupervised\",\n      \"storage\": {\n        \"size\": \"1Gi\"\n      },\n      \"walStorage\": {\n        \"size\": \"1Gi\"\n      }\n    },\n    \"status\": {\n      \"instances\": 3\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"ClusterImageCatalog\",\n    \"metadata\": {\n      \"name\": \"postgresql\"\n    },\n    \"spec\": {\n      \"images\": [\n        {\n          \"image\": \"ghcr.io/cloudnative-pg/postgresql@sha256:1c97e0d6e94d8b335be7f258eeda2202966df5fde0c934eef4b13c760ec6a891\",\n          \"major\": 15\n        },\n        {\n          \"image\": \"ghcr.io/cloudnative-pg/postgresql@sha256:ee2e3ce7f0ea935c3f4ab245c0b3959c9f1c49816ae02222ceb6bc347f48e43b\",\n          \"major\": 16\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Database\",\n    \"metadata\": {\n      \"name\": \"database-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      },\n      \"name\": \"database-sample\",\n      \"owner\": \"app\"\n    },\n    \"status\": {\n      \"applied\": false\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"ImageCatalog\",\n    \"metadata\": {\n      \"name\": \"postgresql\",\n      \"namespace\": \"default\"\n    },\n    \"spec\": {\n      \"images\": [\n        {\n          \"image\": \"ghcr.io/cloudnative-pg/postgresql@sha256:1c97e0d6e94d8b335be7f258eeda2202966df5fde0c934eef4b13c760ec6a891\",\n          \"major\": 15\n        },\n        {\n          \"image\": \"ghcr.io/cloudnative-pg/postgresql@sha256:ee2e3ce7f0ea935c3f4ab245c0b3959c9f1c49816ae02222ceb6bc347f48e43b\",\n          \"major\": 16\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Pooler\",\n    \"metadata\": {\n      \"name\": \"pooler-sample-rw\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      },\n      \"instances\": 1,\n      \"pgbouncer\": {\n        \"poolMode\": \"session\"\n      },\n      \"type\": \"rw\"\n    },\n    \"status\": {\n      \"instances\": 1\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Publication\",\n    \"metadata\": {\n      \"name\": \"publication-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      },\n      \"dbname\": \"app\",\n      \"name\": \"pub\",\n      \"target\": {\n        \"allTables\": true\n      }\n    },\n    \"status\": {\n      \"applied\": false\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"ScheduledBackup\",\n    \"metadata\": {\n      \"name\": \"scheduledbackup-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      },\n      \"schedule\": \"0 0 0 * * *\"\n    },\n    \"status\": {\n      \"lastCheckTime\": null\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Subscription\",\n    \"metadata\": {\n      \"name\": \"subscription-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample-dest\"\n      },\n      \"dbname\": \"app\",\n      \"externalClusterName\": \"cluster-sample\",\n      \"name\": \"sub\",\n      \"publicationName\": \"pub\"\n    },\n    \"status\": {\n      \"applied\": false\n    }\n  }\n]",
        "capabilities": "Auto Pilot",
        "categories": "Database",
        "certified": "true",
        "containerImage": "ghcr.io/cloudnative-pg/cloudnative-pg@sha256:53995e9d6a7760c77d77e5298f78b49029427494f4dd933d5fa7a74f7af3bb44",
        "createdAt": "2025-08-12T14:08:35Z",
        "description": "CloudNativePG is an open source operator designed to manage highly available PostgreSQL databases with a primary/standby architecture on any supported Kubernetes cluster.",
        "features.operators.openshift.io/disconnected": "true",
        "features.operators.openshift.io/fips-compliant": "false",
        "features.operators.openshift.io/proxy-aware": "false",
        "features.operators.openshift.io/tls-profiles": "false",
        "features.operators.openshift.io/token-auth-aws": "false",
        "features.operators.openshift.io/token-auth-azure": "false",
        "features.operators.openshift.io/token-auth-gcp": "false",
        "olm.operatorGroup": "global-operators",
        "olm.operatorNamespace": "operators",
        "operatorframework.io/properties": "{\"properties\":[{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Backup\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Cluster\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"ClusterImageCatalog\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Database\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"FailoverQuorum\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"ImageCatalog\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Pooler\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Publication\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"ScheduledBackup\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Subscription\",\"version\":\"v1\"}},{\"type\":\"olm.package\",\"value\":{\"packageName\":\"cloudnative-pg\",\"version\":\"1.27.0\"}}]}",
        "operators.operatorframework.io/builder": "operator-sdk-v1.41.1",
        "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v4",
        "repository": "https://github.com/cloudnative-pg/cloudnative-pg",
        "support": "Community"
      },
      "owned_crds": [
        "backups.postgresql.cnpg.io",
        "clusterimagecatalogs.postgresql.cnpg.io",
        "clusters.postgresql.cnpg.io",
        "databases.postgresql.cnpg.io",
        "failoverquorums.postgresql.cnpg.io",
        "imagecatalogs.postgresql.cnpg.io",
        "poolers.postgresql.cnpg.io",
        "publications.postgresql.cnpg.io",
        "scheduledbackups.postgresql.cnpg.io",
        "subscriptions.postgresql.cnpg.io"
      ],
      "required_crds": [],
      "permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps",
                "secrets",
                "services"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps/status",
                "secrets/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "events"
              ],
              "verbs": [
                "create",
                "patch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "nodes"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "persistentvolumeclaims",
                "pods",
                "pods/exec"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "pods/status"
              ],
              "verbs": [
                "get"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "serviceaccounts"
              ],
              "verbs": [
                "create",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "admissionregistration.k8s.io"
              ],
              "resources": [
                "mutatingwebhookconfigurations",
                "validatingwebhookconfigurations"
              ],
              "verbs": [
                "get",
                "patch"
              ]
            },
            {
              "apiGroups": [
                "apps"
              ],
              "resources": [
                "deployments"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "batch"
              ],
              "resources": [
                "jobs"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "coordination.k8s.io"
              ],
              "resources": [
                "leases"
              ],
              "verbs": [
                "create",
                "get",
                "update"
              ]
            },
            {
              "apiGroups": [
                "monitoring.coreos.com"
              ],
              "resources": [
                "podmonitors"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "policy"
              ],
              "resources": [
                "poddisruptionbudgets"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "backups",
                "clusters",
                "databases",
                "poolers",
                "publications",
                "scheduledbackups",
                "subscriptions"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "backups/status",
                "databases/status",
                "publications/status",
                "scheduledbackups/status",
                "subscriptions/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "clusterimagecatalogs",
                "imagecatalogs"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "clusters/finalizers",
                "poolers/finalizers"
              ],
              "verbs": [
                "update"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "clusters/status",
                "failoverquorums/status",
                "poolers/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "failoverquorums"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "rbac.authorization.k8s.io"
              ],
              "resources": [
                "rolebindings",
                "roles"
              ],
              "verbs": [
                "create",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "snapshot.storage.k8s.io"
              ],
              "resources": [
                "volumesnapshots"
              ],
              "verbs": [
                "create",
                "get",
                "list",
                "patch",
                "watch"
              ]
            }
          ],
          "serviceAccountName": "cnpg-manager"
        }
      ],
      "cluster_permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "nodes"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "clusterimagecatalogs"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            }
          ],
          "serviceAccountName": "cnpg-manager"
        }
      ],
      "replaces": "cloudnative-pg.v1.26.1",
      "skips": [],
      "min_kube_version": "1.23.0"
    },
    {
      "name": "mariadb-operator.v25.8.3",
      "namespace": "default",
      "display_name": "MariaDB Operator",
      "version": "25.8.3",
      "phase": "Succeeded",
      "description": "Install [`mariadb-operator`](https://github.com/mariadb-operator/mariadb-operator) via [OLM](https://olm.operatorframework.io/) using the [helm chart](https://artifacthub.io/packages/helm/mariadb-operator/mariadb-operator).\n\nThis helm operator provides provides a 1:1 mapping between the official helm chart and the [`MariadbOperator`](https://github.com/mariadb-operator/mariadb-operator-helm/blob/main/config/samples/helm_v1alpha1_mariadboperator.yaml) CRD, allowing to install [`mariadb-operator`](https://github.com/mariadb-operator/mariadb-operator) via OLM without having to do any change in the helm chart.\n\nNormally, you would install [`mariadb-operator`](https://github.com/mariadb-operator/mariadb-operator) providing this `values.yaml` to the helm chart:\n```yaml\nimage:\n  repository: ghcr.io/mariadb-operator/mariadb-operator\n  pullPolicy: IfNotPresent\nlogLevel: INFO\nha:\n  enabled: true\nmetrics:\n  enabled: true\n  serviceMonitor:\n    enabled: true\nwebhook:\n  cert:\n    certManager:\n      enabled: true\n```\n\nThis helm chart installation is abstracted in the [`MariadbOperator`](https://github.com/mariadb-operator/mariadb-operator-helm/blob/main/config/samples/helm_v1alpha1_mariadboperator.yaml) CRD, which will be reconciled by the helm operator:\n```yaml\napiVersion: helm.k8s.mariadb.com/v1alpha1\nkind: MariadbOperator\nmetadata:\n  name: mariadb-operator\nspec:\n  image:\n    repository: ghcr.io/mariadb-operator/mariadb-operator\n    pullPolicy: IfNotPresent\n  logLevel: INFO\n  ha:\n    enabled: true\n  metrics:\n    enabled: true\n    serviceMonitor:\n      enabled: true\n  webhook:\n    cert:\n      certManager:\n        enabled: true\n```\n\nOnce you have installed the operator, you will able to install a [`MariaDB`](https://github.com/mariadb-operator/mariadb-operator/blob/main/examples/manifests/mariadb_v1alpha1_mariadb.yaml) instance. Refer to the main [`mariadb-operator`](https://github.com/mariadb-operator/mariadb-operator) documentation for getting started with the rest of CRDs.\n\n## Documentation\n* [mariadb-operator](https://github.com/mariadb-operator/mariadb-operator/blob/main/README.md)\n* [mariadb-operator-helm](https://github.com/mariadb-operator/mariadb-operator-helm/blob/main/README.md)\n\n## Releases\nThis operator is automatically published in the following repositories whenever a new version of the [helm chart](https://artifacthub.io/packages/helm/mariadb-operator/mariadb-operator) is released:\n- [k8s-operatorhub/community-operators](https://github.com/k8s-operatorhub/community-operators)\n- [redhat-openshift-ecosystem/community-operators-prod](https://github.com/redhat-openshift-ecosystem/community-operators-prod)\n\n## Roadmap\nTake a look at our [roadmap](https://github.com/mariadb-operator/mariadb-operator/blob/main/ROADMAP.md) and feel free to open an issue to suggest new features.\n\n## Contributing\nWe welcome and encourage contributions to this project! Please check our [contributing](https://github.com/mariadb-operator/mariadb-operator/blob/main/CONTRIBUTING.md) and [development](https://github.com/mariadb-operator/mariadb-operator/blob/main/docs/DEVELOPMENT.md) guides. PRs welcome!\n\n## Get in touch\nJoin us on Slack: **[MariaDB Community Slack](https://r.mariadb.com/join-community-slack)**.\n",
      "provider": "mariadb-operator",
      "install_strategy": "OwnNamespace",
      "creation_timestamp": "2025-09-07T09:15:59Z",
      "labels": {
        "olm.copiedFrom": "operators",
        "olm.managed": "true"
      },
      "annotations": {
        "alm-examples": "[\n  {\n    \"apiVersion\": \"helm.mariadb.mmontes.io/v1alpha1\",\n    \"kind\": \"MariadbOperator\",\n    \"metadata\": {\n      \"name\": \"mariadb-operator\"\n    },\n    \"spec\": {\n      \"affinity\": {},\n      \"certController\": {\n        \"affinity\": {},\n        \"caValidity\": \"35064h\",\n        \"certValidity\": \"8766h\",\n        \"enabled\": true,\n        \"extrArgs\": [],\n        \"extraVolumeMounts\": [],\n        \"extraVolumes\": [],\n        \"ha\": {\n          \"enabled\": false,\n          \"replicas\": 3\n        },\n        \"image\": {\n          \"pullPolicy\": \"IfNotPresent\",\n          \"repository\": \"ghcr.io/mariadb-operator/mariadb-operator\",\n          \"tag\": \"\"\n        },\n        \"imagePullSecrets\": [],\n        \"lookaheadValidity\": \"2160h\",\n        \"nodeSelector\": {},\n        \"podAnnotations\": {},\n        \"podSecurityContext\": {},\n        \"requeueDuration\": \"5m\",\n        \"resources\": {},\n        \"securityContext\": {},\n        \"serviceAccount\": {\n          \"annotations\": {},\n          \"automount\": true,\n          \"enabled\": true,\n          \"extraLabels\": {},\n          \"name\": \"\"\n        },\n        \"serviceMonitor\": {\n          \"additionalLabels\": {},\n          \"enabled\": true,\n          \"interval\": \"30s\",\n          \"scrapeTimeout\": \"25s\"\n        },\n        \"tolerations\": []\n      },\n      \"clusterName\": \"cluster.local\",\n      \"extrArgs\": [],\n      \"extraVolumeMounts\": [],\n      \"extraVolumes\": [],\n      \"fullnameOverride\": \"\",\n      \"ha\": {\n        \"enabled\": false,\n        \"replicas\": 3\n      },\n      \"image\": {\n        \"pullPolicy\": \"IfNotPresent\",\n        \"repository\": \"ghcr.io/mariadb-operator/mariadb-operator\",\n        \"tag\": \"\"\n      },\n      \"imagePullSecrets\": [],\n      \"logLevel\": \"INFO\",\n      \"metrics\": {\n        \"enabled\": false,\n        \"serviceMonitor\": {\n          \"additionalLabels\": {},\n          \"enabled\": true,\n          \"interval\": \"30s\",\n          \"scrapeTimeout\": \"25s\"\n        }\n      },\n      \"nameOverride\": \"\",\n      \"nodeSelector\": {},\n      \"podAnnotations\": {},\n      \"podSecurityContext\": {},\n      \"rbac\": {\n        \"enabled\": true\n      },\n      \"resources\": {},\n      \"securityContext\": {},\n      \"serviceAccount\": {\n        \"annotations\": {},\n        \"automount\": true,\n        \"enabled\": true,\n        \"extraLabels\": {},\n        \"name\": \"\"\n      },\n      \"tolerations\": [],\n      \"webhook\": {\n        \"affinity\": {},\n        \"annotations\": {},\n        \"cert\": {\n          \"caPath\": \"/tmp/k8s-webhook-server/certificate-authority\",\n          \"certManager\": {\n            \"duration\": \"\",\n            \"enabled\": false,\n            \"issuerRef\": {},\n            \"renewBefore\": \"\"\n          },\n          \"path\": \"/tmp/k8s-webhook-server/serving-certs\",\n          \"secretAnnotations\": {}\n        },\n        \"extrArgs\": [],\n        \"extraVolumeMounts\": [],\n        \"extraVolumes\": [],\n        \"ha\": {\n          \"enabled\": false,\n          \"replicas\": 3\n        },\n        \"hostNetwork\": false,\n        \"image\": {\n          \"pullPolicy\": \"IfNotPresent\",\n          \"repository\": \"ghcr.io/mariadb-operator/mariadb-operator\",\n          \"tag\": \"\"\n        },\n        \"imagePullSecrets\": [],\n        \"nodeSelector\": {},\n        \"podAnnotations\": {},\n        \"podSecurityContext\": {},\n        \"port\": 10250,\n        \"resources\": {},\n        \"securityContext\": {},\n        \"serviceAccount\": {\n          \"annotations\": {},\n          \"automount\": true,\n          \"enabled\": true,\n          \"extraLabels\": {},\n          \"name\": \"\"\n        },\n        \"serviceMonitor\": {\n          \"additionalLabels\": {},\n          \"enabled\": true,\n          \"interval\": \"30s\",\n          \"scrapeTimeout\": \"25s\"\n        },\n        \"tolerations\": []\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"backup\"\n    },\n    \"spec\": {\n      \"args\": [\n        \"--single-transaction\",\n        \"--all-databases\"\n      ],\n      \"logLevel\": \"info\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"maxRetention\": \"720h\",\n      \"resources\": {\n        \"limits\": {\n          \"cpu\": \"300m\",\n          \"memory\": \"512Mi\"\n        },\n        \"requests\": {\n          \"cpu\": \"100m\",\n          \"memory\": \"128Mi\"\n        }\n      },\n      \"schedule\": {\n        \"cron\": \"*/1 * * * *\",\n        \"suspend\": false\n      },\n      \"storage\": {\n        \"s3\": {\n          \"accessKeyIdSecretKeyRef\": {\n            \"key\": \"access-key-id\",\n            \"name\": \"minio\"\n          },\n          \"bucket\": \"backups\",\n          \"endpoint\": \"minio.minio.svc.cluster.local:9000\",\n          \"prefix\": \"mariadb\",\n          \"secretAccessKeySecretKeyRef\": {\n            \"key\": \"secret-access-key\",\n            \"name\": \"minio\"\n          },\n          \"tls\": {\n            \"caSecretKeyRef\": {\n              \"key\": \"ca.crt\",\n              \"name\": \"minio-ca\"\n            },\n            \"enabled\": true\n          }\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Connection\",\n    \"metadata\": {\n      \"name\": \"connection\"\n    },\n    \"spec\": {\n      \"database\": \"mariadb\",\n      \"healthCheck\": {\n        \"interval\": \"10s\",\n        \"retryInterval\": \"3s\"\n      },\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"params\": {\n        \"parseTime\": \"true\"\n      },\n      \"passwordSecretKeyRef\": {\n        \"key\": \"password\",\n        \"name\": \"mariadb\"\n      },\n      \"secretName\": \"connection\",\n      \"secretTemplate\": {\n        \"annotations\": {\n          \"k8s.mariadb.com/connection\": \"sample\"\n        },\n        \"databaseKey\": \"database\",\n        \"hostKey\": \"host\",\n        \"key\": \"dsn\",\n        \"labels\": {\n          \"k8s.mariadb.com/connection\": \"sample\"\n        },\n        \"passwordKey\": \"password\",\n        \"portKey\": \"port\",\n        \"usernameKey\": \"username\"\n      },\n      \"serviceName\": \"mariadb\",\n      \"username\": \"mariadb\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Database\",\n    \"metadata\": {\n      \"name\": \"data-test\"\n    },\n    \"spec\": {\n      \"characterSet\": \"utf8\",\n      \"collate\": \"utf8_general_ci\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"retryInterval\": \"5s\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Grant\",\n    \"metadata\": {\n      \"name\": \"grant\"\n    },\n    \"spec\": {\n      \"database\": \"*\",\n      \"grantOption\": true,\n      \"host\": \"%\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"privileges\": [\n        \"SELECT\",\n        \"INSERT\",\n        \"UPDATE\"\n      ],\n      \"requeueInterval\": \"30s\",\n      \"retryInterval\": \"5s\",\n      \"table\": \"*\",\n      \"username\": \"user\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"MariaDB\",\n    \"metadata\": {\n      \"name\": \"mariadb\"\n    },\n    \"spec\": {\n      \"connection\": {\n        \"secretName\": \"mariadb-conn\",\n        \"secretTemplate\": {\n          \"key\": \"dsn\"\n        }\n      },\n      \"database\": \"mariadb\",\n      \"galera\": {\n        \"enabled\": true\n      },\n      \"metrics\": {\n        \"enabled\": true,\n        \"passwordSecretKeyRef\": {\n          \"generate\": true,\n          \"key\": \"password\",\n          \"name\": \"mariadb-metrics\"\n        }\n      },\n      \"myCnf\": \"[mariadb]\\nbind-address=*\\ndefault_storage_engine=InnoDB\\nbinlog_format=row\\ninnodb_autoinc_lock_mode=2\\ninnodb_buffer_pool_size=1024M\\nmax_allowed_packet=256M\\n\",\n      \"passwordSecretKeyRef\": {\n        \"generate\": true,\n        \"key\": \"password\",\n        \"name\": \"mariadb-password\"\n      },\n      \"primaryConnection\": {\n        \"secretName\": \"mariadb-conn-primary\",\n        \"secretTemplate\": {\n          \"key\": \"dsn\"\n        }\n      },\n      \"primaryService\": {\n        \"type\": \"ClusterIP\"\n      },\n      \"replicas\": 3,\n      \"rootPasswordSecretKeyRef\": {\n        \"generate\": true,\n        \"key\": \"password\",\n        \"name\": \"mariadb-root\"\n      },\n      \"secondaryConnection\": {\n        \"secretName\": \"mariadb-conn-secondary\",\n        \"secretTemplate\": {\n          \"key\": \"dsn\"\n        }\n      },\n      \"secondaryService\": {\n        \"type\": \"ClusterIP\"\n      },\n      \"service\": {\n        \"type\": \"ClusterIP\"\n      },\n      \"storage\": {\n        \"size\": \"1Gi\"\n      },\n      \"updateStrategy\": {\n        \"type\": \"ReplicasFirstPrimaryLast\"\n      },\n      \"username\": \"mariadb\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"MaxScale\",\n    \"metadata\": {\n      \"name\": \"maxscale-galera\"\n    },\n    \"spec\": {\n      \"admin\": {\n        \"guiEnabled\": true,\n        \"port\": 8989\n      },\n      \"auth\": {\n        \"generate\": true\n      },\n      \"config\": {\n        \"sync\": {\n          \"database\": \"mysql\",\n          \"interval\": \"5s\",\n          \"timeout\": \"10s\"\n        }\n      },\n      \"connection\": {\n        \"port\": 3306,\n        \"secretName\": \"mxs-galera-conn\"\n      },\n      \"guiKubernetesService\": {\n        \"metadata\": {\n          \"annotations\": {\n            \"metallb.universe.tf/loadBalancerIPs\": \"172.18.0.231\"\n          }\n        },\n        \"type\": \"LoadBalancer\"\n      },\n      \"kubernetesService\": {\n        \"annotations\": {\n          \"metallb.universe.tf/loadBalancerIPs\": \"172.18.0.224\"\n        },\n        \"type\": \"LoadBalancer\"\n      },\n      \"mariaDbRef\": {\n        \"name\": \"mariadb-galera\"\n      },\n      \"monitor\": {\n        \"cooperativeMonitoring\": \"majority_of_all\",\n        \"interval\": \"2s\",\n        \"params\": {\n          \"available_when_donor\": \"false\",\n          \"disable_master_failback\": \"false\",\n          \"disable_master_role_setting\": \"false\"\n        }\n      },\n      \"replicas\": 3,\n      \"requeueInterval\": \"10s\",\n      \"services\": [\n        {\n          \"listener\": {\n            \"params\": {\n              \"connection_metadata\": \"tx_isolation=auto\"\n            },\n            \"port\": 3306,\n            \"protocol\": \"MariaDBProtocol\"\n          },\n          \"name\": \"rw-router\",\n          \"params\": {\n            \"master_accept_reads\": \"true\",\n            \"max_replication_lag\": \"3s\",\n            \"max_slave_connections\": \"255\",\n            \"transaction_replay\": \"true\",\n            \"transaction_replay_attempts\": \"10\",\n            \"transaction_replay_timeout\": \"5s\"\n          },\n          \"router\": \"readwritesplit\"\n        },\n        {\n          \"listener\": {\n            \"port\": 3307\n          },\n          \"name\": \"rconn-master-router\",\n          \"params\": {\n            \"master_accept_reads\": \"true\",\n            \"max_replication_lag\": \"3s\",\n            \"router_options\": \"master\"\n          },\n          \"router\": \"readconnroute\"\n        },\n        {\n          \"listener\": {\n            \"port\": 3308\n          },\n          \"name\": \"rconn-slave-router\",\n          \"params\": {\n            \"max_replication_lag\": \"3s\",\n            \"router_options\": \"slave\"\n          },\n          \"router\": \"readconnroute\"\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"PhysicalBackup\",\n    \"metadata\": {\n      \"name\": \"physicalbackup\"\n    },\n    \"spec\": {\n      \"compression\": \"bzip2\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"maxRetention\": \"720h\",\n      \"podAffinity\": true,\n      \"resources\": {\n        \"limits\": {\n          \"cpu\": \"300m\",\n          \"memory\": \"512Mi\"\n        },\n        \"requests\": {\n          \"cpu\": \"100m\",\n          \"memory\": \"128Mi\"\n        }\n      },\n      \"schedule\": {\n        \"cron\": \"*/1 * * * *\",\n        \"immediate\": true,\n        \"suspend\": false\n      },\n      \"serviceAccountName\": \"backup\",\n      \"stagingStorage\": {\n        \"persistentVolumeClaim\": {\n          \"accessModes\": [\n            \"ReadWriteOnce\"\n          ],\n          \"resources\": {\n            \"requests\": {\n              \"storage\": \"1Gi\"\n            }\n          }\n        }\n      },\n      \"storage\": {\n        \"s3\": {\n          \"accessKeyIdSecretKeyRef\": {\n            \"key\": \"access-key-id\",\n            \"name\": \"minio\"\n          },\n          \"bucket\": \"physicalbackups\",\n          \"endpoint\": \"minio.minio.svc.cluster.local:9000\",\n          \"prefix\": \"mariadb\",\n          \"region\": \"us-east-1\",\n          \"secretAccessKeySecretKeyRef\": {\n            \"key\": \"secret-access-key\",\n            \"name\": \"minio\"\n          },\n          \"tls\": {\n            \"caSecretKeyRef\": {\n              \"key\": \"ca.crt\",\n              \"name\": \"minio-ca\"\n            },\n            \"enabled\": true\n          }\n        }\n      },\n      \"timeout\": \"1h\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Restore\",\n    \"metadata\": {\n      \"name\": \"restore\"\n    },\n    \"spec\": {\n      \"backupRef\": {\n        \"name\": \"backup\"\n      },\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"resources\": {\n        \"limits\": {\n          \"cpu\": \"300m\",\n          \"memory\": \"512Mi\"\n        },\n        \"requests\": {\n          \"cpu\": \"100m\",\n          \"memory\": \"128Mi\"\n        }\n      },\n      \"targetRecoveryTime\": \"2023-12-19T09:00:00Z\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"SqlJob\",\n    \"metadata\": {\n      \"name\": \"03-stars\"\n    },\n    \"spec\": {\n      \"database\": \"mariadb\",\n      \"dependsOn\": [\n        {\n          \"name\": \"01-users\"\n        },\n        {\n          \"name\": \"02-repos\"\n        }\n      ],\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"passwordSecretKeyRef\": {\n        \"key\": \"password\",\n        \"name\": \"mariadb\"\n      },\n      \"schedule\": {\n        \"cron\": \"*/1 * * * *\",\n        \"suspend\": false\n      },\n      \"sql\": \"CREATE TABLE IF NOT EXISTS stars (\\n  id bigint PRIMARY KEY AUTO_INCREMENT,\\n  user_id bigint NOT NULL,\\n  repo_id bigint NOT NULL,\\n  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,\\n  FOREIGN KEY (repo_id) REFERENCES repos(id) ON DELETE CASCADE,\\n  UNIQUE KEY (user_id, repo_id)\\n);\\nINSERT INTO stars(user_id, repo_id) \\n  VALUES((SELECT id FROM users ORDER BY RAND() LIMIT 1), (SELECT id FROM repos ORDER BY RAND() LIMIT 1))\\n  ON DUPLICATE KEY UPDATE id=id;\\nDELETE FROM stars WHERE id = (SELECT id FROM stars ORDER BY RAND() LIMIT 1);\\nSELECT r.name AS repo, COUNT(*) AS stars\\nFROM stars s\\nJOIN repos r\\nON s.repo_id = r.id\\nGROUP BY r.id\\nORDER BY stars DESC;\",\n      \"username\": \"mariadb\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"User\",\n    \"metadata\": {\n      \"name\": \"user\"\n    },\n    \"spec\": {\n      \"host\": \"%\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"maxUserConnections\": 20,\n      \"passwordSecretKeyRef\": {\n        \"key\": \"password\",\n        \"name\": \"mariadb\"\n      },\n      \"retryInterval\": \"5s\"\n    }\n  }\n]",
        "capabilities": "Deep Insights",
        "categories": "Database",
        "containerImage": "ghcr.io/mariadb-operator/mariadb-operator-helm:25.8.3",
        "createdAt": "2025-08-08T12:14:12Z",
        "description": "Run and operate MariaDB in a cloud native way",
        "features.operators.openshift.io/disconnected": "false",
        "features.operators.openshift.io/fips-compliant": "false",
        "features.operators.openshift.io/proxy-aware": "false",
        "features.operators.openshift.io/tls-profiles": "false",
        "features.operators.openshift.io/token-auth-aws": "false",
        "features.operators.openshift.io/token-auth-azure": "false",
        "features.operators.openshift.io/token-auth-gcp": "false",
        "olm.operatorGroup": "global-operators",
        "olm.operatorNamespace": "operators",
        "operatorframework.io/properties": "{\"properties\":[{\"type\":\"olm.gvk\",\"value\":{\"group\":\"helm.mariadb.mmontes.io\",\"kind\":\"MariadbOperator\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Backup\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Connection\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Database\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Grant\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"MariaDB\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"MaxScale\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"PhysicalBackup\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Restore\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"SqlJob\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"User\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.package\",\"value\":{\"packageName\":\"mariadb-operator\",\"version\":\"25.8.3\"}}]}",
        "operators.operatorframework.io/builder": "operator-sdk-v1.26.0",
        "operators.operatorframework.io/project_layout": "helm.sdk.operatorframework.io/v1",
        "repository": "https://github.com/mariadb-operator/mariadb-operator",
        "support": "mariadb-operator"
      },
      "owned_crds": [
        "backups.k8s.mariadb.com",
        "connections.k8s.mariadb.com",
        "databases.k8s.mariadb.com",
        "grants.k8s.mariadb.com",
        "mariadboperators.helm.mariadb.mmontes.io",
        "mariadbs.k8s.mariadb.com",
        "maxscales.k8s.mariadb.com",
        "physicalbackups.k8s.mariadb.com",
        "restores.k8s.mariadb.com",
        "sqljobs.k8s.mariadb.com",
        "users.k8s.mariadb.com"
      ],
      "required_crds": [],
      "permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps"
              ],
              "verbs": [
                "get",
                "list",
                "watch",
                "create",
                "update",
                "patch",
                "delete"
              ]
            },
            {
              "apiGroups": [
                "coordination.k8s.io"
              ],
              "resources": [
                "leases"
              ],
              "verbs": [
                "get",
                "list",
                "watch",
                "create",
                "update",
                "patch",
                "delete"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "events"
              ],
              "verbs": [
                "create",
                "patch"
              ]
            }
          ],
          "serviceAccountName": "mariadb-operator-helm-controller-manager"
        }
      ],
      "cluster_permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "namespaces"
              ],
              "verbs": [
                "get"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "secrets"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "events"
              ],
              "verbs": [
                "create"
              ]
            },
            {
              "apiGroups": [
                "helm.mariadb.mmontes.io"
              ],
              "resources": [
                "mariadboperators",
                "mariadboperators/status",
                "mariadboperators/finalizers"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "rbac.authorization.k8s.io"
              ],
              "resources": [
                "clusterrolebindings",
                "clusterroles"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "admissionregistration.k8s.io"
              ],
              "resources": [
                "validatingwebhookconfigurations",
                "mutatingwebhookconfigurations"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "rbac.authorization.k8s.io"
              ],
              "resources": [
                "rolebindings",
                "roles"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "apps"
              ],
              "resources": [
                "deployments"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "serviceaccounts",
                "services"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "apiextensions.k8s.io"
              ],
              "resources": [
                "customresourcedefinitions"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "cert-manager.io"
              ],
              "resources": [
                "certificates",
                "issuers"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "monitoring.coreos.com"
              ],
              "resources": [
                "servicemonitors"
              ],
              "verbs": [
                "*"
              ]
            }
          ],
          "serviceAccountName": "mariadb-operator-helm-controller-manager"
        }
      ],
      "replaces": "mariadb-operator.v25.8.2",
      "skips": [],
      "min_kube_version": "1.16.0"
    },
    {
      "name": "oracle-database-operator.v1.2.0",
      "namespace": "default",
      "display_name": "Oracle Database Operator",
      "version": "1.2.0",
      "phase": "Installing",
      "description": "As part of Oracle's resolution to make Oracle Database Kubernetes native (that is, observable and operable by Kubernetes), Oracle released Oracle Database Operator for Kubernetes (OraOperator or the operator). OraOperator extends the Kubernetes API with custom resources and controllers for automating Oracle Database lifecycle management.\nIn this v1.2.0 production release, OraOperator supports the following database configurations and infrastructure:\n##Supported Database Configurations:\n* Oracle Cloud Infrastructure (OCI) Databases\n  * Oracle Autonomous Database Serverless (ADB-S)\n  * Oracle Autonomous Database on Dedicated on (ADB-D)\n  * Oracle Base Database Cloud Service (Base DB)\n* Containerized Database deployments on Kubernetes\n  * Oracle Kubernetes Engine (OKE) and Oracle Cloud Native Environments (OCNE)\n    * Single Instance databases (SIDB)\n    * Globally Distributed Databases (Shared)\n    * Oracle Data Guard\n    * True Cache (Preview release)\n    * Oracle Database Observability\n* On-Premises Databases\n  * Oracle Multitenant Databases (CDB/PDBs management)\n  * ORDS Services\n\nRefer to full feature list and capabilities: [https://github.com/oracle/oracle-database-operator/blob/main/README.md](https://github.com/oracle/oracle-database-operator/blob/main/README.md)\n",
      "provider": "Oracle",
      "install_strategy": "OwnNamespace",
      "creation_timestamp": "2025-09-07T09:13:38Z",
      "labels": {
        "olm.copiedFrom": "operators",
        "olm.managed": "true"
      },
      "annotations": {
        "alm-examples": "[\n  {\n    \"apiVersion\": \"database.oracle.com/v1alpha1\",\n    \"kind\": \"CDB\",\n    \"metadata\": {\n      \"name\": \"cdb-dev\",\n      \"namespace\": \"oracle-database-operator-system\"\n    },\n    \"spec\": {\n      \"cdbAdminPwd\": {\n        \"secret\": {\n          \"key\": \"cdbadmin_pwd\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"cdbAdminUser\": {\n        \"secret\": {\n          \"key\": \"cdbadmin_user\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"cdbName\": \"devcdb\",\n      \"dbPort\": 1521,\n      \"dbServer\": \"172.17.0.4\",\n      \"ordsImage\": \"\",\n      \"ordsImagePullPolicy\": \"Always\",\n      \"ordsPwd\": {\n        \"secret\": {\n          \"key\": \"ords_pwd\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"replicas\": 1,\n      \"serviceName\": \"devdb.example.com\",\n      \"sysAdminPwd\": {\n        \"secret\": {\n          \"key\": \"sysadmin_pwd\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"webServerPwd\": {\n        \"secret\": {\n          \"key\": \"webserver_pwd\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"webServerUser\": {\n        \"secret\": {\n          \"key\": \"webserver_user\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v1alpha1\",\n    \"kind\": \"DbcsSystem\",\n    \"metadata\": {\n      \"name\": \"dbcssystem-sample\"\n    },\n    \"spec\": {\n      \"foo\": \"bar\"\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v1alpha1\",\n    \"kind\": \"PDB\",\n    \"metadata\": {\n      \"labels\": {\n        \"cdb\": \"cdb-dev\"\n      },\n      \"name\": \"pdb1\",\n      \"namespace\": \"oracle-database-operator-system\"\n    },\n    \"spec\": {\n      \"action\": \"Create\",\n      \"adminName\": {\n        \"secret\": {\n          \"key\": \"sysadmin_user\",\n          \"secretName\": \"pdb1-secret\"\n        }\n      },\n      \"adminPwd\": {\n        \"secret\": {\n          \"key\": \"sysadmin_pwd\",\n          \"secretName\": \"pdb1-secret\"\n        }\n      },\n      \"cdbName\": \"devcdb\",\n      \"cdbResName\": \"cdb-dev\",\n      \"fileNameConversions\": \"NONE\",\n      \"pdbName\": \"pdbdev\",\n      \"tempSize\": \"100M\",\n      \"totalSize\": \"1G\"\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v4\",\n    \"kind\": \"AutonomousContainerDatabase\",\n    \"metadata\": {\n      \"name\": \"autonomouscontainerdatabase-sample\"\n    },\n    \"spec\": {\n      \"autonomousExadataVMClusterOCID\": \"ocid1.autonomousexainfrastructure...\",\n      \"compartmentOCID\": \"ocid1.compartment... OR ocid1.tenancy...\",\n      \"displayName\": \"newACD\",\n      \"ociConfig\": {\n        \"configMapName\": \"oci-cred\",\n        \"secretName\": \"oci-privatekey\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v4\",\n    \"kind\": \"AutonomousDatabase\",\n    \"metadata\": {\n      \"name\": \"autonomousdatabase-sample\"\n    },\n    \"spec\": {\n      \"action\": \"Create\",\n      \"details\": {\n        \"adminPassword\": {\n          \"k8sSecret\": {\n            \"name\": \"admin-password\"\n          }\n        },\n        \"compartmentId\": \"ocid1.compartment... OR ocid1.tenancy...\",\n        \"cpuCoreCount\": 1,\n        \"dataStorageSizeInTBs\": 1,\n        \"dbName\": \"NewADB\",\n        \"displayName\": \"NewADB\"\n      },\n      \"ociConfig\": {\n        \"configMapName\": \"oci-cred\",\n        \"secretName\": \"oci-privatekey\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v4\",\n    \"kind\": \"AutonomousDatabaseBackup\",\n    \"metadata\": {\n      \"name\": \"autonomousdatabasebackup-sample\"\n    },\n    \"spec\": {\n      \"displayName\": \"autonomousdatabasebackup-sample\",\n      \"isLongTermBackup\": true,\n      \"ociConfig\": {\n        \"configMapName\": \"oci-cred\",\n        \"secretName\": \"oci-privatekey\"\n      },\n      \"retentionPeriodInDays\": 90,\n      \"target\": {\n        \"k8sADB\": {\n          \"name\": \"autonomousdatabase-sample\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v4\",\n    \"kind\": \"SingleInstanceDatabase\",\n    \"metadata\": {\n      \"name\": \"sidb-sample\",\n      \"namespace\": \"default\"\n    },\n    \"spec\": {\n      \"adminPassword\": {\n        \"secretName\": \"db-admin-secret\"\n      },\n      \"archiveLog\": true,\n      \"charset\": \"AL32UTF8\",\n      \"edition\": \"enterprise\",\n      \"image\": {\n        \"pullFrom\": \"container-registry.oracle.com/database/enterprise_ru:19\",\n        \"pullSecrets\": \"oracle-container-registry-secret\"\n      },\n      \"pdbName\": \"orclpdb1\",\n      \"persistence\": {\n        \"accessMode\": \"ReadWriteOnce\",\n        \"size\": \"100Gi\",\n        \"storageClass\": \"oci-bv\"\n      },\n      \"replicas\": 1,\n      \"sid\": \"ORCL1\"\n    }\n  },\n  {\n    \"apiVersion\": \"observability.oracle.com/v1alpha1\",\n    \"kind\": \"DatabaseObserver\",\n    \"metadata\": {\n      \"name\": \"obs-sample\"\n    },\n    \"spec\": {\n      \"database\": {\n        \"dbConnectionString\": {\n          \"key\": \"connection\",\n          \"secret\": \"db-secret\"\n        },\n        \"dbPassword\": {\n          \"key\": \"password\",\n          \"secret\": \"db-secret\"\n        },\n        \"dbUser\": {\n          \"key\": \"username\",\n          \"secret\": \"db-secret\"\n        },\n        \"dbWallet\": {\n          \"secret\": \"instance-wallet\"\n        }\n      },\n      \"exporter\": {\n        \"configuration\": {\n          \"configmap\": {\n            \"configmapName\": \"devcm-oradevdb-config\",\n            \"key\": \"config.toml\"\n          }\n        },\n        \"image\": \"container-registry.oracle.com/database/observability-exporter:latest\",\n        \"service\": {\n          \"port\": 9161\n        }\n      },\n      \"ociConfig\": {\n        \"configMapName\": \"oci-cred\",\n        \"secretName\": \"oci-privatekey\"\n      },\n      \"prometheus\": {\n        \"labels\": {\n          \"app\": \"app-sample-label\"\n        },\n        \"port\": \"metrics\"\n      },\n      \"replicas\": 1\n    }\n  }\n]",
        "capabilities": "Seamless Upgrades",
        "categories": "Database",
        "containerImage": "container-registry.oracle.com/database/operator:1.2.0",
        "createdAt": "2025-04-10T20:09:48Z",
        "olm.operatorGroup": "global-operators",
        "olm.operatorNamespace": "operators",
        "operatorframework.io/properties": "{\"properties\":[{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousContainerDatabase\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousContainerDatabase\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabase\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabase\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabaseBackup\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabaseBackup\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabaseRestore\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabaseRestore\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"CDB\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"CDB\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"DataguardBroker\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"DataguardBroker\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"DbcsSystem\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"DbcsSystem\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"LREST\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"LRPDB\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"OracleRestDataService\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"OracleRestDataService\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"OrdsSrvs\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"PDB\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"PDB\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"ShardingDatabase\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"ShardingDatabase\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"SingleInstanceDatabase\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"SingleInstanceDatabase\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"observability.oracle.com\",\"kind\":\"DatabaseObserver\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"observability.oracle.com\",\"kind\":\"DatabaseObserver\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"observability.oracle.com\",\"kind\":\"DatabaseObserver\",\"version\":\"v4\"}},{\"type\":\"olm.package\",\"value\":{\"packageName\":\"oracle-database-operator\",\"version\":\"1.2.0\"}}]}",
        "operators.operatorframework.io/builder": "operator-sdk-v1.39.2",
        "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v4"
      },
      "owned_crds": [
        "autonomouscontainerdatabases.database.oracle.com",
        "autonomouscontainerdatabases.database.oracle.com",
        "autonomousdatabasebackups.database.oracle.com",
        "autonomousdatabasebackups.database.oracle.com",
        "autonomousdatabaserestores.database.oracle.com",
        "autonomousdatabaserestores.database.oracle.com",
        "autonomousdatabases.database.oracle.com",
        "autonomousdatabases.database.oracle.com",
        "cdbs.database.oracle.com",
        "cdbs.database.oracle.com",
        "databaseobservers.observability.oracle.com",
        "databaseobservers.observability.oracle.com",
        "databaseobservers.observability.oracle.com",
        "dataguardbrokers.database.oracle.com",
        "dataguardbrokers.database.oracle.com",
        "dbcssystems.database.oracle.com",
        "dbcssystems.database.oracle.com",
        "lrests.database.oracle.com",
        "lrpdbs.database.oracle.com",
        "oraclerestdataservices.database.oracle.com",
        "oraclerestdataservices.database.oracle.com",
        "ordssrvs.database.oracle.com",
        "pdbs.database.oracle.com",
        "pdbs.database.oracle.com",
        "shardingdatabases.database.oracle.com",
        "shardingdatabases.database.oracle.com",
        "singleinstancedatabases.database.oracle.com",
        "singleinstancedatabases.database.oracle.com"
      ],
      "required_crds": [],
      "permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps"
              ],
              "verbs": [
                "get",
                "list",
                "watch",
                "create",
                "update",
                "patch",
                "delete"
              ]
            },
            {
              "apiGroups": [
                "coordination.k8s.io"
              ],
              "resources": [
                "leases"
              ],
              "verbs": [
                "get",
                "list",
                "watch",
                "create",
                "update",
                "patch",
                "delete"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps/status"
              ],
              "verbs": [
                "get",
                "update",
                "patch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "events"
              ],
              "verbs": [
                "create",
                "patch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps",
                "containers",
                "deployments",
                "events",
                "namespaces",
                "persistentvolumeclaims",
                "pods",
                "pods/exec",
                "pods/log",
                "replicasets",
                "secrets",
                "services"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps/status",
                "daemonsets/status",
                "deployments/status",
                "services/status",
                "statefulsets/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "persistentvolumes"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "secrets/status"
              ],
              "verbs": [
                "get"
              ]
            },
            {
              "apiGroups": [
                "''"
              ],
              "resources": [
                "statefulsets/finalizers"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "apps"
              ],
              "resources": [
                "configmaps"
              ],
              "verbs": [
                "get",
                "list"
              ]
            },
            {
              "apiGroups": [
                "apps"
              ],
              "resources": [
                "daemonsets",
                "deployments",
                "pods",
                "replicasets",
                "services",
                "statefulsets"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "coordination.k8s.io"
              ],
              "resources": [
                "leases"
              ],
              "verbs": [
                "create",
                "get",
                "list",
                "update"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "autonomouscontainerdatabases",
                "autonomousdatabases",
                "cdbs",
                "dataguardbrokers",
                "dbcssystems",
                "events",
                "lrests",
                "lrpdbs",
                "oraclerestdataservices",
                "ordssrvs",
                "pdbs",
                "shardingdatabases",
                "singleinstancedatabases"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "autonomouscontainerdatabases/status",
                "autonomousdatabasebackups/status",
                "autonomousdatabaserestores/status",
                "cdbs/status",
                "dataguardbrokers/status",
                "dbcssystems/status",
                "lrests/status",
                "lrpdbs/status",
                "oraclerestdataservices/status",
                "ordssrvs/status",
                "pdbs/status",
                "shardingdatabases/status",
                "singleinstancedatabases/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "autonomousdatabasebackups",
                "autonomousdatabaserestores"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "autonomousdatabases/status"
              ],
              "verbs": [
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "cdbs/finalizers",
                "dataguardbrokers/finalizers",
                "lrests/finalizers",
                "oraclerestdataservices/finalizers",
                "ordssrvs/finalizers",
                "singleinstancedatabases/finalizers"
              ],
              "verbs": [
                "update"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "dbcssystems/finalizers",
                "lrpdbs/finalizers",
                "pdbs/finalizers",
                "shardingdatabases/finalizers"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "monitoring.coreos.com"
              ],
              "resources": [
                "servicemonitors"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "observability.oracle.com"
              ],
              "resources": [
                "databaseobservers"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "observability.oracle.com"
              ],
              "resources": [
                "databaseobservers/finalizers"
              ],
              "verbs": [
                "update"
              ]
            },
            {
              "apiGroups": [
                "observability.oracle.com"
              ],
              "resources": [
                "databaseobservers/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "storage.k8s.io"
              ],
              "resources": [
                "storageclasses"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            }
          ],
          "serviceAccountName": "default"
        }
      ],
      "cluster_permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                "authentication.k8s.io"
              ],
              "resources": [
                "tokenreviews"
              ],
              "verbs": [
                "create"
              ]
            },
            {
              "apiGroups": [
                "authorization.k8s.io"
              ],
              "resources": [
                "subjectaccessreviews"
              ],
              "verbs": [
                "create"
              ]
            }
          ],
          "serviceAccountName": "default"
        }
      ],
      "replaces": "oracle-database-operator.v1.1.0",
      "skips": [],
      "min_kube_version": ""
    },
    {
      "name": "cloudnative-pg.v1.27.0",
      "namespace": "demo",
      "display_name": "CloudNativePG",
      "version": "1.27.0",
      "phase": "Succeeded",
      "description": "Main features:\n\n- Direct integration with the Kubernetes API server for High Availability,\n  eliminating the need for external tools.\n- Self-healing capabilities, including:\n    - Automated failover by promoting the most aligned replica.\n    - Automatic recreation of failed replicas.\n- Planned switchover of the primary instance by promoting a selected replica.\n- Declarative management of key PostgreSQL configurations, including:\n    - PostgreSQL settings.\n    - Roles, users, and groups.\n    - Databases, extensions, and schemas.\n    - Tablespaces (including temporary tablespaces).\n- Flexible instance definition, supporting any number of instances (minimum 1\n  primary server).\n- Scale-up/down capabilities to dynamically adjust cluster size.\n- Read-Write and Read-Only Services, ensuring applications connect correctly:\n    - *Read-Write Service*: Routes connections to the primary server.\n    - *Read-Only Service*: Distributes connections among replicas for read workloads.\n- Support for quorum-based and priority-based PostgreSQL Synchronous\n  Replication.\n- Replica clusters enabling PostgreSQL distributed topologies across multiple\n  Kubernetes clusters (private, public, hybrid, and multi-cloud).\n- Delayed Replica clusters for point-in-time access to historical data.\n- Persistent volume management, including:\n    - Support for Local Persistent Volumes with PVC templates.\n    - Reuse of Persistent Volumes storage in Pods.\n    - Separate volumes for WAL files and tablespaces.\n- Backup and recovery options, including:\n    - Integration with the [Barman Cloud plugin](https://github.com/cloudnative-pg/plugin-barman-cloud)\n      for continuous online backup via WAL archiving to AWS S3, S3-compatible\n      services, Azure Blob Storage, and Google Cloud Storage, with support for\n      retention policies based on a configurable recovery window.\n    - Backups using volume snapshots (where supported by storage classes).\n    - Full and Point-In-Time recovery from volume snapshots or object stores (via Barman Cloud plugin).\n    - Backup from standby replicas to reduce primary workload impact.\n- Offline and online import of PostgreSQL databases, including major upgrades:\n    - *Offline Import*: Direct restore from existing databases.\n    - *Online Import*: PostgreSQL native logical replication via the `Subscription` resource.\n- Offline In-Place Major Upgrades of PostgreSQL\n- High Availability physical replication slots, including synchronization of\n  user-defined replication slots.\n- Parallel WAL archiving and restore, ensuring high-performance data\n  synchronization in high-write environments.\n- TLS support, including:\n    - Secure connections and client certificate authentication.\n    - Custom TLS certificates (integrated with `cert-manager`).\n- Startup and readiness probes, including replica probes based on desired lag\n  from the primary.\n- Declarative rolling updates for:\n    - PostgreSQL minor versions.\n    - Operator upgrades (in-place or rolling updates).\n- Standard output logging of PostgreSQL error messages in JSON format for\n  easier integration with log aggregation tools.\n- Prometheus-compatible metrics exporter (`metrics` port 9187) for custom\n  monitoring.\n- `cnpg` plugin for `kubectl` to simplify cluster operations.\n- Cluster hibernation for resource efficiency in inactive states.\n- Fencing of PostgreSQL clusters (full cluster or subset) to isolate instances\n  when needed.\n- Connection pooling with PgBouncer for improved database efficiency.\n- OLM (Operator Lifecycle Manager) installation support for streamlined\n  deployments.\n- Multi-arch container images, including Software Bill of Materials (SBOM) and\n  provenance attestations for security compliance.\n",
      "provider": "The CloudNativePG Contributors",
      "install_strategy": "OwnNamespace",
      "creation_timestamp": "2025-09-07T09:12:57Z",
      "labels": {
        "olm.copiedFrom": "operators",
        "olm.managed": "true",
        "operatorframework.io/arch.amd64": "supported"
      },
      "annotations": {
        "alm-examples": "[\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"backup-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      }\n    },\n    \"status\": {\n      \"serverName\": null\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Cluster\",\n    \"metadata\": {\n      \"name\": \"cluster-sample\"\n    },\n    \"spec\": {\n      \"instances\": 3,\n      \"logLevel\": \"info\",\n      \"primaryUpdateStrategy\": \"unsupervised\",\n      \"storage\": {\n        \"size\": \"1Gi\"\n      },\n      \"walStorage\": {\n        \"size\": \"1Gi\"\n      }\n    },\n    \"status\": {\n      \"instances\": 3\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"ClusterImageCatalog\",\n    \"metadata\": {\n      \"name\": \"postgresql\"\n    },\n    \"spec\": {\n      \"images\": [\n        {\n          \"image\": \"ghcr.io/cloudnative-pg/postgresql@sha256:1c97e0d6e94d8b335be7f258eeda2202966df5fde0c934eef4b13c760ec6a891\",\n          \"major\": 15\n        },\n        {\n          \"image\": \"ghcr.io/cloudnative-pg/postgresql@sha256:ee2e3ce7f0ea935c3f4ab245c0b3959c9f1c49816ae02222ceb6bc347f48e43b\",\n          \"major\": 16\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Database\",\n    \"metadata\": {\n      \"name\": \"database-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      },\n      \"name\": \"database-sample\",\n      \"owner\": \"app\"\n    },\n    \"status\": {\n      \"applied\": false\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"ImageCatalog\",\n    \"metadata\": {\n      \"name\": \"postgresql\",\n      \"namespace\": \"default\"\n    },\n    \"spec\": {\n      \"images\": [\n        {\n          \"image\": \"ghcr.io/cloudnative-pg/postgresql@sha256:1c97e0d6e94d8b335be7f258eeda2202966df5fde0c934eef4b13c760ec6a891\",\n          \"major\": 15\n        },\n        {\n          \"image\": \"ghcr.io/cloudnative-pg/postgresql@sha256:ee2e3ce7f0ea935c3f4ab245c0b3959c9f1c49816ae02222ceb6bc347f48e43b\",\n          \"major\": 16\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Pooler\",\n    \"metadata\": {\n      \"name\": \"pooler-sample-rw\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      },\n      \"instances\": 1,\n      \"pgbouncer\": {\n        \"poolMode\": \"session\"\n      },\n      \"type\": \"rw\"\n    },\n    \"status\": {\n      \"instances\": 1\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Publication\",\n    \"metadata\": {\n      \"name\": \"publication-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      },\n      \"dbname\": \"app\",\n      \"name\": \"pub\",\n      \"target\": {\n        \"allTables\": true\n      }\n    },\n    \"status\": {\n      \"applied\": false\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"ScheduledBackup\",\n    \"metadata\": {\n      \"name\": \"scheduledbackup-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      },\n      \"schedule\": \"0 0 0 * * *\"\n    },\n    \"status\": {\n      \"lastCheckTime\": null\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Subscription\",\n    \"metadata\": {\n      \"name\": \"subscription-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample-dest\"\n      },\n      \"dbname\": \"app\",\n      \"externalClusterName\": \"cluster-sample\",\n      \"name\": \"sub\",\n      \"publicationName\": \"pub\"\n    },\n    \"status\": {\n      \"applied\": false\n    }\n  }\n]",
        "capabilities": "Auto Pilot",
        "categories": "Database",
        "certified": "true",
        "containerImage": "ghcr.io/cloudnative-pg/cloudnative-pg@sha256:53995e9d6a7760c77d77e5298f78b49029427494f4dd933d5fa7a74f7af3bb44",
        "createdAt": "2025-08-12T14:08:35Z",
        "description": "CloudNativePG is an open source operator designed to manage highly available PostgreSQL databases with a primary/standby architecture on any supported Kubernetes cluster.",
        "features.operators.openshift.io/disconnected": "true",
        "features.operators.openshift.io/fips-compliant": "false",
        "features.operators.openshift.io/proxy-aware": "false",
        "features.operators.openshift.io/tls-profiles": "false",
        "features.operators.openshift.io/token-auth-aws": "false",
        "features.operators.openshift.io/token-auth-azure": "false",
        "features.operators.openshift.io/token-auth-gcp": "false",
        "olm.operatorGroup": "global-operators",
        "olm.operatorNamespace": "operators",
        "operatorframework.io/properties": "{\"properties\":[{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Backup\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Cluster\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"ClusterImageCatalog\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Database\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"FailoverQuorum\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"ImageCatalog\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Pooler\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Publication\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"ScheduledBackup\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Subscription\",\"version\":\"v1\"}},{\"type\":\"olm.package\",\"value\":{\"packageName\":\"cloudnative-pg\",\"version\":\"1.27.0\"}}]}",
        "operators.operatorframework.io/builder": "operator-sdk-v1.41.1",
        "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v4",
        "repository": "https://github.com/cloudnative-pg/cloudnative-pg",
        "support": "Community"
      },
      "owned_crds": [
        "backups.postgresql.cnpg.io",
        "clusterimagecatalogs.postgresql.cnpg.io",
        "clusters.postgresql.cnpg.io",
        "databases.postgresql.cnpg.io",
        "failoverquorums.postgresql.cnpg.io",
        "imagecatalogs.postgresql.cnpg.io",
        "poolers.postgresql.cnpg.io",
        "publications.postgresql.cnpg.io",
        "scheduledbackups.postgresql.cnpg.io",
        "subscriptions.postgresql.cnpg.io"
      ],
      "required_crds": [],
      "permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps",
                "secrets",
                "services"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps/status",
                "secrets/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "events"
              ],
              "verbs": [
                "create",
                "patch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "nodes"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "persistentvolumeclaims",
                "pods",
                "pods/exec"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "pods/status"
              ],
              "verbs": [
                "get"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "serviceaccounts"
              ],
              "verbs": [
                "create",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "admissionregistration.k8s.io"
              ],
              "resources": [
                "mutatingwebhookconfigurations",
                "validatingwebhookconfigurations"
              ],
              "verbs": [
                "get",
                "patch"
              ]
            },
            {
              "apiGroups": [
                "apps"
              ],
              "resources": [
                "deployments"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "batch"
              ],
              "resources": [
                "jobs"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "coordination.k8s.io"
              ],
              "resources": [
                "leases"
              ],
              "verbs": [
                "create",
                "get",
                "update"
              ]
            },
            {
              "apiGroups": [
                "monitoring.coreos.com"
              ],
              "resources": [
                "podmonitors"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "policy"
              ],
              "resources": [
                "poddisruptionbudgets"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "backups",
                "clusters",
                "databases",
                "poolers",
                "publications",
                "scheduledbackups",
                "subscriptions"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "backups/status",
                "databases/status",
                "publications/status",
                "scheduledbackups/status",
                "subscriptions/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "clusterimagecatalogs",
                "imagecatalogs"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "clusters/finalizers",
                "poolers/finalizers"
              ],
              "verbs": [
                "update"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "clusters/status",
                "failoverquorums/status",
                "poolers/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "failoverquorums"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "rbac.authorization.k8s.io"
              ],
              "resources": [
                "rolebindings",
                "roles"
              ],
              "verbs": [
                "create",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "snapshot.storage.k8s.io"
              ],
              "resources": [
                "volumesnapshots"
              ],
              "verbs": [
                "create",
                "get",
                "list",
                "patch",
                "watch"
              ]
            }
          ],
          "serviceAccountName": "cnpg-manager"
        }
      ],
      "cluster_permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "nodes"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "clusterimagecatalogs"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            }
          ],
          "serviceAccountName": "cnpg-manager"
        }
      ],
      "replaces": "cloudnative-pg.v1.26.1",
      "skips": [],
      "min_kube_version": "1.23.0"
    },
    {
      "name": "mariadb-operator.v25.8.3",
      "namespace": "demo",
      "display_name": "MariaDB Operator",
      "version": "25.8.3",
      "phase": "Succeeded",
      "description": "Install [`mariadb-operator`](https://github.com/mariadb-operator/mariadb-operator) via [OLM](https://olm.operatorframework.io/) using the [helm chart](https://artifacthub.io/packages/helm/mariadb-operator/mariadb-operator).\n\nThis helm operator provides provides a 1:1 mapping between the official helm chart and the [`MariadbOperator`](https://github.com/mariadb-operator/mariadb-operator-helm/blob/main/config/samples/helm_v1alpha1_mariadboperator.yaml) CRD, allowing to install [`mariadb-operator`](https://github.com/mariadb-operator/mariadb-operator) via OLM without having to do any change in the helm chart.\n\nNormally, you would install [`mariadb-operator`](https://github.com/mariadb-operator/mariadb-operator) providing this `values.yaml` to the helm chart:\n```yaml\nimage:\n  repository: ghcr.io/mariadb-operator/mariadb-operator\n  pullPolicy: IfNotPresent\nlogLevel: INFO\nha:\n  enabled: true\nmetrics:\n  enabled: true\n  serviceMonitor:\n    enabled: true\nwebhook:\n  cert:\n    certManager:\n      enabled: true\n```\n\nThis helm chart installation is abstracted in the [`MariadbOperator`](https://github.com/mariadb-operator/mariadb-operator-helm/blob/main/config/samples/helm_v1alpha1_mariadboperator.yaml) CRD, which will be reconciled by the helm operator:\n```yaml\napiVersion: helm.k8s.mariadb.com/v1alpha1\nkind: MariadbOperator\nmetadata:\n  name: mariadb-operator\nspec:\n  image:\n    repository: ghcr.io/mariadb-operator/mariadb-operator\n    pullPolicy: IfNotPresent\n  logLevel: INFO\n  ha:\n    enabled: true\n  metrics:\n    enabled: true\n    serviceMonitor:\n      enabled: true\n  webhook:\n    cert:\n      certManager:\n        enabled: true\n```\n\nOnce you have installed the operator, you will able to install a [`MariaDB`](https://github.com/mariadb-operator/mariadb-operator/blob/main/examples/manifests/mariadb_v1alpha1_mariadb.yaml) instance. Refer to the main [`mariadb-operator`](https://github.com/mariadb-operator/mariadb-operator) documentation for getting started with the rest of CRDs.\n\n## Documentation\n* [mariadb-operator](https://github.com/mariadb-operator/mariadb-operator/blob/main/README.md)\n* [mariadb-operator-helm](https://github.com/mariadb-operator/mariadb-operator-helm/blob/main/README.md)\n\n## Releases\nThis operator is automatically published in the following repositories whenever a new version of the [helm chart](https://artifacthub.io/packages/helm/mariadb-operator/mariadb-operator) is released:\n- [k8s-operatorhub/community-operators](https://github.com/k8s-operatorhub/community-operators)\n- [redhat-openshift-ecosystem/community-operators-prod](https://github.com/redhat-openshift-ecosystem/community-operators-prod)\n\n## Roadmap\nTake a look at our [roadmap](https://github.com/mariadb-operator/mariadb-operator/blob/main/ROADMAP.md) and feel free to open an issue to suggest new features.\n\n## Contributing\nWe welcome and encourage contributions to this project! Please check our [contributing](https://github.com/mariadb-operator/mariadb-operator/blob/main/CONTRIBUTING.md) and [development](https://github.com/mariadb-operator/mariadb-operator/blob/main/docs/DEVELOPMENT.md) guides. PRs welcome!\n\n## Get in touch\nJoin us on Slack: **[MariaDB Community Slack](https://r.mariadb.com/join-community-slack)**.\n",
      "provider": "mariadb-operator",
      "install_strategy": "OwnNamespace",
      "creation_timestamp": "2025-09-07T09:15:58Z",
      "labels": {
        "olm.copiedFrom": "operators",
        "olm.managed": "true"
      },
      "annotations": {
        "alm-examples": "[\n  {\n    \"apiVersion\": \"helm.mariadb.mmontes.io/v1alpha1\",\n    \"kind\": \"MariadbOperator\",\n    \"metadata\": {\n      \"name\": \"mariadb-operator\"\n    },\n    \"spec\": {\n      \"affinity\": {},\n      \"certController\": {\n        \"affinity\": {},\n        \"caValidity\": \"35064h\",\n        \"certValidity\": \"8766h\",\n        \"enabled\": true,\n        \"extrArgs\": [],\n        \"extraVolumeMounts\": [],\n        \"extraVolumes\": [],\n        \"ha\": {\n          \"enabled\": false,\n          \"replicas\": 3\n        },\n        \"image\": {\n          \"pullPolicy\": \"IfNotPresent\",\n          \"repository\": \"ghcr.io/mariadb-operator/mariadb-operator\",\n          \"tag\": \"\"\n        },\n        \"imagePullSecrets\": [],\n        \"lookaheadValidity\": \"2160h\",\n        \"nodeSelector\": {},\n        \"podAnnotations\": {},\n        \"podSecurityContext\": {},\n        \"requeueDuration\": \"5m\",\n        \"resources\": {},\n        \"securityContext\": {},\n        \"serviceAccount\": {\n          \"annotations\": {},\n          \"automount\": true,\n          \"enabled\": true,\n          \"extraLabels\": {},\n          \"name\": \"\"\n        },\n        \"serviceMonitor\": {\n          \"additionalLabels\": {},\n          \"enabled\": true,\n          \"interval\": \"30s\",\n          \"scrapeTimeout\": \"25s\"\n        },\n        \"tolerations\": []\n      },\n      \"clusterName\": \"cluster.local\",\n      \"extrArgs\": [],\n      \"extraVolumeMounts\": [],\n      \"extraVolumes\": [],\n      \"fullnameOverride\": \"\",\n      \"ha\": {\n        \"enabled\": false,\n        \"replicas\": 3\n      },\n      \"image\": {\n        \"pullPolicy\": \"IfNotPresent\",\n        \"repository\": \"ghcr.io/mariadb-operator/mariadb-operator\",\n        \"tag\": \"\"\n      },\n      \"imagePullSecrets\": [],\n      \"logLevel\": \"INFO\",\n      \"metrics\": {\n        \"enabled\": false,\n        \"serviceMonitor\": {\n          \"additionalLabels\": {},\n          \"enabled\": true,\n          \"interval\": \"30s\",\n          \"scrapeTimeout\": \"25s\"\n        }\n      },\n      \"nameOverride\": \"\",\n      \"nodeSelector\": {},\n      \"podAnnotations\": {},\n      \"podSecurityContext\": {},\n      \"rbac\": {\n        \"enabled\": true\n      },\n      \"resources\": {},\n      \"securityContext\": {},\n      \"serviceAccount\": {\n        \"annotations\": {},\n        \"automount\": true,\n        \"enabled\": true,\n        \"extraLabels\": {},\n        \"name\": \"\"\n      },\n      \"tolerations\": [],\n      \"webhook\": {\n        \"affinity\": {},\n        \"annotations\": {},\n        \"cert\": {\n          \"caPath\": \"/tmp/k8s-webhook-server/certificate-authority\",\n          \"certManager\": {\n            \"duration\": \"\",\n            \"enabled\": false,\n            \"issuerRef\": {},\n            \"renewBefore\": \"\"\n          },\n          \"path\": \"/tmp/k8s-webhook-server/serving-certs\",\n          \"secretAnnotations\": {}\n        },\n        \"extrArgs\": [],\n        \"extraVolumeMounts\": [],\n        \"extraVolumes\": [],\n        \"ha\": {\n          \"enabled\": false,\n          \"replicas\": 3\n        },\n        \"hostNetwork\": false,\n        \"image\": {\n          \"pullPolicy\": \"IfNotPresent\",\n          \"repository\": \"ghcr.io/mariadb-operator/mariadb-operator\",\n          \"tag\": \"\"\n        },\n        \"imagePullSecrets\": [],\n        \"nodeSelector\": {},\n        \"podAnnotations\": {},\n        \"podSecurityContext\": {},\n        \"port\": 10250,\n        \"resources\": {},\n        \"securityContext\": {},\n        \"serviceAccount\": {\n          \"annotations\": {},\n          \"automount\": true,\n          \"enabled\": true,\n          \"extraLabels\": {},\n          \"name\": \"\"\n        },\n        \"serviceMonitor\": {\n          \"additionalLabels\": {},\n          \"enabled\": true,\n          \"interval\": \"30s\",\n          \"scrapeTimeout\": \"25s\"\n        },\n        \"tolerations\": []\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"backup\"\n    },\n    \"spec\": {\n      \"args\": [\n        \"--single-transaction\",\n        \"--all-databases\"\n      ],\n      \"logLevel\": \"info\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"maxRetention\": \"720h\",\n      \"resources\": {\n        \"limits\": {\n          \"cpu\": \"300m\",\n          \"memory\": \"512Mi\"\n        },\n        \"requests\": {\n          \"cpu\": \"100m\",\n          \"memory\": \"128Mi\"\n        }\n      },\n      \"schedule\": {\n        \"cron\": \"*/1 * * * *\",\n        \"suspend\": false\n      },\n      \"storage\": {\n        \"s3\": {\n          \"accessKeyIdSecretKeyRef\": {\n            \"key\": \"access-key-id\",\n            \"name\": \"minio\"\n          },\n          \"bucket\": \"backups\",\n          \"endpoint\": \"minio.minio.svc.cluster.local:9000\",\n          \"prefix\": \"mariadb\",\n          \"secretAccessKeySecretKeyRef\": {\n            \"key\": \"secret-access-key\",\n            \"name\": \"minio\"\n          },\n          \"tls\": {\n            \"caSecretKeyRef\": {\n              \"key\": \"ca.crt\",\n              \"name\": \"minio-ca\"\n            },\n            \"enabled\": true\n          }\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Connection\",\n    \"metadata\": {\n      \"name\": \"connection\"\n    },\n    \"spec\": {\n      \"database\": \"mariadb\",\n      \"healthCheck\": {\n        \"interval\": \"10s\",\n        \"retryInterval\": \"3s\"\n      },\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"params\": {\n        \"parseTime\": \"true\"\n      },\n      \"passwordSecretKeyRef\": {\n        \"key\": \"password\",\n        \"name\": \"mariadb\"\n      },\n      \"secretName\": \"connection\",\n      \"secretTemplate\": {\n        \"annotations\": {\n          \"k8s.mariadb.com/connection\": \"sample\"\n        },\n        \"databaseKey\": \"database\",\n        \"hostKey\": \"host\",\n        \"key\": \"dsn\",\n        \"labels\": {\n          \"k8s.mariadb.com/connection\": \"sample\"\n        },\n        \"passwordKey\": \"password\",\n        \"portKey\": \"port\",\n        \"usernameKey\": \"username\"\n      },\n      \"serviceName\": \"mariadb\",\n      \"username\": \"mariadb\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Database\",\n    \"metadata\": {\n      \"name\": \"data-test\"\n    },\n    \"spec\": {\n      \"characterSet\": \"utf8\",\n      \"collate\": \"utf8_general_ci\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"retryInterval\": \"5s\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Grant\",\n    \"metadata\": {\n      \"name\": \"grant\"\n    },\n    \"spec\": {\n      \"database\": \"*\",\n      \"grantOption\": true,\n      \"host\": \"%\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"privileges\": [\n        \"SELECT\",\n        \"INSERT\",\n        \"UPDATE\"\n      ],\n      \"requeueInterval\": \"30s\",\n      \"retryInterval\": \"5s\",\n      \"table\": \"*\",\n      \"username\": \"user\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"MariaDB\",\n    \"metadata\": {\n      \"name\": \"mariadb\"\n    },\n    \"spec\": {\n      \"connection\": {\n        \"secretName\": \"mariadb-conn\",\n        \"secretTemplate\": {\n          \"key\": \"dsn\"\n        }\n      },\n      \"database\": \"mariadb\",\n      \"galera\": {\n        \"enabled\": true\n      },\n      \"metrics\": {\n        \"enabled\": true,\n        \"passwordSecretKeyRef\": {\n          \"generate\": true,\n          \"key\": \"password\",\n          \"name\": \"mariadb-metrics\"\n        }\n      },\n      \"myCnf\": \"[mariadb]\\nbind-address=*\\ndefault_storage_engine=InnoDB\\nbinlog_format=row\\ninnodb_autoinc_lock_mode=2\\ninnodb_buffer_pool_size=1024M\\nmax_allowed_packet=256M\\n\",\n      \"passwordSecretKeyRef\": {\n        \"generate\": true,\n        \"key\": \"password\",\n        \"name\": \"mariadb-password\"\n      },\n      \"primaryConnection\": {\n        \"secretName\": \"mariadb-conn-primary\",\n        \"secretTemplate\": {\n          \"key\": \"dsn\"\n        }\n      },\n      \"primaryService\": {\n        \"type\": \"ClusterIP\"\n      },\n      \"replicas\": 3,\n      \"rootPasswordSecretKeyRef\": {\n        \"generate\": true,\n        \"key\": \"password\",\n        \"name\": \"mariadb-root\"\n      },\n      \"secondaryConnection\": {\n        \"secretName\": \"mariadb-conn-secondary\",\n        \"secretTemplate\": {\n          \"key\": \"dsn\"\n        }\n      },\n      \"secondaryService\": {\n        \"type\": \"ClusterIP\"\n      },\n      \"service\": {\n        \"type\": \"ClusterIP\"\n      },\n      \"storage\": {\n        \"size\": \"1Gi\"\n      },\n      \"updateStrategy\": {\n        \"type\": \"ReplicasFirstPrimaryLast\"\n      },\n      \"username\": \"mariadb\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"MaxScale\",\n    \"metadata\": {\n      \"name\": \"maxscale-galera\"\n    },\n    \"spec\": {\n      \"admin\": {\n        \"guiEnabled\": true,\n        \"port\": 8989\n      },\n      \"auth\": {\n        \"generate\": true\n      },\n      \"config\": {\n        \"sync\": {\n          \"database\": \"mysql\",\n          \"interval\": \"5s\",\n          \"timeout\": \"10s\"\n        }\n      },\n      \"connection\": {\n        \"port\": 3306,\n        \"secretName\": \"mxs-galera-conn\"\n      },\n      \"guiKubernetesService\": {\n        \"metadata\": {\n          \"annotations\": {\n            \"metallb.universe.tf/loadBalancerIPs\": \"172.18.0.231\"\n          }\n        },\n        \"type\": \"LoadBalancer\"\n      },\n      \"kubernetesService\": {\n        \"annotations\": {\n          \"metallb.universe.tf/loadBalancerIPs\": \"172.18.0.224\"\n        },\n        \"type\": \"LoadBalancer\"\n      },\n      \"mariaDbRef\": {\n        \"name\": \"mariadb-galera\"\n      },\n      \"monitor\": {\n        \"cooperativeMonitoring\": \"majority_of_all\",\n        \"interval\": \"2s\",\n        \"params\": {\n          \"available_when_donor\": \"false\",\n          \"disable_master_failback\": \"false\",\n          \"disable_master_role_setting\": \"false\"\n        }\n      },\n      \"replicas\": 3,\n      \"requeueInterval\": \"10s\",\n      \"services\": [\n        {\n          \"listener\": {\n            \"params\": {\n              \"connection_metadata\": \"tx_isolation=auto\"\n            },\n            \"port\": 3306,\n            \"protocol\": \"MariaDBProtocol\"\n          },\n          \"name\": \"rw-router\",\n          \"params\": {\n            \"master_accept_reads\": \"true\",\n            \"max_replication_lag\": \"3s\",\n            \"max_slave_connections\": \"255\",\n            \"transaction_replay\": \"true\",\n            \"transaction_replay_attempts\": \"10\",\n            \"transaction_replay_timeout\": \"5s\"\n          },\n          \"router\": \"readwritesplit\"\n        },\n        {\n          \"listener\": {\n            \"port\": 3307\n          },\n          \"name\": \"rconn-master-router\",\n          \"params\": {\n            \"master_accept_reads\": \"true\",\n            \"max_replication_lag\": \"3s\",\n            \"router_options\": \"master\"\n          },\n          \"router\": \"readconnroute\"\n        },\n        {\n          \"listener\": {\n            \"port\": 3308\n          },\n          \"name\": \"rconn-slave-router\",\n          \"params\": {\n            \"max_replication_lag\": \"3s\",\n            \"router_options\": \"slave\"\n          },\n          \"router\": \"readconnroute\"\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"PhysicalBackup\",\n    \"metadata\": {\n      \"name\": \"physicalbackup\"\n    },\n    \"spec\": {\n      \"compression\": \"bzip2\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"maxRetention\": \"720h\",\n      \"podAffinity\": true,\n      \"resources\": {\n        \"limits\": {\n          \"cpu\": \"300m\",\n          \"memory\": \"512Mi\"\n        },\n        \"requests\": {\n          \"cpu\": \"100m\",\n          \"memory\": \"128Mi\"\n        }\n      },\n      \"schedule\": {\n        \"cron\": \"*/1 * * * *\",\n        \"immediate\": true,\n        \"suspend\": false\n      },\n      \"serviceAccountName\": \"backup\",\n      \"stagingStorage\": {\n        \"persistentVolumeClaim\": {\n          \"accessModes\": [\n            \"ReadWriteOnce\"\n          ],\n          \"resources\": {\n            \"requests\": {\n              \"storage\": \"1Gi\"\n            }\n          }\n        }\n      },\n      \"storage\": {\n        \"s3\": {\n          \"accessKeyIdSecretKeyRef\": {\n            \"key\": \"access-key-id\",\n            \"name\": \"minio\"\n          },\n          \"bucket\": \"physicalbackups\",\n          \"endpoint\": \"minio.minio.svc.cluster.local:9000\",\n          \"prefix\": \"mariadb\",\n          \"region\": \"us-east-1\",\n          \"secretAccessKeySecretKeyRef\": {\n            \"key\": \"secret-access-key\",\n            \"name\": \"minio\"\n          },\n          \"tls\": {\n            \"caSecretKeyRef\": {\n              \"key\": \"ca.crt\",\n              \"name\": \"minio-ca\"\n            },\n            \"enabled\": true\n          }\n        }\n      },\n      \"timeout\": \"1h\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Restore\",\n    \"metadata\": {\n      \"name\": \"restore\"\n    },\n    \"spec\": {\n      \"backupRef\": {\n        \"name\": \"backup\"\n      },\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"resources\": {\n        \"limits\": {\n          \"cpu\": \"300m\",\n          \"memory\": \"512Mi\"\n        },\n        \"requests\": {\n          \"cpu\": \"100m\",\n          \"memory\": \"128Mi\"\n        }\n      },\n      \"targetRecoveryTime\": \"2023-12-19T09:00:00Z\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"SqlJob\",\n    \"metadata\": {\n      \"name\": \"03-stars\"\n    },\n    \"spec\": {\n      \"database\": \"mariadb\",\n      \"dependsOn\": [\n        {\n          \"name\": \"01-users\"\n        },\n        {\n          \"name\": \"02-repos\"\n        }\n      ],\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"passwordSecretKeyRef\": {\n        \"key\": \"password\",\n        \"name\": \"mariadb\"\n      },\n      \"schedule\": {\n        \"cron\": \"*/1 * * * *\",\n        \"suspend\": false\n      },\n      \"sql\": \"CREATE TABLE IF NOT EXISTS stars (\\n  id bigint PRIMARY KEY AUTO_INCREMENT,\\n  user_id bigint NOT NULL,\\n  repo_id bigint NOT NULL,\\n  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,\\n  FOREIGN KEY (repo_id) REFERENCES repos(id) ON DELETE CASCADE,\\n  UNIQUE KEY (user_id, repo_id)\\n);\\nINSERT INTO stars(user_id, repo_id) \\n  VALUES((SELECT id FROM users ORDER BY RAND() LIMIT 1), (SELECT id FROM repos ORDER BY RAND() LIMIT 1))\\n  ON DUPLICATE KEY UPDATE id=id;\\nDELETE FROM stars WHERE id = (SELECT id FROM stars ORDER BY RAND() LIMIT 1);\\nSELECT r.name AS repo, COUNT(*) AS stars\\nFROM stars s\\nJOIN repos r\\nON s.repo_id = r.id\\nGROUP BY r.id\\nORDER BY stars DESC;\",\n      \"username\": \"mariadb\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"User\",\n    \"metadata\": {\n      \"name\": \"user\"\n    },\n    \"spec\": {\n      \"host\": \"%\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"maxUserConnections\": 20,\n      \"passwordSecretKeyRef\": {\n        \"key\": \"password\",\n        \"name\": \"mariadb\"\n      },\n      \"retryInterval\": \"5s\"\n    }\n  }\n]",
        "capabilities": "Deep Insights",
        "categories": "Database",
        "containerImage": "ghcr.io/mariadb-operator/mariadb-operator-helm:25.8.3",
        "createdAt": "2025-08-08T12:14:12Z",
        "description": "Run and operate MariaDB in a cloud native way",
        "features.operators.openshift.io/disconnected": "false",
        "features.operators.openshift.io/fips-compliant": "false",
        "features.operators.openshift.io/proxy-aware": "false",
        "features.operators.openshift.io/tls-profiles": "false",
        "features.operators.openshift.io/token-auth-aws": "false",
        "features.operators.openshift.io/token-auth-azure": "false",
        "features.operators.openshift.io/token-auth-gcp": "false",
        "olm.operatorGroup": "global-operators",
        "olm.operatorNamespace": "operators",
        "operatorframework.io/properties": "{\"properties\":[{\"type\":\"olm.gvk\",\"value\":{\"group\":\"helm.mariadb.mmontes.io\",\"kind\":\"MariadbOperator\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Backup\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Connection\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Database\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Grant\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"MariaDB\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"MaxScale\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"PhysicalBackup\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Restore\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"SqlJob\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"User\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.package\",\"value\":{\"packageName\":\"mariadb-operator\",\"version\":\"25.8.3\"}}]}",
        "operators.operatorframework.io/builder": "operator-sdk-v1.26.0",
        "operators.operatorframework.io/project_layout": "helm.sdk.operatorframework.io/v1",
        "repository": "https://github.com/mariadb-operator/mariadb-operator",
        "support": "mariadb-operator"
      },
      "owned_crds": [
        "backups.k8s.mariadb.com",
        "connections.k8s.mariadb.com",
        "databases.k8s.mariadb.com",
        "grants.k8s.mariadb.com",
        "mariadboperators.helm.mariadb.mmontes.io",
        "mariadbs.k8s.mariadb.com",
        "maxscales.k8s.mariadb.com",
        "physicalbackups.k8s.mariadb.com",
        "restores.k8s.mariadb.com",
        "sqljobs.k8s.mariadb.com",
        "users.k8s.mariadb.com"
      ],
      "required_crds": [],
      "permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps"
              ],
              "verbs": [
                "get",
                "list",
                "watch",
                "create",
                "update",
                "patch",
                "delete"
              ]
            },
            {
              "apiGroups": [
                "coordination.k8s.io"
              ],
              "resources": [
                "leases"
              ],
              "verbs": [
                "get",
                "list",
                "watch",
                "create",
                "update",
                "patch",
                "delete"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "events"
              ],
              "verbs": [
                "create",
                "patch"
              ]
            }
          ],
          "serviceAccountName": "mariadb-operator-helm-controller-manager"
        }
      ],
      "cluster_permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "namespaces"
              ],
              "verbs": [
                "get"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "secrets"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "events"
              ],
              "verbs": [
                "create"
              ]
            },
            {
              "apiGroups": [
                "helm.mariadb.mmontes.io"
              ],
              "resources": [
                "mariadboperators",
                "mariadboperators/status",
                "mariadboperators/finalizers"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "rbac.authorization.k8s.io"
              ],
              "resources": [
                "clusterrolebindings",
                "clusterroles"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "admissionregistration.k8s.io"
              ],
              "resources": [
                "validatingwebhookconfigurations",
                "mutatingwebhookconfigurations"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "rbac.authorization.k8s.io"
              ],
              "resources": [
                "rolebindings",
                "roles"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "apps"
              ],
              "resources": [
                "deployments"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "serviceaccounts",
                "services"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "apiextensions.k8s.io"
              ],
              "resources": [
                "customresourcedefinitions"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "cert-manager.io"
              ],
              "resources": [
                "certificates",
                "issuers"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "monitoring.coreos.com"
              ],
              "resources": [
                "servicemonitors"
              ],
              "verbs": [
                "*"
              ]
            }
          ],
          "serviceAccountName": "mariadb-operator-helm-controller-manager"
        }
      ],
      "replaces": "mariadb-operator.v25.8.2",
      "skips": [],
      "min_kube_version": "1.16.0"
    },
    {
      "name": "oracle-database-operator.v1.2.0",
      "namespace": "demo",
      "display_name": "Oracle Database Operator",
      "version": "1.2.0",
      "phase": "Installing",
      "description": "As part of Oracle's resolution to make Oracle Database Kubernetes native (that is, observable and operable by Kubernetes), Oracle released Oracle Database Operator for Kubernetes (OraOperator or the operator). OraOperator extends the Kubernetes API with custom resources and controllers for automating Oracle Database lifecycle management.\nIn this v1.2.0 production release, OraOperator supports the following database configurations and infrastructure:\n##Supported Database Configurations:\n* Oracle Cloud Infrastructure (OCI) Databases\n  * Oracle Autonomous Database Serverless (ADB-S)\n  * Oracle Autonomous Database on Dedicated on (ADB-D)\n  * Oracle Base Database Cloud Service (Base DB)\n* Containerized Database deployments on Kubernetes\n  * Oracle Kubernetes Engine (OKE) and Oracle Cloud Native Environments (OCNE)\n    * Single Instance databases (SIDB)\n    * Globally Distributed Databases (Shared)\n    * Oracle Data Guard\n    * True Cache (Preview release)\n    * Oracle Database Observability\n* On-Premises Databases\n  * Oracle Multitenant Databases (CDB/PDBs management)\n  * ORDS Services\n\nRefer to full feature list and capabilities: [https://github.com/oracle/oracle-database-operator/blob/main/README.md](https://github.com/oracle/oracle-database-operator/blob/main/README.md)\n",
      "provider": "Oracle",
      "install_strategy": "OwnNamespace",
      "creation_timestamp": "2025-09-07T09:13:37Z",
      "labels": {
        "olm.copiedFrom": "operators",
        "olm.managed": "true"
      },
      "annotations": {
        "alm-examples": "[\n  {\n    \"apiVersion\": \"database.oracle.com/v1alpha1\",\n    \"kind\": \"CDB\",\n    \"metadata\": {\n      \"name\": \"cdb-dev\",\n      \"namespace\": \"oracle-database-operator-system\"\n    },\n    \"spec\": {\n      \"cdbAdminPwd\": {\n        \"secret\": {\n          \"key\": \"cdbadmin_pwd\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"cdbAdminUser\": {\n        \"secret\": {\n          \"key\": \"cdbadmin_user\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"cdbName\": \"devcdb\",\n      \"dbPort\": 1521,\n      \"dbServer\": \"172.17.0.4\",\n      \"ordsImage\": \"\",\n      \"ordsImagePullPolicy\": \"Always\",\n      \"ordsPwd\": {\n        \"secret\": {\n          \"key\": \"ords_pwd\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"replicas\": 1,\n      \"serviceName\": \"devdb.example.com\",\n      \"sysAdminPwd\": {\n        \"secret\": {\n          \"key\": \"sysadmin_pwd\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"webServerPwd\": {\n        \"secret\": {\n          \"key\": \"webserver_pwd\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"webServerUser\": {\n        \"secret\": {\n          \"key\": \"webserver_user\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v1alpha1\",\n    \"kind\": \"DbcsSystem\",\n    \"metadata\": {\n      \"name\": \"dbcssystem-sample\"\n    },\n    \"spec\": {\n      \"foo\": \"bar\"\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v1alpha1\",\n    \"kind\": \"PDB\",\n    \"metadata\": {\n      \"labels\": {\n        \"cdb\": \"cdb-dev\"\n      },\n      \"name\": \"pdb1\",\n      \"namespace\": \"oracle-database-operator-system\"\n    },\n    \"spec\": {\n      \"action\": \"Create\",\n      \"adminName\": {\n        \"secret\": {\n          \"key\": \"sysadmin_user\",\n          \"secretName\": \"pdb1-secret\"\n        }\n      },\n      \"adminPwd\": {\n        \"secret\": {\n          \"key\": \"sysadmin_pwd\",\n          \"secretName\": \"pdb1-secret\"\n        }\n      },\n      \"cdbName\": \"devcdb\",\n      \"cdbResName\": \"cdb-dev\",\n      \"fileNameConversions\": \"NONE\",\n      \"pdbName\": \"pdbdev\",\n      \"tempSize\": \"100M\",\n      \"totalSize\": \"1G\"\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v4\",\n    \"kind\": \"AutonomousContainerDatabase\",\n    \"metadata\": {\n      \"name\": \"autonomouscontainerdatabase-sample\"\n    },\n    \"spec\": {\n      \"autonomousExadataVMClusterOCID\": \"ocid1.autonomousexainfrastructure...\",\n      \"compartmentOCID\": \"ocid1.compartment... OR ocid1.tenancy...\",\n      \"displayName\": \"newACD\",\n      \"ociConfig\": {\n        \"configMapName\": \"oci-cred\",\n        \"secretName\": \"oci-privatekey\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v4\",\n    \"kind\": \"AutonomousDatabase\",\n    \"metadata\": {\n      \"name\": \"autonomousdatabase-sample\"\n    },\n    \"spec\": {\n      \"action\": \"Create\",\n      \"details\": {\n        \"adminPassword\": {\n          \"k8sSecret\": {\n            \"name\": \"admin-password\"\n          }\n        },\n        \"compartmentId\": \"ocid1.compartment... OR ocid1.tenancy...\",\n        \"cpuCoreCount\": 1,\n        \"dataStorageSizeInTBs\": 1,\n        \"dbName\": \"NewADB\",\n        \"displayName\": \"NewADB\"\n      },\n      \"ociConfig\": {\n        \"configMapName\": \"oci-cred\",\n        \"secretName\": \"oci-privatekey\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v4\",\n    \"kind\": \"AutonomousDatabaseBackup\",\n    \"metadata\": {\n      \"name\": \"autonomousdatabasebackup-sample\"\n    },\n    \"spec\": {\n      \"displayName\": \"autonomousdatabasebackup-sample\",\n      \"isLongTermBackup\": true,\n      \"ociConfig\": {\n        \"configMapName\": \"oci-cred\",\n        \"secretName\": \"oci-privatekey\"\n      },\n      \"retentionPeriodInDays\": 90,\n      \"target\": {\n        \"k8sADB\": {\n          \"name\": \"autonomousdatabase-sample\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v4\",\n    \"kind\": \"SingleInstanceDatabase\",\n    \"metadata\": {\n      \"name\": \"sidb-sample\",\n      \"namespace\": \"default\"\n    },\n    \"spec\": {\n      \"adminPassword\": {\n        \"secretName\": \"db-admin-secret\"\n      },\n      \"archiveLog\": true,\n      \"charset\": \"AL32UTF8\",\n      \"edition\": \"enterprise\",\n      \"image\": {\n        \"pullFrom\": \"container-registry.oracle.com/database/enterprise_ru:19\",\n        \"pullSecrets\": \"oracle-container-registry-secret\"\n      },\n      \"pdbName\": \"orclpdb1\",\n      \"persistence\": {\n        \"accessMode\": \"ReadWriteOnce\",\n        \"size\": \"100Gi\",\n        \"storageClass\": \"oci-bv\"\n      },\n      \"replicas\": 1,\n      \"sid\": \"ORCL1\"\n    }\n  },\n  {\n    \"apiVersion\": \"observability.oracle.com/v1alpha1\",\n    \"kind\": \"DatabaseObserver\",\n    \"metadata\": {\n      \"name\": \"obs-sample\"\n    },\n    \"spec\": {\n      \"database\": {\n        \"dbConnectionString\": {\n          \"key\": \"connection\",\n          \"secret\": \"db-secret\"\n        },\n        \"dbPassword\": {\n          \"key\": \"password\",\n          \"secret\": \"db-secret\"\n        },\n        \"dbUser\": {\n          \"key\": \"username\",\n          \"secret\": \"db-secret\"\n        },\n        \"dbWallet\": {\n          \"secret\": \"instance-wallet\"\n        }\n      },\n      \"exporter\": {\n        \"configuration\": {\n          \"configmap\": {\n            \"configmapName\": \"devcm-oradevdb-config\",\n            \"key\": \"config.toml\"\n          }\n        },\n        \"image\": \"container-registry.oracle.com/database/observability-exporter:latest\",\n        \"service\": {\n          \"port\": 9161\n        }\n      },\n      \"ociConfig\": {\n        \"configMapName\": \"oci-cred\",\n        \"secretName\": \"oci-privatekey\"\n      },\n      \"prometheus\": {\n        \"labels\": {\n          \"app\": \"app-sample-label\"\n        },\n        \"port\": \"metrics\"\n      },\n      \"replicas\": 1\n    }\n  }\n]",
        "capabilities": "Seamless Upgrades",
        "categories": "Database",
        "containerImage": "container-registry.oracle.com/database/operator:1.2.0",
        "createdAt": "2025-04-10T20:09:48Z",
        "olm.operatorGroup": "global-operators",
        "olm.operatorNamespace": "operators",
        "operatorframework.io/properties": "{\"properties\":[{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousContainerDatabase\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousContainerDatabase\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabase\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabase\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabaseBackup\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabaseBackup\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabaseRestore\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabaseRestore\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"CDB\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"CDB\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"DataguardBroker\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"DataguardBroker\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"DbcsSystem\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"DbcsSystem\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"LREST\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"LRPDB\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"OracleRestDataService\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"OracleRestDataService\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"OrdsSrvs\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"PDB\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"PDB\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"ShardingDatabase\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"ShardingDatabase\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"SingleInstanceDatabase\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"SingleInstanceDatabase\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"observability.oracle.com\",\"kind\":\"DatabaseObserver\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"observability.oracle.com\",\"kind\":\"DatabaseObserver\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"observability.oracle.com\",\"kind\":\"DatabaseObserver\",\"version\":\"v4\"}},{\"type\":\"olm.package\",\"value\":{\"packageName\":\"oracle-database-operator\",\"version\":\"1.2.0\"}}]}",
        "operators.operatorframework.io/builder": "operator-sdk-v1.39.2",
        "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v4"
      },
      "owned_crds": [
        "autonomouscontainerdatabases.database.oracle.com",
        "autonomouscontainerdatabases.database.oracle.com",
        "autonomousdatabasebackups.database.oracle.com",
        "autonomousdatabasebackups.database.oracle.com",
        "autonomousdatabaserestores.database.oracle.com",
        "autonomousdatabaserestores.database.oracle.com",
        "autonomousdatabases.database.oracle.com",
        "autonomousdatabases.database.oracle.com",
        "cdbs.database.oracle.com",
        "cdbs.database.oracle.com",
        "databaseobservers.observability.oracle.com",
        "databaseobservers.observability.oracle.com",
        "databaseobservers.observability.oracle.com",
        "dataguardbrokers.database.oracle.com",
        "dataguardbrokers.database.oracle.com",
        "dbcssystems.database.oracle.com",
        "dbcssystems.database.oracle.com",
        "lrests.database.oracle.com",
        "lrpdbs.database.oracle.com",
        "oraclerestdataservices.database.oracle.com",
        "oraclerestdataservices.database.oracle.com",
        "ordssrvs.database.oracle.com",
        "pdbs.database.oracle.com",
        "pdbs.database.oracle.com",
        "shardingdatabases.database.oracle.com",
        "shardingdatabases.database.oracle.com",
        "singleinstancedatabases.database.oracle.com",
        "singleinstancedatabases.database.oracle.com"
      ],
      "required_crds": [],
      "permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps"
              ],
              "verbs": [
                "get",
                "list",
                "watch",
                "create",
                "update",
                "patch",
                "delete"
              ]
            },
            {
              "apiGroups": [
                "coordination.k8s.io"
              ],
              "resources": [
                "leases"
              ],
              "verbs": [
                "get",
                "list",
                "watch",
                "create",
                "update",
                "patch",
                "delete"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps/status"
              ],
              "verbs": [
                "get",
                "update",
                "patch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "events"
              ],
              "verbs": [
                "create",
                "patch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps",
                "containers",
                "deployments",
                "events",
                "namespaces",
                "persistentvolumeclaims",
                "pods",
                "pods/exec",
                "pods/log",
                "replicasets",
                "secrets",
                "services"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps/status",
                "daemonsets/status",
                "deployments/status",
                "services/status",
                "statefulsets/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "persistentvolumes"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "secrets/status"
              ],
              "verbs": [
                "get"
              ]
            },
            {
              "apiGroups": [
                "''"
              ],
              "resources": [
                "statefulsets/finalizers"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "apps"
              ],
              "resources": [
                "configmaps"
              ],
              "verbs": [
                "get",
                "list"
              ]
            },
            {
              "apiGroups": [
                "apps"
              ],
              "resources": [
                "daemonsets",
                "deployments",
                "pods",
                "replicasets",
                "services",
                "statefulsets"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "coordination.k8s.io"
              ],
              "resources": [
                "leases"
              ],
              "verbs": [
                "create",
                "get",
                "list",
                "update"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "autonomouscontainerdatabases",
                "autonomousdatabases",
                "cdbs",
                "dataguardbrokers",
                "dbcssystems",
                "events",
                "lrests",
                "lrpdbs",
                "oraclerestdataservices",
                "ordssrvs",
                "pdbs",
                "shardingdatabases",
                "singleinstancedatabases"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "autonomouscontainerdatabases/status",
                "autonomousdatabasebackups/status",
                "autonomousdatabaserestores/status",
                "cdbs/status",
                "dataguardbrokers/status",
                "dbcssystems/status",
                "lrests/status",
                "lrpdbs/status",
                "oraclerestdataservices/status",
                "ordssrvs/status",
                "pdbs/status",
                "shardingdatabases/status",
                "singleinstancedatabases/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "autonomousdatabasebackups",
                "autonomousdatabaserestores"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "autonomousdatabases/status"
              ],
              "verbs": [
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "cdbs/finalizers",
                "dataguardbrokers/finalizers",
                "lrests/finalizers",
                "oraclerestdataservices/finalizers",
                "ordssrvs/finalizers",
                "singleinstancedatabases/finalizers"
              ],
              "verbs": [
                "update"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "dbcssystems/finalizers",
                "lrpdbs/finalizers",
                "pdbs/finalizers",
                "shardingdatabases/finalizers"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "monitoring.coreos.com"
              ],
              "resources": [
                "servicemonitors"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "observability.oracle.com"
              ],
              "resources": [
                "databaseobservers"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "observability.oracle.com"
              ],
              "resources": [
                "databaseobservers/finalizers"
              ],
              "verbs": [
                "update"
              ]
            },
            {
              "apiGroups": [
                "observability.oracle.com"
              ],
              "resources": [
                "databaseobservers/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "storage.k8s.io"
              ],
              "resources": [
                "storageclasses"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            }
          ],
          "serviceAccountName": "default"
        }
      ],
      "cluster_permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                "authentication.k8s.io"
              ],
              "resources": [
                "tokenreviews"
              ],
              "verbs": [
                "create"
              ]
            },
            {
              "apiGroups": [
                "authorization.k8s.io"
              ],
              "resources": [
                "subjectaccessreviews"
              ],
              "verbs": [
                "create"
              ]
            }
          ],
          "serviceAccountName": "default"
        }
      ],
      "replaces": "oracle-database-operator.v1.1.0",
      "skips": [],
      "min_kube_version": ""
    },
    {
      "name": "cloudnative-pg.v1.27.0",
      "namespace": "fireworks-app",
      "display_name": "CloudNativePG",
      "version": "1.27.0",
      "phase": "Succeeded",
      "description": "Main features:\n\n- Direct integration with the Kubernetes API server for High Availability,\n  eliminating the need for external tools.\n- Self-healing capabilities, including:\n    - Automated failover by promoting the most aligned replica.\n    - Automatic recreation of failed replicas.\n- Planned switchover of the primary instance by promoting a selected replica.\n- Declarative management of key PostgreSQL configurations, including:\n    - PostgreSQL settings.\n    - Roles, users, and groups.\n    - Databases, extensions, and schemas.\n    - Tablespaces (including temporary tablespaces).\n- Flexible instance definition, supporting any number of instances (minimum 1\n  primary server).\n- Scale-up/down capabilities to dynamically adjust cluster size.\n- Read-Write and Read-Only Services, ensuring applications connect correctly:\n    - *Read-Write Service*: Routes connections to the primary server.\n    - *Read-Only Service*: Distributes connections among replicas for read workloads.\n- Support for quorum-based and priority-based PostgreSQL Synchronous\n  Replication.\n- Replica clusters enabling PostgreSQL distributed topologies across multiple\n  Kubernetes clusters (private, public, hybrid, and multi-cloud).\n- Delayed Replica clusters for point-in-time access to historical data.\n- Persistent volume management, including:\n    - Support for Local Persistent Volumes with PVC templates.\n    - Reuse of Persistent Volumes storage in Pods.\n    - Separate volumes for WAL files and tablespaces.\n- Backup and recovery options, including:\n    - Integration with the [Barman Cloud plugin](https://github.com/cloudnative-pg/plugin-barman-cloud)\n      for continuous online backup via WAL archiving to AWS S3, S3-compatible\n      services, Azure Blob Storage, and Google Cloud Storage, with support for\n      retention policies based on a configurable recovery window.\n    - Backups using volume snapshots (where supported by storage classes).\n    - Full and Point-In-Time recovery from volume snapshots or object stores (via Barman Cloud plugin).\n    - Backup from standby replicas to reduce primary workload impact.\n- Offline and online import of PostgreSQL databases, including major upgrades:\n    - *Offline Import*: Direct restore from existing databases.\n    - *Online Import*: PostgreSQL native logical replication via the `Subscription` resource.\n- Offline In-Place Major Upgrades of PostgreSQL\n- High Availability physical replication slots, including synchronization of\n  user-defined replication slots.\n- Parallel WAL archiving and restore, ensuring high-performance data\n  synchronization in high-write environments.\n- TLS support, including:\n    - Secure connections and client certificate authentication.\n    - Custom TLS certificates (integrated with `cert-manager`).\n- Startup and readiness probes, including replica probes based on desired lag\n  from the primary.\n- Declarative rolling updates for:\n    - PostgreSQL minor versions.\n    - Operator upgrades (in-place or rolling updates).\n- Standard output logging of PostgreSQL error messages in JSON format for\n  easier integration with log aggregation tools.\n- Prometheus-compatible metrics exporter (`metrics` port 9187) for custom\n  monitoring.\n- `cnpg` plugin for `kubectl` to simplify cluster operations.\n- Cluster hibernation for resource efficiency in inactive states.\n- Fencing of PostgreSQL clusters (full cluster or subset) to isolate instances\n  when needed.\n- Connection pooling with PgBouncer for improved database efficiency.\n- OLM (Operator Lifecycle Manager) installation support for streamlined\n  deployments.\n- Multi-arch container images, including Software Bill of Materials (SBOM) and\n  provenance attestations for security compliance.\n",
      "provider": "The CloudNativePG Contributors",
      "install_strategy": "OwnNamespace",
      "creation_timestamp": "2025-09-07T09:12:54Z",
      "labels": {
        "olm.copiedFrom": "operators",
        "olm.managed": "true",
        "operatorframework.io/arch.amd64": "supported"
      },
      "annotations": {
        "alm-examples": "[\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"backup-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      }\n    },\n    \"status\": {\n      \"serverName\": null\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Cluster\",\n    \"metadata\": {\n      \"name\": \"cluster-sample\"\n    },\n    \"spec\": {\n      \"instances\": 3,\n      \"logLevel\": \"info\",\n      \"primaryUpdateStrategy\": \"unsupervised\",\n      \"storage\": {\n        \"size\": \"1Gi\"\n      },\n      \"walStorage\": {\n        \"size\": \"1Gi\"\n      }\n    },\n    \"status\": {\n      \"instances\": 3\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"ClusterImageCatalog\",\n    \"metadata\": {\n      \"name\": \"postgresql\"\n    },\n    \"spec\": {\n      \"images\": [\n        {\n          \"image\": \"ghcr.io/cloudnative-pg/postgresql@sha256:1c97e0d6e94d8b335be7f258eeda2202966df5fde0c934eef4b13c760ec6a891\",\n          \"major\": 15\n        },\n        {\n          \"image\": \"ghcr.io/cloudnative-pg/postgresql@sha256:ee2e3ce7f0ea935c3f4ab245c0b3959c9f1c49816ae02222ceb6bc347f48e43b\",\n          \"major\": 16\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Database\",\n    \"metadata\": {\n      \"name\": \"database-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      },\n      \"name\": \"database-sample\",\n      \"owner\": \"app\"\n    },\n    \"status\": {\n      \"applied\": false\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"ImageCatalog\",\n    \"metadata\": {\n      \"name\": \"postgresql\",\n      \"namespace\": \"default\"\n    },\n    \"spec\": {\n      \"images\": [\n        {\n          \"image\": \"ghcr.io/cloudnative-pg/postgresql@sha256:1c97e0d6e94d8b335be7f258eeda2202966df5fde0c934eef4b13c760ec6a891\",\n          \"major\": 15\n        },\n        {\n          \"image\": \"ghcr.io/cloudnative-pg/postgresql@sha256:ee2e3ce7f0ea935c3f4ab245c0b3959c9f1c49816ae02222ceb6bc347f48e43b\",\n          \"major\": 16\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Pooler\",\n    \"metadata\": {\n      \"name\": \"pooler-sample-rw\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      },\n      \"instances\": 1,\n      \"pgbouncer\": {\n        \"poolMode\": \"session\"\n      },\n      \"type\": \"rw\"\n    },\n    \"status\": {\n      \"instances\": 1\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Publication\",\n    \"metadata\": {\n      \"name\": \"publication-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      },\n      \"dbname\": \"app\",\n      \"name\": \"pub\",\n      \"target\": {\n        \"allTables\": true\n      }\n    },\n    \"status\": {\n      \"applied\": false\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"ScheduledBackup\",\n    \"metadata\": {\n      \"name\": \"scheduledbackup-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      },\n      \"schedule\": \"0 0 0 * * *\"\n    },\n    \"status\": {\n      \"lastCheckTime\": null\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Subscription\",\n    \"metadata\": {\n      \"name\": \"subscription-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample-dest\"\n      },\n      \"dbname\": \"app\",\n      \"externalClusterName\": \"cluster-sample\",\n      \"name\": \"sub\",\n      \"publicationName\": \"pub\"\n    },\n    \"status\": {\n      \"applied\": false\n    }\n  }\n]",
        "capabilities": "Auto Pilot",
        "categories": "Database",
        "certified": "true",
        "containerImage": "ghcr.io/cloudnative-pg/cloudnative-pg@sha256:53995e9d6a7760c77d77e5298f78b49029427494f4dd933d5fa7a74f7af3bb44",
        "createdAt": "2025-08-12T14:08:35Z",
        "description": "CloudNativePG is an open source operator designed to manage highly available PostgreSQL databases with a primary/standby architecture on any supported Kubernetes cluster.",
        "features.operators.openshift.io/disconnected": "true",
        "features.operators.openshift.io/fips-compliant": "false",
        "features.operators.openshift.io/proxy-aware": "false",
        "features.operators.openshift.io/tls-profiles": "false",
        "features.operators.openshift.io/token-auth-aws": "false",
        "features.operators.openshift.io/token-auth-azure": "false",
        "features.operators.openshift.io/token-auth-gcp": "false",
        "olm.operatorGroup": "global-operators",
        "olm.operatorNamespace": "operators",
        "operatorframework.io/properties": "{\"properties\":[{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Backup\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Cluster\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"ClusterImageCatalog\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Database\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"FailoverQuorum\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"ImageCatalog\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Pooler\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Publication\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"ScheduledBackup\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Subscription\",\"version\":\"v1\"}},{\"type\":\"olm.package\",\"value\":{\"packageName\":\"cloudnative-pg\",\"version\":\"1.27.0\"}}]}",
        "operators.operatorframework.io/builder": "operator-sdk-v1.41.1",
        "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v4",
        "repository": "https://github.com/cloudnative-pg/cloudnative-pg",
        "support": "Community"
      },
      "owned_crds": [
        "backups.postgresql.cnpg.io",
        "clusterimagecatalogs.postgresql.cnpg.io",
        "clusters.postgresql.cnpg.io",
        "databases.postgresql.cnpg.io",
        "failoverquorums.postgresql.cnpg.io",
        "imagecatalogs.postgresql.cnpg.io",
        "poolers.postgresql.cnpg.io",
        "publications.postgresql.cnpg.io",
        "scheduledbackups.postgresql.cnpg.io",
        "subscriptions.postgresql.cnpg.io"
      ],
      "required_crds": [],
      "permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps",
                "secrets",
                "services"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps/status",
                "secrets/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "events"
              ],
              "verbs": [
                "create",
                "patch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "nodes"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "persistentvolumeclaims",
                "pods",
                "pods/exec"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "pods/status"
              ],
              "verbs": [
                "get"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "serviceaccounts"
              ],
              "verbs": [
                "create",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "admissionregistration.k8s.io"
              ],
              "resources": [
                "mutatingwebhookconfigurations",
                "validatingwebhookconfigurations"
              ],
              "verbs": [
                "get",
                "patch"
              ]
            },
            {
              "apiGroups": [
                "apps"
              ],
              "resources": [
                "deployments"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "batch"
              ],
              "resources": [
                "jobs"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "coordination.k8s.io"
              ],
              "resources": [
                "leases"
              ],
              "verbs": [
                "create",
                "get",
                "update"
              ]
            },
            {
              "apiGroups": [
                "monitoring.coreos.com"
              ],
              "resources": [
                "podmonitors"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "policy"
              ],
              "resources": [
                "poddisruptionbudgets"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "backups",
                "clusters",
                "databases",
                "poolers",
                "publications",
                "scheduledbackups",
                "subscriptions"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "backups/status",
                "databases/status",
                "publications/status",
                "scheduledbackups/status",
                "subscriptions/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "clusterimagecatalogs",
                "imagecatalogs"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "clusters/finalizers",
                "poolers/finalizers"
              ],
              "verbs": [
                "update"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "clusters/status",
                "failoverquorums/status",
                "poolers/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "failoverquorums"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "rbac.authorization.k8s.io"
              ],
              "resources": [
                "rolebindings",
                "roles"
              ],
              "verbs": [
                "create",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "snapshot.storage.k8s.io"
              ],
              "resources": [
                "volumesnapshots"
              ],
              "verbs": [
                "create",
                "get",
                "list",
                "patch",
                "watch"
              ]
            }
          ],
          "serviceAccountName": "cnpg-manager"
        }
      ],
      "cluster_permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "nodes"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "clusterimagecatalogs"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            }
          ],
          "serviceAccountName": "cnpg-manager"
        }
      ],
      "replaces": "cloudnative-pg.v1.26.1",
      "skips": [],
      "min_kube_version": "1.23.0"
    },
    {
      "name": "mariadb-operator.v25.8.3",
      "namespace": "fireworks-app",
      "display_name": "MariaDB Operator",
      "version": "25.8.3",
      "phase": "Succeeded",
      "description": "Install [`mariadb-operator`](https://github.com/mariadb-operator/mariadb-operator) via [OLM](https://olm.operatorframework.io/) using the [helm chart](https://artifacthub.io/packages/helm/mariadb-operator/mariadb-operator).\n\nThis helm operator provides provides a 1:1 mapping between the official helm chart and the [`MariadbOperator`](https://github.com/mariadb-operator/mariadb-operator-helm/blob/main/config/samples/helm_v1alpha1_mariadboperator.yaml) CRD, allowing to install [`mariadb-operator`](https://github.com/mariadb-operator/mariadb-operator) via OLM without having to do any change in the helm chart.\n\nNormally, you would install [`mariadb-operator`](https://github.com/mariadb-operator/mariadb-operator) providing this `values.yaml` to the helm chart:\n```yaml\nimage:\n  repository: ghcr.io/mariadb-operator/mariadb-operator\n  pullPolicy: IfNotPresent\nlogLevel: INFO\nha:\n  enabled: true\nmetrics:\n  enabled: true\n  serviceMonitor:\n    enabled: true\nwebhook:\n  cert:\n    certManager:\n      enabled: true\n```\n\nThis helm chart installation is abstracted in the [`MariadbOperator`](https://github.com/mariadb-operator/mariadb-operator-helm/blob/main/config/samples/helm_v1alpha1_mariadboperator.yaml) CRD, which will be reconciled by the helm operator:\n```yaml\napiVersion: helm.k8s.mariadb.com/v1alpha1\nkind: MariadbOperator\nmetadata:\n  name: mariadb-operator\nspec:\n  image:\n    repository: ghcr.io/mariadb-operator/mariadb-operator\n    pullPolicy: IfNotPresent\n  logLevel: INFO\n  ha:\n    enabled: true\n  metrics:\n    enabled: true\n    serviceMonitor:\n      enabled: true\n  webhook:\n    cert:\n      certManager:\n        enabled: true\n```\n\nOnce you have installed the operator, you will able to install a [`MariaDB`](https://github.com/mariadb-operator/mariadb-operator/blob/main/examples/manifests/mariadb_v1alpha1_mariadb.yaml) instance. Refer to the main [`mariadb-operator`](https://github.com/mariadb-operator/mariadb-operator) documentation for getting started with the rest of CRDs.\n\n## Documentation\n* [mariadb-operator](https://github.com/mariadb-operator/mariadb-operator/blob/main/README.md)\n* [mariadb-operator-helm](https://github.com/mariadb-operator/mariadb-operator-helm/blob/main/README.md)\n\n## Releases\nThis operator is automatically published in the following repositories whenever a new version of the [helm chart](https://artifacthub.io/packages/helm/mariadb-operator/mariadb-operator) is released:\n- [k8s-operatorhub/community-operators](https://github.com/k8s-operatorhub/community-operators)\n- [redhat-openshift-ecosystem/community-operators-prod](https://github.com/redhat-openshift-ecosystem/community-operators-prod)\n\n## Roadmap\nTake a look at our [roadmap](https://github.com/mariadb-operator/mariadb-operator/blob/main/ROADMAP.md) and feel free to open an issue to suggest new features.\n\n## Contributing\nWe welcome and encourage contributions to this project! Please check our [contributing](https://github.com/mariadb-operator/mariadb-operator/blob/main/CONTRIBUTING.md) and [development](https://github.com/mariadb-operator/mariadb-operator/blob/main/docs/DEVELOPMENT.md) guides. PRs welcome!\n\n## Get in touch\nJoin us on Slack: **[MariaDB Community Slack](https://r.mariadb.com/join-community-slack)**.\n",
      "provider": "mariadb-operator",
      "install_strategy": "OwnNamespace",
      "creation_timestamp": "2025-09-07T09:15:58Z",
      "labels": {
        "olm.copiedFrom": "operators",
        "olm.managed": "true"
      },
      "annotations": {
        "alm-examples": "[\n  {\n    \"apiVersion\": \"helm.mariadb.mmontes.io/v1alpha1\",\n    \"kind\": \"MariadbOperator\",\n    \"metadata\": {\n      \"name\": \"mariadb-operator\"\n    },\n    \"spec\": {\n      \"affinity\": {},\n      \"certController\": {\n        \"affinity\": {},\n        \"caValidity\": \"35064h\",\n        \"certValidity\": \"8766h\",\n        \"enabled\": true,\n        \"extrArgs\": [],\n        \"extraVolumeMounts\": [],\n        \"extraVolumes\": [],\n        \"ha\": {\n          \"enabled\": false,\n          \"replicas\": 3\n        },\n        \"image\": {\n          \"pullPolicy\": \"IfNotPresent\",\n          \"repository\": \"ghcr.io/mariadb-operator/mariadb-operator\",\n          \"tag\": \"\"\n        },\n        \"imagePullSecrets\": [],\n        \"lookaheadValidity\": \"2160h\",\n        \"nodeSelector\": {},\n        \"podAnnotations\": {},\n        \"podSecurityContext\": {},\n        \"requeueDuration\": \"5m\",\n        \"resources\": {},\n        \"securityContext\": {},\n        \"serviceAccount\": {\n          \"annotations\": {},\n          \"automount\": true,\n          \"enabled\": true,\n          \"extraLabels\": {},\n          \"name\": \"\"\n        },\n        \"serviceMonitor\": {\n          \"additionalLabels\": {},\n          \"enabled\": true,\n          \"interval\": \"30s\",\n          \"scrapeTimeout\": \"25s\"\n        },\n        \"tolerations\": []\n      },\n      \"clusterName\": \"cluster.local\",\n      \"extrArgs\": [],\n      \"extraVolumeMounts\": [],\n      \"extraVolumes\": [],\n      \"fullnameOverride\": \"\",\n      \"ha\": {\n        \"enabled\": false,\n        \"replicas\": 3\n      },\n      \"image\": {\n        \"pullPolicy\": \"IfNotPresent\",\n        \"repository\": \"ghcr.io/mariadb-operator/mariadb-operator\",\n        \"tag\": \"\"\n      },\n      \"imagePullSecrets\": [],\n      \"logLevel\": \"INFO\",\n      \"metrics\": {\n        \"enabled\": false,\n        \"serviceMonitor\": {\n          \"additionalLabels\": {},\n          \"enabled\": true,\n          \"interval\": \"30s\",\n          \"scrapeTimeout\": \"25s\"\n        }\n      },\n      \"nameOverride\": \"\",\n      \"nodeSelector\": {},\n      \"podAnnotations\": {},\n      \"podSecurityContext\": {},\n      \"rbac\": {\n        \"enabled\": true\n      },\n      \"resources\": {},\n      \"securityContext\": {},\n      \"serviceAccount\": {\n        \"annotations\": {},\n        \"automount\": true,\n        \"enabled\": true,\n        \"extraLabels\": {},\n        \"name\": \"\"\n      },\n      \"tolerations\": [],\n      \"webhook\": {\n        \"affinity\": {},\n        \"annotations\": {},\n        \"cert\": {\n          \"caPath\": \"/tmp/k8s-webhook-server/certificate-authority\",\n          \"certManager\": {\n            \"duration\": \"\",\n            \"enabled\": false,\n            \"issuerRef\": {},\n            \"renewBefore\": \"\"\n          },\n          \"path\": \"/tmp/k8s-webhook-server/serving-certs\",\n          \"secretAnnotations\": {}\n        },\n        \"extrArgs\": [],\n        \"extraVolumeMounts\": [],\n        \"extraVolumes\": [],\n        \"ha\": {\n          \"enabled\": false,\n          \"replicas\": 3\n        },\n        \"hostNetwork\": false,\n        \"image\": {\n          \"pullPolicy\": \"IfNotPresent\",\n          \"repository\": \"ghcr.io/mariadb-operator/mariadb-operator\",\n          \"tag\": \"\"\n        },\n        \"imagePullSecrets\": [],\n        \"nodeSelector\": {},\n        \"podAnnotations\": {},\n        \"podSecurityContext\": {},\n        \"port\": 10250,\n        \"resources\": {},\n        \"securityContext\": {},\n        \"serviceAccount\": {\n          \"annotations\": {},\n          \"automount\": true,\n          \"enabled\": true,\n          \"extraLabels\": {},\n          \"name\": \"\"\n        },\n        \"serviceMonitor\": {\n          \"additionalLabels\": {},\n          \"enabled\": true,\n          \"interval\": \"30s\",\n          \"scrapeTimeout\": \"25s\"\n        },\n        \"tolerations\": []\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"backup\"\n    },\n    \"spec\": {\n      \"args\": [\n        \"--single-transaction\",\n        \"--all-databases\"\n      ],\n      \"logLevel\": \"info\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"maxRetention\": \"720h\",\n      \"resources\": {\n        \"limits\": {\n          \"cpu\": \"300m\",\n          \"memory\": \"512Mi\"\n        },\n        \"requests\": {\n          \"cpu\": \"100m\",\n          \"memory\": \"128Mi\"\n        }\n      },\n      \"schedule\": {\n        \"cron\": \"*/1 * * * *\",\n        \"suspend\": false\n      },\n      \"storage\": {\n        \"s3\": {\n          \"accessKeyIdSecretKeyRef\": {\n            \"key\": \"access-key-id\",\n            \"name\": \"minio\"\n          },\n          \"bucket\": \"backups\",\n          \"endpoint\": \"minio.minio.svc.cluster.local:9000\",\n          \"prefix\": \"mariadb\",\n          \"secretAccessKeySecretKeyRef\": {\n            \"key\": \"secret-access-key\",\n            \"name\": \"minio\"\n          },\n          \"tls\": {\n            \"caSecretKeyRef\": {\n              \"key\": \"ca.crt\",\n              \"name\": \"minio-ca\"\n            },\n            \"enabled\": true\n          }\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Connection\",\n    \"metadata\": {\n      \"name\": \"connection\"\n    },\n    \"spec\": {\n      \"database\": \"mariadb\",\n      \"healthCheck\": {\n        \"interval\": \"10s\",\n        \"retryInterval\": \"3s\"\n      },\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"params\": {\n        \"parseTime\": \"true\"\n      },\n      \"passwordSecretKeyRef\": {\n        \"key\": \"password\",\n        \"name\": \"mariadb\"\n      },\n      \"secretName\": \"connection\",\n      \"secretTemplate\": {\n        \"annotations\": {\n          \"k8s.mariadb.com/connection\": \"sample\"\n        },\n        \"databaseKey\": \"database\",\n        \"hostKey\": \"host\",\n        \"key\": \"dsn\",\n        \"labels\": {\n          \"k8s.mariadb.com/connection\": \"sample\"\n        },\n        \"passwordKey\": \"password\",\n        \"portKey\": \"port\",\n        \"usernameKey\": \"username\"\n      },\n      \"serviceName\": \"mariadb\",\n      \"username\": \"mariadb\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Database\",\n    \"metadata\": {\n      \"name\": \"data-test\"\n    },\n    \"spec\": {\n      \"characterSet\": \"utf8\",\n      \"collate\": \"utf8_general_ci\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"retryInterval\": \"5s\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Grant\",\n    \"metadata\": {\n      \"name\": \"grant\"\n    },\n    \"spec\": {\n      \"database\": \"*\",\n      \"grantOption\": true,\n      \"host\": \"%\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"privileges\": [\n        \"SELECT\",\n        \"INSERT\",\n        \"UPDATE\"\n      ],\n      \"requeueInterval\": \"30s\",\n      \"retryInterval\": \"5s\",\n      \"table\": \"*\",\n      \"username\": \"user\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"MariaDB\",\n    \"metadata\": {\n      \"name\": \"mariadb\"\n    },\n    \"spec\": {\n      \"connection\": {\n        \"secretName\": \"mariadb-conn\",\n        \"secretTemplate\": {\n          \"key\": \"dsn\"\n        }\n      },\n      \"database\": \"mariadb\",\n      \"galera\": {\n        \"enabled\": true\n      },\n      \"metrics\": {\n        \"enabled\": true,\n        \"passwordSecretKeyRef\": {\n          \"generate\": true,\n          \"key\": \"password\",\n          \"name\": \"mariadb-metrics\"\n        }\n      },\n      \"myCnf\": \"[mariadb]\\nbind-address=*\\ndefault_storage_engine=InnoDB\\nbinlog_format=row\\ninnodb_autoinc_lock_mode=2\\ninnodb_buffer_pool_size=1024M\\nmax_allowed_packet=256M\\n\",\n      \"passwordSecretKeyRef\": {\n        \"generate\": true,\n        \"key\": \"password\",\n        \"name\": \"mariadb-password\"\n      },\n      \"primaryConnection\": {\n        \"secretName\": \"mariadb-conn-primary\",\n        \"secretTemplate\": {\n          \"key\": \"dsn\"\n        }\n      },\n      \"primaryService\": {\n        \"type\": \"ClusterIP\"\n      },\n      \"replicas\": 3,\n      \"rootPasswordSecretKeyRef\": {\n        \"generate\": true,\n        \"key\": \"password\",\n        \"name\": \"mariadb-root\"\n      },\n      \"secondaryConnection\": {\n        \"secretName\": \"mariadb-conn-secondary\",\n        \"secretTemplate\": {\n          \"key\": \"dsn\"\n        }\n      },\n      \"secondaryService\": {\n        \"type\": \"ClusterIP\"\n      },\n      \"service\": {\n        \"type\": \"ClusterIP\"\n      },\n      \"storage\": {\n        \"size\": \"1Gi\"\n      },\n      \"updateStrategy\": {\n        \"type\": \"ReplicasFirstPrimaryLast\"\n      },\n      \"username\": \"mariadb\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"MaxScale\",\n    \"metadata\": {\n      \"name\": \"maxscale-galera\"\n    },\n    \"spec\": {\n      \"admin\": {\n        \"guiEnabled\": true,\n        \"port\": 8989\n      },\n      \"auth\": {\n        \"generate\": true\n      },\n      \"config\": {\n        \"sync\": {\n          \"database\": \"mysql\",\n          \"interval\": \"5s\",\n          \"timeout\": \"10s\"\n        }\n      },\n      \"connection\": {\n        \"port\": 3306,\n        \"secretName\": \"mxs-galera-conn\"\n      },\n      \"guiKubernetesService\": {\n        \"metadata\": {\n          \"annotations\": {\n            \"metallb.universe.tf/loadBalancerIPs\": \"172.18.0.231\"\n          }\n        },\n        \"type\": \"LoadBalancer\"\n      },\n      \"kubernetesService\": {\n        \"annotations\": {\n          \"metallb.universe.tf/loadBalancerIPs\": \"172.18.0.224\"\n        },\n        \"type\": \"LoadBalancer\"\n      },\n      \"mariaDbRef\": {\n        \"name\": \"mariadb-galera\"\n      },\n      \"monitor\": {\n        \"cooperativeMonitoring\": \"majority_of_all\",\n        \"interval\": \"2s\",\n        \"params\": {\n          \"available_when_donor\": \"false\",\n          \"disable_master_failback\": \"false\",\n          \"disable_master_role_setting\": \"false\"\n        }\n      },\n      \"replicas\": 3,\n      \"requeueInterval\": \"10s\",\n      \"services\": [\n        {\n          \"listener\": {\n            \"params\": {\n              \"connection_metadata\": \"tx_isolation=auto\"\n            },\n            \"port\": 3306,\n            \"protocol\": \"MariaDBProtocol\"\n          },\n          \"name\": \"rw-router\",\n          \"params\": {\n            \"master_accept_reads\": \"true\",\n            \"max_replication_lag\": \"3s\",\n            \"max_slave_connections\": \"255\",\n            \"transaction_replay\": \"true\",\n            \"transaction_replay_attempts\": \"10\",\n            \"transaction_replay_timeout\": \"5s\"\n          },\n          \"router\": \"readwritesplit\"\n        },\n        {\n          \"listener\": {\n            \"port\": 3307\n          },\n          \"name\": \"rconn-master-router\",\n          \"params\": {\n            \"master_accept_reads\": \"true\",\n            \"max_replication_lag\": \"3s\",\n            \"router_options\": \"master\"\n          },\n          \"router\": \"readconnroute\"\n        },\n        {\n          \"listener\": {\n            \"port\": 3308\n          },\n          \"name\": \"rconn-slave-router\",\n          \"params\": {\n            \"max_replication_lag\": \"3s\",\n            \"router_options\": \"slave\"\n          },\n          \"router\": \"readconnroute\"\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"PhysicalBackup\",\n    \"metadata\": {\n      \"name\": \"physicalbackup\"\n    },\n    \"spec\": {\n      \"compression\": \"bzip2\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"maxRetention\": \"720h\",\n      \"podAffinity\": true,\n      \"resources\": {\n        \"limits\": {\n          \"cpu\": \"300m\",\n          \"memory\": \"512Mi\"\n        },\n        \"requests\": {\n          \"cpu\": \"100m\",\n          \"memory\": \"128Mi\"\n        }\n      },\n      \"schedule\": {\n        \"cron\": \"*/1 * * * *\",\n        \"immediate\": true,\n        \"suspend\": false\n      },\n      \"serviceAccountName\": \"backup\",\n      \"stagingStorage\": {\n        \"persistentVolumeClaim\": {\n          \"accessModes\": [\n            \"ReadWriteOnce\"\n          ],\n          \"resources\": {\n            \"requests\": {\n              \"storage\": \"1Gi\"\n            }\n          }\n        }\n      },\n      \"storage\": {\n        \"s3\": {\n          \"accessKeyIdSecretKeyRef\": {\n            \"key\": \"access-key-id\",\n            \"name\": \"minio\"\n          },\n          \"bucket\": \"physicalbackups\",\n          \"endpoint\": \"minio.minio.svc.cluster.local:9000\",\n          \"prefix\": \"mariadb\",\n          \"region\": \"us-east-1\",\n          \"secretAccessKeySecretKeyRef\": {\n            \"key\": \"secret-access-key\",\n            \"name\": \"minio\"\n          },\n          \"tls\": {\n            \"caSecretKeyRef\": {\n              \"key\": \"ca.crt\",\n              \"name\": \"minio-ca\"\n            },\n            \"enabled\": true\n          }\n        }\n      },\n      \"timeout\": \"1h\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Restore\",\n    \"metadata\": {\n      \"name\": \"restore\"\n    },\n    \"spec\": {\n      \"backupRef\": {\n        \"name\": \"backup\"\n      },\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"resources\": {\n        \"limits\": {\n          \"cpu\": \"300m\",\n          \"memory\": \"512Mi\"\n        },\n        \"requests\": {\n          \"cpu\": \"100m\",\n          \"memory\": \"128Mi\"\n        }\n      },\n      \"targetRecoveryTime\": \"2023-12-19T09:00:00Z\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"SqlJob\",\n    \"metadata\": {\n      \"name\": \"03-stars\"\n    },\n    \"spec\": {\n      \"database\": \"mariadb\",\n      \"dependsOn\": [\n        {\n          \"name\": \"01-users\"\n        },\n        {\n          \"name\": \"02-repos\"\n        }\n      ],\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"passwordSecretKeyRef\": {\n        \"key\": \"password\",\n        \"name\": \"mariadb\"\n      },\n      \"schedule\": {\n        \"cron\": \"*/1 * * * *\",\n        \"suspend\": false\n      },\n      \"sql\": \"CREATE TABLE IF NOT EXISTS stars (\\n  id bigint PRIMARY KEY AUTO_INCREMENT,\\n  user_id bigint NOT NULL,\\n  repo_id bigint NOT NULL,\\n  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,\\n  FOREIGN KEY (repo_id) REFERENCES repos(id) ON DELETE CASCADE,\\n  UNIQUE KEY (user_id, repo_id)\\n);\\nINSERT INTO stars(user_id, repo_id) \\n  VALUES((SELECT id FROM users ORDER BY RAND() LIMIT 1), (SELECT id FROM repos ORDER BY RAND() LIMIT 1))\\n  ON DUPLICATE KEY UPDATE id=id;\\nDELETE FROM stars WHERE id = (SELECT id FROM stars ORDER BY RAND() LIMIT 1);\\nSELECT r.name AS repo, COUNT(*) AS stars\\nFROM stars s\\nJOIN repos r\\nON s.repo_id = r.id\\nGROUP BY r.id\\nORDER BY stars DESC;\",\n      \"username\": \"mariadb\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"User\",\n    \"metadata\": {\n      \"name\": \"user\"\n    },\n    \"spec\": {\n      \"host\": \"%\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"maxUserConnections\": 20,\n      \"passwordSecretKeyRef\": {\n        \"key\": \"password\",\n        \"name\": \"mariadb\"\n      },\n      \"retryInterval\": \"5s\"\n    }\n  }\n]",
        "capabilities": "Deep Insights",
        "categories": "Database",
        "containerImage": "ghcr.io/mariadb-operator/mariadb-operator-helm:25.8.3",
        "createdAt": "2025-08-08T12:14:12Z",
        "description": "Run and operate MariaDB in a cloud native way",
        "features.operators.openshift.io/disconnected": "false",
        "features.operators.openshift.io/fips-compliant": "false",
        "features.operators.openshift.io/proxy-aware": "false",
        "features.operators.openshift.io/tls-profiles": "false",
        "features.operators.openshift.io/token-auth-aws": "false",
        "features.operators.openshift.io/token-auth-azure": "false",
        "features.operators.openshift.io/token-auth-gcp": "false",
        "olm.operatorGroup": "global-operators",
        "olm.operatorNamespace": "operators",
        "operatorframework.io/properties": "{\"properties\":[{\"type\":\"olm.gvk\",\"value\":{\"group\":\"helm.mariadb.mmontes.io\",\"kind\":\"MariadbOperator\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Backup\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Connection\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Database\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Grant\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"MariaDB\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"MaxScale\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"PhysicalBackup\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Restore\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"SqlJob\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"User\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.package\",\"value\":{\"packageName\":\"mariadb-operator\",\"version\":\"25.8.3\"}}]}",
        "operators.operatorframework.io/builder": "operator-sdk-v1.26.0",
        "operators.operatorframework.io/project_layout": "helm.sdk.operatorframework.io/v1",
        "repository": "https://github.com/mariadb-operator/mariadb-operator",
        "support": "mariadb-operator"
      },
      "owned_crds": [
        "backups.k8s.mariadb.com",
        "connections.k8s.mariadb.com",
        "databases.k8s.mariadb.com",
        "grants.k8s.mariadb.com",
        "mariadboperators.helm.mariadb.mmontes.io",
        "mariadbs.k8s.mariadb.com",
        "maxscales.k8s.mariadb.com",
        "physicalbackups.k8s.mariadb.com",
        "restores.k8s.mariadb.com",
        "sqljobs.k8s.mariadb.com",
        "users.k8s.mariadb.com"
      ],
      "required_crds": [],
      "permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps"
              ],
              "verbs": [
                "get",
                "list",
                "watch",
                "create",
                "update",
                "patch",
                "delete"
              ]
            },
            {
              "apiGroups": [
                "coordination.k8s.io"
              ],
              "resources": [
                "leases"
              ],
              "verbs": [
                "get",
                "list",
                "watch",
                "create",
                "update",
                "patch",
                "delete"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "events"
              ],
              "verbs": [
                "create",
                "patch"
              ]
            }
          ],
          "serviceAccountName": "mariadb-operator-helm-controller-manager"
        }
      ],
      "cluster_permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "namespaces"
              ],
              "verbs": [
                "get"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "secrets"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "events"
              ],
              "verbs": [
                "create"
              ]
            },
            {
              "apiGroups": [
                "helm.mariadb.mmontes.io"
              ],
              "resources": [
                "mariadboperators",
                "mariadboperators/status",
                "mariadboperators/finalizers"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "rbac.authorization.k8s.io"
              ],
              "resources": [
                "clusterrolebindings",
                "clusterroles"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "admissionregistration.k8s.io"
              ],
              "resources": [
                "validatingwebhookconfigurations",
                "mutatingwebhookconfigurations"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "rbac.authorization.k8s.io"
              ],
              "resources": [
                "rolebindings",
                "roles"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "apps"
              ],
              "resources": [
                "deployments"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "serviceaccounts",
                "services"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "apiextensions.k8s.io"
              ],
              "resources": [
                "customresourcedefinitions"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "cert-manager.io"
              ],
              "resources": [
                "certificates",
                "issuers"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "monitoring.coreos.com"
              ],
              "resources": [
                "servicemonitors"
              ],
              "verbs": [
                "*"
              ]
            }
          ],
          "serviceAccountName": "mariadb-operator-helm-controller-manager"
        }
      ],
      "replaces": "mariadb-operator.v25.8.2",
      "skips": [],
      "min_kube_version": "1.16.0"
    },
    {
      "name": "oracle-database-operator.v1.2.0",
      "namespace": "fireworks-app",
      "display_name": "Oracle Database Operator",
      "version": "1.2.0",
      "phase": "Installing",
      "description": "As part of Oracle's resolution to make Oracle Database Kubernetes native (that is, observable and operable by Kubernetes), Oracle released Oracle Database Operator for Kubernetes (OraOperator or the operator). OraOperator extends the Kubernetes API with custom resources and controllers for automating Oracle Database lifecycle management.\nIn this v1.2.0 production release, OraOperator supports the following database configurations and infrastructure:\n##Supported Database Configurations:\n* Oracle Cloud Infrastructure (OCI) Databases\n  * Oracle Autonomous Database Serverless (ADB-S)\n  * Oracle Autonomous Database on Dedicated on (ADB-D)\n  * Oracle Base Database Cloud Service (Base DB)\n* Containerized Database deployments on Kubernetes\n  * Oracle Kubernetes Engine (OKE) and Oracle Cloud Native Environments (OCNE)\n    * Single Instance databases (SIDB)\n    * Globally Distributed Databases (Shared)\n    * Oracle Data Guard\n    * True Cache (Preview release)\n    * Oracle Database Observability\n* On-Premises Databases\n  * Oracle Multitenant Databases (CDB/PDBs management)\n  * ORDS Services\n\nRefer to full feature list and capabilities: [https://github.com/oracle/oracle-database-operator/blob/main/README.md](https://github.com/oracle/oracle-database-operator/blob/main/README.md)\n",
      "provider": "Oracle",
      "install_strategy": "OwnNamespace",
      "creation_timestamp": "2025-09-07T09:13:36Z",
      "labels": {
        "olm.copiedFrom": "operators",
        "olm.managed": "true"
      },
      "annotations": {
        "alm-examples": "[\n  {\n    \"apiVersion\": \"database.oracle.com/v1alpha1\",\n    \"kind\": \"CDB\",\n    \"metadata\": {\n      \"name\": \"cdb-dev\",\n      \"namespace\": \"oracle-database-operator-system\"\n    },\n    \"spec\": {\n      \"cdbAdminPwd\": {\n        \"secret\": {\n          \"key\": \"cdbadmin_pwd\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"cdbAdminUser\": {\n        \"secret\": {\n          \"key\": \"cdbadmin_user\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"cdbName\": \"devcdb\",\n      \"dbPort\": 1521,\n      \"dbServer\": \"172.17.0.4\",\n      \"ordsImage\": \"\",\n      \"ordsImagePullPolicy\": \"Always\",\n      \"ordsPwd\": {\n        \"secret\": {\n          \"key\": \"ords_pwd\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"replicas\": 1,\n      \"serviceName\": \"devdb.example.com\",\n      \"sysAdminPwd\": {\n        \"secret\": {\n          \"key\": \"sysadmin_pwd\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"webServerPwd\": {\n        \"secret\": {\n          \"key\": \"webserver_pwd\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"webServerUser\": {\n        \"secret\": {\n          \"key\": \"webserver_user\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v1alpha1\",\n    \"kind\": \"DbcsSystem\",\n    \"metadata\": {\n      \"name\": \"dbcssystem-sample\"\n    },\n    \"spec\": {\n      \"foo\": \"bar\"\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v1alpha1\",\n    \"kind\": \"PDB\",\n    \"metadata\": {\n      \"labels\": {\n        \"cdb\": \"cdb-dev\"\n      },\n      \"name\": \"pdb1\",\n      \"namespace\": \"oracle-database-operator-system\"\n    },\n    \"spec\": {\n      \"action\": \"Create\",\n      \"adminName\": {\n        \"secret\": {\n          \"key\": \"sysadmin_user\",\n          \"secretName\": \"pdb1-secret\"\n        }\n      },\n      \"adminPwd\": {\n        \"secret\": {\n          \"key\": \"sysadmin_pwd\",\n          \"secretName\": \"pdb1-secret\"\n        }\n      },\n      \"cdbName\": \"devcdb\",\n      \"cdbResName\": \"cdb-dev\",\n      \"fileNameConversions\": \"NONE\",\n      \"pdbName\": \"pdbdev\",\n      \"tempSize\": \"100M\",\n      \"totalSize\": \"1G\"\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v4\",\n    \"kind\": \"AutonomousContainerDatabase\",\n    \"metadata\": {\n      \"name\": \"autonomouscontainerdatabase-sample\"\n    },\n    \"spec\": {\n      \"autonomousExadataVMClusterOCID\": \"ocid1.autonomousexainfrastructure...\",\n      \"compartmentOCID\": \"ocid1.compartment... OR ocid1.tenancy...\",\n      \"displayName\": \"newACD\",\n      \"ociConfig\": {\n        \"configMapName\": \"oci-cred\",\n        \"secretName\": \"oci-privatekey\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v4\",\n    \"kind\": \"AutonomousDatabase\",\n    \"metadata\": {\n      \"name\": \"autonomousdatabase-sample\"\n    },\n    \"spec\": {\n      \"action\": \"Create\",\n      \"details\": {\n        \"adminPassword\": {\n          \"k8sSecret\": {\n            \"name\": \"admin-password\"\n          }\n        },\n        \"compartmentId\": \"ocid1.compartment... OR ocid1.tenancy...\",\n        \"cpuCoreCount\": 1,\n        \"dataStorageSizeInTBs\": 1,\n        \"dbName\": \"NewADB\",\n        \"displayName\": \"NewADB\"\n      },\n      \"ociConfig\": {\n        \"configMapName\": \"oci-cred\",\n        \"secretName\": \"oci-privatekey\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v4\",\n    \"kind\": \"AutonomousDatabaseBackup\",\n    \"metadata\": {\n      \"name\": \"autonomousdatabasebackup-sample\"\n    },\n    \"spec\": {\n      \"displayName\": \"autonomousdatabasebackup-sample\",\n      \"isLongTermBackup\": true,\n      \"ociConfig\": {\n        \"configMapName\": \"oci-cred\",\n        \"secretName\": \"oci-privatekey\"\n      },\n      \"retentionPeriodInDays\": 90,\n      \"target\": {\n        \"k8sADB\": {\n          \"name\": \"autonomousdatabase-sample\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v4\",\n    \"kind\": \"SingleInstanceDatabase\",\n    \"metadata\": {\n      \"name\": \"sidb-sample\",\n      \"namespace\": \"default\"\n    },\n    \"spec\": {\n      \"adminPassword\": {\n        \"secretName\": \"db-admin-secret\"\n      },\n      \"archiveLog\": true,\n      \"charset\": \"AL32UTF8\",\n      \"edition\": \"enterprise\",\n      \"image\": {\n        \"pullFrom\": \"container-registry.oracle.com/database/enterprise_ru:19\",\n        \"pullSecrets\": \"oracle-container-registry-secret\"\n      },\n      \"pdbName\": \"orclpdb1\",\n      \"persistence\": {\n        \"accessMode\": \"ReadWriteOnce\",\n        \"size\": \"100Gi\",\n        \"storageClass\": \"oci-bv\"\n      },\n      \"replicas\": 1,\n      \"sid\": \"ORCL1\"\n    }\n  },\n  {\n    \"apiVersion\": \"observability.oracle.com/v1alpha1\",\n    \"kind\": \"DatabaseObserver\",\n    \"metadata\": {\n      \"name\": \"obs-sample\"\n    },\n    \"spec\": {\n      \"database\": {\n        \"dbConnectionString\": {\n          \"key\": \"connection\",\n          \"secret\": \"db-secret\"\n        },\n        \"dbPassword\": {\n          \"key\": \"password\",\n          \"secret\": \"db-secret\"\n        },\n        \"dbUser\": {\n          \"key\": \"username\",\n          \"secret\": \"db-secret\"\n        },\n        \"dbWallet\": {\n          \"secret\": \"instance-wallet\"\n        }\n      },\n      \"exporter\": {\n        \"configuration\": {\n          \"configmap\": {\n            \"configmapName\": \"devcm-oradevdb-config\",\n            \"key\": \"config.toml\"\n          }\n        },\n        \"image\": \"container-registry.oracle.com/database/observability-exporter:latest\",\n        \"service\": {\n          \"port\": 9161\n        }\n      },\n      \"ociConfig\": {\n        \"configMapName\": \"oci-cred\",\n        \"secretName\": \"oci-privatekey\"\n      },\n      \"prometheus\": {\n        \"labels\": {\n          \"app\": \"app-sample-label\"\n        },\n        \"port\": \"metrics\"\n      },\n      \"replicas\": 1\n    }\n  }\n]",
        "capabilities": "Seamless Upgrades",
        "categories": "Database",
        "containerImage": "container-registry.oracle.com/database/operator:1.2.0",
        "createdAt": "2025-04-10T20:09:48Z",
        "olm.operatorGroup": "global-operators",
        "olm.operatorNamespace": "operators",
        "operatorframework.io/properties": "{\"properties\":[{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousContainerDatabase\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousContainerDatabase\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabase\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabase\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabaseBackup\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabaseBackup\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabaseRestore\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabaseRestore\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"CDB\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"CDB\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"DataguardBroker\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"DataguardBroker\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"DbcsSystem\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"DbcsSystem\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"LREST\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"LRPDB\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"OracleRestDataService\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"OracleRestDataService\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"OrdsSrvs\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"PDB\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"PDB\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"ShardingDatabase\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"ShardingDatabase\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"SingleInstanceDatabase\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"SingleInstanceDatabase\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"observability.oracle.com\",\"kind\":\"DatabaseObserver\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"observability.oracle.com\",\"kind\":\"DatabaseObserver\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"observability.oracle.com\",\"kind\":\"DatabaseObserver\",\"version\":\"v4\"}},{\"type\":\"olm.package\",\"value\":{\"packageName\":\"oracle-database-operator\",\"version\":\"1.2.0\"}}]}",
        "operators.operatorframework.io/builder": "operator-sdk-v1.39.2",
        "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v4"
      },
      "owned_crds": [
        "autonomouscontainerdatabases.database.oracle.com",
        "autonomouscontainerdatabases.database.oracle.com",
        "autonomousdatabasebackups.database.oracle.com",
        "autonomousdatabasebackups.database.oracle.com",
        "autonomousdatabaserestores.database.oracle.com",
        "autonomousdatabaserestores.database.oracle.com",
        "autonomousdatabases.database.oracle.com",
        "autonomousdatabases.database.oracle.com",
        "cdbs.database.oracle.com",
        "cdbs.database.oracle.com",
        "databaseobservers.observability.oracle.com",
        "databaseobservers.observability.oracle.com",
        "databaseobservers.observability.oracle.com",
        "dataguardbrokers.database.oracle.com",
        "dataguardbrokers.database.oracle.com",
        "dbcssystems.database.oracle.com",
        "dbcssystems.database.oracle.com",
        "lrests.database.oracle.com",
        "lrpdbs.database.oracle.com",
        "oraclerestdataservices.database.oracle.com",
        "oraclerestdataservices.database.oracle.com",
        "ordssrvs.database.oracle.com",
        "pdbs.database.oracle.com",
        "pdbs.database.oracle.com",
        "shardingdatabases.database.oracle.com",
        "shardingdatabases.database.oracle.com",
        "singleinstancedatabases.database.oracle.com",
        "singleinstancedatabases.database.oracle.com"
      ],
      "required_crds": [],
      "permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps"
              ],
              "verbs": [
                "get",
                "list",
                "watch",
                "create",
                "update",
                "patch",
                "delete"
              ]
            },
            {
              "apiGroups": [
                "coordination.k8s.io"
              ],
              "resources": [
                "leases"
              ],
              "verbs": [
                "get",
                "list",
                "watch",
                "create",
                "update",
                "patch",
                "delete"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps/status"
              ],
              "verbs": [
                "get",
                "update",
                "patch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "events"
              ],
              "verbs": [
                "create",
                "patch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps",
                "containers",
                "deployments",
                "events",
                "namespaces",
                "persistentvolumeclaims",
                "pods",
                "pods/exec",
                "pods/log",
                "replicasets",
                "secrets",
                "services"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps/status",
                "daemonsets/status",
                "deployments/status",
                "services/status",
                "statefulsets/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "persistentvolumes"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "secrets/status"
              ],
              "verbs": [
                "get"
              ]
            },
            {
              "apiGroups": [
                "''"
              ],
              "resources": [
                "statefulsets/finalizers"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "apps"
              ],
              "resources": [
                "configmaps"
              ],
              "verbs": [
                "get",
                "list"
              ]
            },
            {
              "apiGroups": [
                "apps"
              ],
              "resources": [
                "daemonsets",
                "deployments",
                "pods",
                "replicasets",
                "services",
                "statefulsets"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "coordination.k8s.io"
              ],
              "resources": [
                "leases"
              ],
              "verbs": [
                "create",
                "get",
                "list",
                "update"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "autonomouscontainerdatabases",
                "autonomousdatabases",
                "cdbs",
                "dataguardbrokers",
                "dbcssystems",
                "events",
                "lrests",
                "lrpdbs",
                "oraclerestdataservices",
                "ordssrvs",
                "pdbs",
                "shardingdatabases",
                "singleinstancedatabases"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "autonomouscontainerdatabases/status",
                "autonomousdatabasebackups/status",
                "autonomousdatabaserestores/status",
                "cdbs/status",
                "dataguardbrokers/status",
                "dbcssystems/status",
                "lrests/status",
                "lrpdbs/status",
                "oraclerestdataservices/status",
                "ordssrvs/status",
                "pdbs/status",
                "shardingdatabases/status",
                "singleinstancedatabases/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "autonomousdatabasebackups",
                "autonomousdatabaserestores"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "autonomousdatabases/status"
              ],
              "verbs": [
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "cdbs/finalizers",
                "dataguardbrokers/finalizers",
                "lrests/finalizers",
                "oraclerestdataservices/finalizers",
                "ordssrvs/finalizers",
                "singleinstancedatabases/finalizers"
              ],
              "verbs": [
                "update"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "dbcssystems/finalizers",
                "lrpdbs/finalizers",
                "pdbs/finalizers",
                "shardingdatabases/finalizers"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "monitoring.coreos.com"
              ],
              "resources": [
                "servicemonitors"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "observability.oracle.com"
              ],
              "resources": [
                "databaseobservers"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "observability.oracle.com"
              ],
              "resources": [
                "databaseobservers/finalizers"
              ],
              "verbs": [
                "update"
              ]
            },
            {
              "apiGroups": [
                "observability.oracle.com"
              ],
              "resources": [
                "databaseobservers/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "storage.k8s.io"
              ],
              "resources": [
                "storageclasses"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            }
          ],
          "serviceAccountName": "default"
        }
      ],
      "cluster_permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                "authentication.k8s.io"
              ],
              "resources": [
                "tokenreviews"
              ],
              "verbs": [
                "create"
              ]
            },
            {
              "apiGroups": [
                "authorization.k8s.io"
              ],
              "resources": [
                "subjectaccessreviews"
              ],
              "verbs": [
                "create"
              ]
            }
          ],
          "serviceAccountName": "default"
        }
      ],
      "replaces": "oracle-database-operator.v1.1.0",
      "skips": [],
      "min_kube_version": ""
    },
    {
      "name": "cloudnative-pg.v1.27.0",
      "namespace": "fireworksapp-system",
      "display_name": "CloudNativePG",
      "version": "1.27.0",
      "phase": "Succeeded",
      "description": "Main features:\n\n- Direct integration with the Kubernetes API server for High Availability,\n  eliminating the need for external tools.\n- Self-healing capabilities, including:\n    - Automated failover by promoting the most aligned replica.\n    - Automatic recreation of failed replicas.\n- Planned switchover of the primary instance by promoting a selected replica.\n- Declarative management of key PostgreSQL configurations, including:\n    - PostgreSQL settings.\n    - Roles, users, and groups.\n    - Databases, extensions, and schemas.\n    - Tablespaces (including temporary tablespaces).\n- Flexible instance definition, supporting any number of instances (minimum 1\n  primary server).\n- Scale-up/down capabilities to dynamically adjust cluster size.\n- Read-Write and Read-Only Services, ensuring applications connect correctly:\n    - *Read-Write Service*: Routes connections to the primary server.\n    - *Read-Only Service*: Distributes connections among replicas for read workloads.\n- Support for quorum-based and priority-based PostgreSQL Synchronous\n  Replication.\n- Replica clusters enabling PostgreSQL distributed topologies across multiple\n  Kubernetes clusters (private, public, hybrid, and multi-cloud).\n- Delayed Replica clusters for point-in-time access to historical data.\n- Persistent volume management, including:\n    - Support for Local Persistent Volumes with PVC templates.\n    - Reuse of Persistent Volumes storage in Pods.\n    - Separate volumes for WAL files and tablespaces.\n- Backup and recovery options, including:\n    - Integration with the [Barman Cloud plugin](https://github.com/cloudnative-pg/plugin-barman-cloud)\n      for continuous online backup via WAL archiving to AWS S3, S3-compatible\n      services, Azure Blob Storage, and Google Cloud Storage, with support for\n      retention policies based on a configurable recovery window.\n    - Backups using volume snapshots (where supported by storage classes).\n    - Full and Point-In-Time recovery from volume snapshots or object stores (via Barman Cloud plugin).\n    - Backup from standby replicas to reduce primary workload impact.\n- Offline and online import of PostgreSQL databases, including major upgrades:\n    - *Offline Import*: Direct restore from existing databases.\n    - *Online Import*: PostgreSQL native logical replication via the `Subscription` resource.\n- Offline In-Place Major Upgrades of PostgreSQL\n- High Availability physical replication slots, including synchronization of\n  user-defined replication slots.\n- Parallel WAL archiving and restore, ensuring high-performance data\n  synchronization in high-write environments.\n- TLS support, including:\n    - Secure connections and client certificate authentication.\n    - Custom TLS certificates (integrated with `cert-manager`).\n- Startup and readiness probes, including replica probes based on desired lag\n  from the primary.\n- Declarative rolling updates for:\n    - PostgreSQL minor versions.\n    - Operator upgrades (in-place or rolling updates).\n- Standard output logging of PostgreSQL error messages in JSON format for\n  easier integration with log aggregation tools.\n- Prometheus-compatible metrics exporter (`metrics` port 9187) for custom\n  monitoring.\n- `cnpg` plugin for `kubectl` to simplify cluster operations.\n- Cluster hibernation for resource efficiency in inactive states.\n- Fencing of PostgreSQL clusters (full cluster or subset) to isolate instances\n  when needed.\n- Connection pooling with PgBouncer for improved database efficiency.\n- OLM (Operator Lifecycle Manager) installation support for streamlined\n  deployments.\n- Multi-arch container images, including Software Bill of Materials (SBOM) and\n  provenance attestations for security compliance.\n",
      "provider": "The CloudNativePG Contributors",
      "install_strategy": "OwnNamespace",
      "creation_timestamp": "2025-09-07T09:12:58Z",
      "labels": {
        "olm.copiedFrom": "operators",
        "olm.managed": "true",
        "operatorframework.io/arch.amd64": "supported"
      },
      "annotations": {
        "alm-examples": "[\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"backup-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      }\n    },\n    \"status\": {\n      \"serverName\": null\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Cluster\",\n    \"metadata\": {\n      \"name\": \"cluster-sample\"\n    },\n    \"spec\": {\n      \"instances\": 3,\n      \"logLevel\": \"info\",\n      \"primaryUpdateStrategy\": \"unsupervised\",\n      \"storage\": {\n        \"size\": \"1Gi\"\n      },\n      \"walStorage\": {\n        \"size\": \"1Gi\"\n      }\n    },\n    \"status\": {\n      \"instances\": 3\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"ClusterImageCatalog\",\n    \"metadata\": {\n      \"name\": \"postgresql\"\n    },\n    \"spec\": {\n      \"images\": [\n        {\n          \"image\": \"ghcr.io/cloudnative-pg/postgresql@sha256:1c97e0d6e94d8b335be7f258eeda2202966df5fde0c934eef4b13c760ec6a891\",\n          \"major\": 15\n        },\n        {\n          \"image\": \"ghcr.io/cloudnative-pg/postgresql@sha256:ee2e3ce7f0ea935c3f4ab245c0b3959c9f1c49816ae02222ceb6bc347f48e43b\",\n          \"major\": 16\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Database\",\n    \"metadata\": {\n      \"name\": \"database-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      },\n      \"name\": \"database-sample\",\n      \"owner\": \"app\"\n    },\n    \"status\": {\n      \"applied\": false\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"ImageCatalog\",\n    \"metadata\": {\n      \"name\": \"postgresql\",\n      \"namespace\": \"default\"\n    },\n    \"spec\": {\n      \"images\": [\n        {\n          \"image\": \"ghcr.io/cloudnative-pg/postgresql@sha256:1c97e0d6e94d8b335be7f258eeda2202966df5fde0c934eef4b13c760ec6a891\",\n          \"major\": 15\n        },\n        {\n          \"image\": \"ghcr.io/cloudnative-pg/postgresql@sha256:ee2e3ce7f0ea935c3f4ab245c0b3959c9f1c49816ae02222ceb6bc347f48e43b\",\n          \"major\": 16\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Pooler\",\n    \"metadata\": {\n      \"name\": \"pooler-sample-rw\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      },\n      \"instances\": 1,\n      \"pgbouncer\": {\n        \"poolMode\": \"session\"\n      },\n      \"type\": \"rw\"\n    },\n    \"status\": {\n      \"instances\": 1\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Publication\",\n    \"metadata\": {\n      \"name\": \"publication-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      },\n      \"dbname\": \"app\",\n      \"name\": \"pub\",\n      \"target\": {\n        \"allTables\": true\n      }\n    },\n    \"status\": {\n      \"applied\": false\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"ScheduledBackup\",\n    \"metadata\": {\n      \"name\": \"scheduledbackup-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      },\n      \"schedule\": \"0 0 0 * * *\"\n    },\n    \"status\": {\n      \"lastCheckTime\": null\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Subscription\",\n    \"metadata\": {\n      \"name\": \"subscription-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample-dest\"\n      },\n      \"dbname\": \"app\",\n      \"externalClusterName\": \"cluster-sample\",\n      \"name\": \"sub\",\n      \"publicationName\": \"pub\"\n    },\n    \"status\": {\n      \"applied\": false\n    }\n  }\n]",
        "capabilities": "Auto Pilot",
        "categories": "Database",
        "certified": "true",
        "containerImage": "ghcr.io/cloudnative-pg/cloudnative-pg@sha256:53995e9d6a7760c77d77e5298f78b49029427494f4dd933d5fa7a74f7af3bb44",
        "createdAt": "2025-08-12T14:08:35Z",
        "description": "CloudNativePG is an open source operator designed to manage highly available PostgreSQL databases with a primary/standby architecture on any supported Kubernetes cluster.",
        "features.operators.openshift.io/disconnected": "true",
        "features.operators.openshift.io/fips-compliant": "false",
        "features.operators.openshift.io/proxy-aware": "false",
        "features.operators.openshift.io/tls-profiles": "false",
        "features.operators.openshift.io/token-auth-aws": "false",
        "features.operators.openshift.io/token-auth-azure": "false",
        "features.operators.openshift.io/token-auth-gcp": "false",
        "olm.operatorGroup": "global-operators",
        "olm.operatorNamespace": "operators",
        "operatorframework.io/properties": "{\"properties\":[{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Backup\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Cluster\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"ClusterImageCatalog\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Database\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"FailoverQuorum\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"ImageCatalog\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Pooler\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Publication\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"ScheduledBackup\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Subscription\",\"version\":\"v1\"}},{\"type\":\"olm.package\",\"value\":{\"packageName\":\"cloudnative-pg\",\"version\":\"1.27.0\"}}]}",
        "operators.operatorframework.io/builder": "operator-sdk-v1.41.1",
        "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v4",
        "repository": "https://github.com/cloudnative-pg/cloudnative-pg",
        "support": "Community"
      },
      "owned_crds": [
        "backups.postgresql.cnpg.io",
        "clusterimagecatalogs.postgresql.cnpg.io",
        "clusters.postgresql.cnpg.io",
        "databases.postgresql.cnpg.io",
        "failoverquorums.postgresql.cnpg.io",
        "imagecatalogs.postgresql.cnpg.io",
        "poolers.postgresql.cnpg.io",
        "publications.postgresql.cnpg.io",
        "scheduledbackups.postgresql.cnpg.io",
        "subscriptions.postgresql.cnpg.io"
      ],
      "required_crds": [],
      "permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps",
                "secrets",
                "services"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps/status",
                "secrets/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "events"
              ],
              "verbs": [
                "create",
                "patch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "nodes"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "persistentvolumeclaims",
                "pods",
                "pods/exec"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "pods/status"
              ],
              "verbs": [
                "get"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "serviceaccounts"
              ],
              "verbs": [
                "create",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "admissionregistration.k8s.io"
              ],
              "resources": [
                "mutatingwebhookconfigurations",
                "validatingwebhookconfigurations"
              ],
              "verbs": [
                "get",
                "patch"
              ]
            },
            {
              "apiGroups": [
                "apps"
              ],
              "resources": [
                "deployments"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "batch"
              ],
              "resources": [
                "jobs"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "coordination.k8s.io"
              ],
              "resources": [
                "leases"
              ],
              "verbs": [
                "create",
                "get",
                "update"
              ]
            },
            {
              "apiGroups": [
                "monitoring.coreos.com"
              ],
              "resources": [
                "podmonitors"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "policy"
              ],
              "resources": [
                "poddisruptionbudgets"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "backups",
                "clusters",
                "databases",
                "poolers",
                "publications",
                "scheduledbackups",
                "subscriptions"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "backups/status",
                "databases/status",
                "publications/status",
                "scheduledbackups/status",
                "subscriptions/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "clusterimagecatalogs",
                "imagecatalogs"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "clusters/finalizers",
                "poolers/finalizers"
              ],
              "verbs": [
                "update"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "clusters/status",
                "failoverquorums/status",
                "poolers/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "failoverquorums"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "rbac.authorization.k8s.io"
              ],
              "resources": [
                "rolebindings",
                "roles"
              ],
              "verbs": [
                "create",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "snapshot.storage.k8s.io"
              ],
              "resources": [
                "volumesnapshots"
              ],
              "verbs": [
                "create",
                "get",
                "list",
                "patch",
                "watch"
              ]
            }
          ],
          "serviceAccountName": "cnpg-manager"
        }
      ],
      "cluster_permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "nodes"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "clusterimagecatalogs"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            }
          ],
          "serviceAccountName": "cnpg-manager"
        }
      ],
      "replaces": "cloudnative-pg.v1.26.1",
      "skips": [],
      "min_kube_version": "1.23.0"
    },
    {
      "name": "mariadb-operator.v25.8.3",
      "namespace": "fireworksapp-system",
      "display_name": "MariaDB Operator",
      "version": "25.8.3",
      "phase": "Succeeded",
      "description": "Install [`mariadb-operator`](https://github.com/mariadb-operator/mariadb-operator) via [OLM](https://olm.operatorframework.io/) using the [helm chart](https://artifacthub.io/packages/helm/mariadb-operator/mariadb-operator).\n\nThis helm operator provides provides a 1:1 mapping between the official helm chart and the [`MariadbOperator`](https://github.com/mariadb-operator/mariadb-operator-helm/blob/main/config/samples/helm_v1alpha1_mariadboperator.yaml) CRD, allowing to install [`mariadb-operator`](https://github.com/mariadb-operator/mariadb-operator) via OLM without having to do any change in the helm chart.\n\nNormally, you would install [`mariadb-operator`](https://github.com/mariadb-operator/mariadb-operator) providing this `values.yaml` to the helm chart:\n```yaml\nimage:\n  repository: ghcr.io/mariadb-operator/mariadb-operator\n  pullPolicy: IfNotPresent\nlogLevel: INFO\nha:\n  enabled: true\nmetrics:\n  enabled: true\n  serviceMonitor:\n    enabled: true\nwebhook:\n  cert:\n    certManager:\n      enabled: true\n```\n\nThis helm chart installation is abstracted in the [`MariadbOperator`](https://github.com/mariadb-operator/mariadb-operator-helm/blob/main/config/samples/helm_v1alpha1_mariadboperator.yaml) CRD, which will be reconciled by the helm operator:\n```yaml\napiVersion: helm.k8s.mariadb.com/v1alpha1\nkind: MariadbOperator\nmetadata:\n  name: mariadb-operator\nspec:\n  image:\n    repository: ghcr.io/mariadb-operator/mariadb-operator\n    pullPolicy: IfNotPresent\n  logLevel: INFO\n  ha:\n    enabled: true\n  metrics:\n    enabled: true\n    serviceMonitor:\n      enabled: true\n  webhook:\n    cert:\n      certManager:\n        enabled: true\n```\n\nOnce you have installed the operator, you will able to install a [`MariaDB`](https://github.com/mariadb-operator/mariadb-operator/blob/main/examples/manifests/mariadb_v1alpha1_mariadb.yaml) instance. Refer to the main [`mariadb-operator`](https://github.com/mariadb-operator/mariadb-operator) documentation for getting started with the rest of CRDs.\n\n## Documentation\n* [mariadb-operator](https://github.com/mariadb-operator/mariadb-operator/blob/main/README.md)\n* [mariadb-operator-helm](https://github.com/mariadb-operator/mariadb-operator-helm/blob/main/README.md)\n\n## Releases\nThis operator is automatically published in the following repositories whenever a new version of the [helm chart](https://artifacthub.io/packages/helm/mariadb-operator/mariadb-operator) is released:\n- [k8s-operatorhub/community-operators](https://github.com/k8s-operatorhub/community-operators)\n- [redhat-openshift-ecosystem/community-operators-prod](https://github.com/redhat-openshift-ecosystem/community-operators-prod)\n\n## Roadmap\nTake a look at our [roadmap](https://github.com/mariadb-operator/mariadb-operator/blob/main/ROADMAP.md) and feel free to open an issue to suggest new features.\n\n## Contributing\nWe welcome and encourage contributions to this project! Please check our [contributing](https://github.com/mariadb-operator/mariadb-operator/blob/main/CONTRIBUTING.md) and [development](https://github.com/mariadb-operator/mariadb-operator/blob/main/docs/DEVELOPMENT.md) guides. PRs welcome!\n\n## Get in touch\nJoin us on Slack: **[MariaDB Community Slack](https://r.mariadb.com/join-community-slack)**.\n",
      "provider": "mariadb-operator",
      "install_strategy": "OwnNamespace",
      "creation_timestamp": "2025-09-07T09:15:57Z",
      "labels": {
        "olm.copiedFrom": "operators",
        "olm.managed": "true"
      },
      "annotations": {
        "alm-examples": "[\n  {\n    \"apiVersion\": \"helm.mariadb.mmontes.io/v1alpha1\",\n    \"kind\": \"MariadbOperator\",\n    \"metadata\": {\n      \"name\": \"mariadb-operator\"\n    },\n    \"spec\": {\n      \"affinity\": {},\n      \"certController\": {\n        \"affinity\": {},\n        \"caValidity\": \"35064h\",\n        \"certValidity\": \"8766h\",\n        \"enabled\": true,\n        \"extrArgs\": [],\n        \"extraVolumeMounts\": [],\n        \"extraVolumes\": [],\n        \"ha\": {\n          \"enabled\": false,\n          \"replicas\": 3\n        },\n        \"image\": {\n          \"pullPolicy\": \"IfNotPresent\",\n          \"repository\": \"ghcr.io/mariadb-operator/mariadb-operator\",\n          \"tag\": \"\"\n        },\n        \"imagePullSecrets\": [],\n        \"lookaheadValidity\": \"2160h\",\n        \"nodeSelector\": {},\n        \"podAnnotations\": {},\n        \"podSecurityContext\": {},\n        \"requeueDuration\": \"5m\",\n        \"resources\": {},\n        \"securityContext\": {},\n        \"serviceAccount\": {\n          \"annotations\": {},\n          \"automount\": true,\n          \"enabled\": true,\n          \"extraLabels\": {},\n          \"name\": \"\"\n        },\n        \"serviceMonitor\": {\n          \"additionalLabels\": {},\n          \"enabled\": true,\n          \"interval\": \"30s\",\n          \"scrapeTimeout\": \"25s\"\n        },\n        \"tolerations\": []\n      },\n      \"clusterName\": \"cluster.local\",\n      \"extrArgs\": [],\n      \"extraVolumeMounts\": [],\n      \"extraVolumes\": [],\n      \"fullnameOverride\": \"\",\n      \"ha\": {\n        \"enabled\": false,\n        \"replicas\": 3\n      },\n      \"image\": {\n        \"pullPolicy\": \"IfNotPresent\",\n        \"repository\": \"ghcr.io/mariadb-operator/mariadb-operator\",\n        \"tag\": \"\"\n      },\n      \"imagePullSecrets\": [],\n      \"logLevel\": \"INFO\",\n      \"metrics\": {\n        \"enabled\": false,\n        \"serviceMonitor\": {\n          \"additionalLabels\": {},\n          \"enabled\": true,\n          \"interval\": \"30s\",\n          \"scrapeTimeout\": \"25s\"\n        }\n      },\n      \"nameOverride\": \"\",\n      \"nodeSelector\": {},\n      \"podAnnotations\": {},\n      \"podSecurityContext\": {},\n      \"rbac\": {\n        \"enabled\": true\n      },\n      \"resources\": {},\n      \"securityContext\": {},\n      \"serviceAccount\": {\n        \"annotations\": {},\n        \"automount\": true,\n        \"enabled\": true,\n        \"extraLabels\": {},\n        \"name\": \"\"\n      },\n      \"tolerations\": [],\n      \"webhook\": {\n        \"affinity\": {},\n        \"annotations\": {},\n        \"cert\": {\n          \"caPath\": \"/tmp/k8s-webhook-server/certificate-authority\",\n          \"certManager\": {\n            \"duration\": \"\",\n            \"enabled\": false,\n            \"issuerRef\": {},\n            \"renewBefore\": \"\"\n          },\n          \"path\": \"/tmp/k8s-webhook-server/serving-certs\",\n          \"secretAnnotations\": {}\n        },\n        \"extrArgs\": [],\n        \"extraVolumeMounts\": [],\n        \"extraVolumes\": [],\n        \"ha\": {\n          \"enabled\": false,\n          \"replicas\": 3\n        },\n        \"hostNetwork\": false,\n        \"image\": {\n          \"pullPolicy\": \"IfNotPresent\",\n          \"repository\": \"ghcr.io/mariadb-operator/mariadb-operator\",\n          \"tag\": \"\"\n        },\n        \"imagePullSecrets\": [],\n        \"nodeSelector\": {},\n        \"podAnnotations\": {},\n        \"podSecurityContext\": {},\n        \"port\": 10250,\n        \"resources\": {},\n        \"securityContext\": {},\n        \"serviceAccount\": {\n          \"annotations\": {},\n          \"automount\": true,\n          \"enabled\": true,\n          \"extraLabels\": {},\n          \"name\": \"\"\n        },\n        \"serviceMonitor\": {\n          \"additionalLabels\": {},\n          \"enabled\": true,\n          \"interval\": \"30s\",\n          \"scrapeTimeout\": \"25s\"\n        },\n        \"tolerations\": []\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"backup\"\n    },\n    \"spec\": {\n      \"args\": [\n        \"--single-transaction\",\n        \"--all-databases\"\n      ],\n      \"logLevel\": \"info\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"maxRetention\": \"720h\",\n      \"resources\": {\n        \"limits\": {\n          \"cpu\": \"300m\",\n          \"memory\": \"512Mi\"\n        },\n        \"requests\": {\n          \"cpu\": \"100m\",\n          \"memory\": \"128Mi\"\n        }\n      },\n      \"schedule\": {\n        \"cron\": \"*/1 * * * *\",\n        \"suspend\": false\n      },\n      \"storage\": {\n        \"s3\": {\n          \"accessKeyIdSecretKeyRef\": {\n            \"key\": \"access-key-id\",\n            \"name\": \"minio\"\n          },\n          \"bucket\": \"backups\",\n          \"endpoint\": \"minio.minio.svc.cluster.local:9000\",\n          \"prefix\": \"mariadb\",\n          \"secretAccessKeySecretKeyRef\": {\n            \"key\": \"secret-access-key\",\n            \"name\": \"minio\"\n          },\n          \"tls\": {\n            \"caSecretKeyRef\": {\n              \"key\": \"ca.crt\",\n              \"name\": \"minio-ca\"\n            },\n            \"enabled\": true\n          }\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Connection\",\n    \"metadata\": {\n      \"name\": \"connection\"\n    },\n    \"spec\": {\n      \"database\": \"mariadb\",\n      \"healthCheck\": {\n        \"interval\": \"10s\",\n        \"retryInterval\": \"3s\"\n      },\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"params\": {\n        \"parseTime\": \"true\"\n      },\n      \"passwordSecretKeyRef\": {\n        \"key\": \"password\",\n        \"name\": \"mariadb\"\n      },\n      \"secretName\": \"connection\",\n      \"secretTemplate\": {\n        \"annotations\": {\n          \"k8s.mariadb.com/connection\": \"sample\"\n        },\n        \"databaseKey\": \"database\",\n        \"hostKey\": \"host\",\n        \"key\": \"dsn\",\n        \"labels\": {\n          \"k8s.mariadb.com/connection\": \"sample\"\n        },\n        \"passwordKey\": \"password\",\n        \"portKey\": \"port\",\n        \"usernameKey\": \"username\"\n      },\n      \"serviceName\": \"mariadb\",\n      \"username\": \"mariadb\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Database\",\n    \"metadata\": {\n      \"name\": \"data-test\"\n    },\n    \"spec\": {\n      \"characterSet\": \"utf8\",\n      \"collate\": \"utf8_general_ci\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"retryInterval\": \"5s\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Grant\",\n    \"metadata\": {\n      \"name\": \"grant\"\n    },\n    \"spec\": {\n      \"database\": \"*\",\n      \"grantOption\": true,\n      \"host\": \"%\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"privileges\": [\n        \"SELECT\",\n        \"INSERT\",\n        \"UPDATE\"\n      ],\n      \"requeueInterval\": \"30s\",\n      \"retryInterval\": \"5s\",\n      \"table\": \"*\",\n      \"username\": \"user\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"MariaDB\",\n    \"metadata\": {\n      \"name\": \"mariadb\"\n    },\n    \"spec\": {\n      \"connection\": {\n        \"secretName\": \"mariadb-conn\",\n        \"secretTemplate\": {\n          \"key\": \"dsn\"\n        }\n      },\n      \"database\": \"mariadb\",\n      \"galera\": {\n        \"enabled\": true\n      },\n      \"metrics\": {\n        \"enabled\": true,\n        \"passwordSecretKeyRef\": {\n          \"generate\": true,\n          \"key\": \"password\",\n          \"name\": \"mariadb-metrics\"\n        }\n      },\n      \"myCnf\": \"[mariadb]\\nbind-address=*\\ndefault_storage_engine=InnoDB\\nbinlog_format=row\\ninnodb_autoinc_lock_mode=2\\ninnodb_buffer_pool_size=1024M\\nmax_allowed_packet=256M\\n\",\n      \"passwordSecretKeyRef\": {\n        \"generate\": true,\n        \"key\": \"password\",\n        \"name\": \"mariadb-password\"\n      },\n      \"primaryConnection\": {\n        \"secretName\": \"mariadb-conn-primary\",\n        \"secretTemplate\": {\n          \"key\": \"dsn\"\n        }\n      },\n      \"primaryService\": {\n        \"type\": \"ClusterIP\"\n      },\n      \"replicas\": 3,\n      \"rootPasswordSecretKeyRef\": {\n        \"generate\": true,\n        \"key\": \"password\",\n        \"name\": \"mariadb-root\"\n      },\n      \"secondaryConnection\": {\n        \"secretName\": \"mariadb-conn-secondary\",\n        \"secretTemplate\": {\n          \"key\": \"dsn\"\n        }\n      },\n      \"secondaryService\": {\n        \"type\": \"ClusterIP\"\n      },\n      \"service\": {\n        \"type\": \"ClusterIP\"\n      },\n      \"storage\": {\n        \"size\": \"1Gi\"\n      },\n      \"updateStrategy\": {\n        \"type\": \"ReplicasFirstPrimaryLast\"\n      },\n      \"username\": \"mariadb\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"MaxScale\",\n    \"metadata\": {\n      \"name\": \"maxscale-galera\"\n    },\n    \"spec\": {\n      \"admin\": {\n        \"guiEnabled\": true,\n        \"port\": 8989\n      },\n      \"auth\": {\n        \"generate\": true\n      },\n      \"config\": {\n        \"sync\": {\n          \"database\": \"mysql\",\n          \"interval\": \"5s\",\n          \"timeout\": \"10s\"\n        }\n      },\n      \"connection\": {\n        \"port\": 3306,\n        \"secretName\": \"mxs-galera-conn\"\n      },\n      \"guiKubernetesService\": {\n        \"metadata\": {\n          \"annotations\": {\n            \"metallb.universe.tf/loadBalancerIPs\": \"172.18.0.231\"\n          }\n        },\n        \"type\": \"LoadBalancer\"\n      },\n      \"kubernetesService\": {\n        \"annotations\": {\n          \"metallb.universe.tf/loadBalancerIPs\": \"172.18.0.224\"\n        },\n        \"type\": \"LoadBalancer\"\n      },\n      \"mariaDbRef\": {\n        \"name\": \"mariadb-galera\"\n      },\n      \"monitor\": {\n        \"cooperativeMonitoring\": \"majority_of_all\",\n        \"interval\": \"2s\",\n        \"params\": {\n          \"available_when_donor\": \"false\",\n          \"disable_master_failback\": \"false\",\n          \"disable_master_role_setting\": \"false\"\n        }\n      },\n      \"replicas\": 3,\n      \"requeueInterval\": \"10s\",\n      \"services\": [\n        {\n          \"listener\": {\n            \"params\": {\n              \"connection_metadata\": \"tx_isolation=auto\"\n            },\n            \"port\": 3306,\n            \"protocol\": \"MariaDBProtocol\"\n          },\n          \"name\": \"rw-router\",\n          \"params\": {\n            \"master_accept_reads\": \"true\",\n            \"max_replication_lag\": \"3s\",\n            \"max_slave_connections\": \"255\",\n            \"transaction_replay\": \"true\",\n            \"transaction_replay_attempts\": \"10\",\n            \"transaction_replay_timeout\": \"5s\"\n          },\n          \"router\": \"readwritesplit\"\n        },\n        {\n          \"listener\": {\n            \"port\": 3307\n          },\n          \"name\": \"rconn-master-router\",\n          \"params\": {\n            \"master_accept_reads\": \"true\",\n            \"max_replication_lag\": \"3s\",\n            \"router_options\": \"master\"\n          },\n          \"router\": \"readconnroute\"\n        },\n        {\n          \"listener\": {\n            \"port\": 3308\n          },\n          \"name\": \"rconn-slave-router\",\n          \"params\": {\n            \"max_replication_lag\": \"3s\",\n            \"router_options\": \"slave\"\n          },\n          \"router\": \"readconnroute\"\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"PhysicalBackup\",\n    \"metadata\": {\n      \"name\": \"physicalbackup\"\n    },\n    \"spec\": {\n      \"compression\": \"bzip2\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"maxRetention\": \"720h\",\n      \"podAffinity\": true,\n      \"resources\": {\n        \"limits\": {\n          \"cpu\": \"300m\",\n          \"memory\": \"512Mi\"\n        },\n        \"requests\": {\n          \"cpu\": \"100m\",\n          \"memory\": \"128Mi\"\n        }\n      },\n      \"schedule\": {\n        \"cron\": \"*/1 * * * *\",\n        \"immediate\": true,\n        \"suspend\": false\n      },\n      \"serviceAccountName\": \"backup\",\n      \"stagingStorage\": {\n        \"persistentVolumeClaim\": {\n          \"accessModes\": [\n            \"ReadWriteOnce\"\n          ],\n          \"resources\": {\n            \"requests\": {\n              \"storage\": \"1Gi\"\n            }\n          }\n        }\n      },\n      \"storage\": {\n        \"s3\": {\n          \"accessKeyIdSecretKeyRef\": {\n            \"key\": \"access-key-id\",\n            \"name\": \"minio\"\n          },\n          \"bucket\": \"physicalbackups\",\n          \"endpoint\": \"minio.minio.svc.cluster.local:9000\",\n          \"prefix\": \"mariadb\",\n          \"region\": \"us-east-1\",\n          \"secretAccessKeySecretKeyRef\": {\n            \"key\": \"secret-access-key\",\n            \"name\": \"minio\"\n          },\n          \"tls\": {\n            \"caSecretKeyRef\": {\n              \"key\": \"ca.crt\",\n              \"name\": \"minio-ca\"\n            },\n            \"enabled\": true\n          }\n        }\n      },\n      \"timeout\": \"1h\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Restore\",\n    \"metadata\": {\n      \"name\": \"restore\"\n    },\n    \"spec\": {\n      \"backupRef\": {\n        \"name\": \"backup\"\n      },\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"resources\": {\n        \"limits\": {\n          \"cpu\": \"300m\",\n          \"memory\": \"512Mi\"\n        },\n        \"requests\": {\n          \"cpu\": \"100m\",\n          \"memory\": \"128Mi\"\n        }\n      },\n      \"targetRecoveryTime\": \"2023-12-19T09:00:00Z\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"SqlJob\",\n    \"metadata\": {\n      \"name\": \"03-stars\"\n    },\n    \"spec\": {\n      \"database\": \"mariadb\",\n      \"dependsOn\": [\n        {\n          \"name\": \"01-users\"\n        },\n        {\n          \"name\": \"02-repos\"\n        }\n      ],\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"passwordSecretKeyRef\": {\n        \"key\": \"password\",\n        \"name\": \"mariadb\"\n      },\n      \"schedule\": {\n        \"cron\": \"*/1 * * * *\",\n        \"suspend\": false\n      },\n      \"sql\": \"CREATE TABLE IF NOT EXISTS stars (\\n  id bigint PRIMARY KEY AUTO_INCREMENT,\\n  user_id bigint NOT NULL,\\n  repo_id bigint NOT NULL,\\n  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,\\n  FOREIGN KEY (repo_id) REFERENCES repos(id) ON DELETE CASCADE,\\n  UNIQUE KEY (user_id, repo_id)\\n);\\nINSERT INTO stars(user_id, repo_id) \\n  VALUES((SELECT id FROM users ORDER BY RAND() LIMIT 1), (SELECT id FROM repos ORDER BY RAND() LIMIT 1))\\n  ON DUPLICATE KEY UPDATE id=id;\\nDELETE FROM stars WHERE id = (SELECT id FROM stars ORDER BY RAND() LIMIT 1);\\nSELECT r.name AS repo, COUNT(*) AS stars\\nFROM stars s\\nJOIN repos r\\nON s.repo_id = r.id\\nGROUP BY r.id\\nORDER BY stars DESC;\",\n      \"username\": \"mariadb\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"User\",\n    \"metadata\": {\n      \"name\": \"user\"\n    },\n    \"spec\": {\n      \"host\": \"%\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"maxUserConnections\": 20,\n      \"passwordSecretKeyRef\": {\n        \"key\": \"password\",\n        \"name\": \"mariadb\"\n      },\n      \"retryInterval\": \"5s\"\n    }\n  }\n]",
        "capabilities": "Deep Insights",
        "categories": "Database",
        "containerImage": "ghcr.io/mariadb-operator/mariadb-operator-helm:25.8.3",
        "createdAt": "2025-08-08T12:14:12Z",
        "description": "Run and operate MariaDB in a cloud native way",
        "features.operators.openshift.io/disconnected": "false",
        "features.operators.openshift.io/fips-compliant": "false",
        "features.operators.openshift.io/proxy-aware": "false",
        "features.operators.openshift.io/tls-profiles": "false",
        "features.operators.openshift.io/token-auth-aws": "false",
        "features.operators.openshift.io/token-auth-azure": "false",
        "features.operators.openshift.io/token-auth-gcp": "false",
        "olm.operatorGroup": "global-operators",
        "olm.operatorNamespace": "operators",
        "operatorframework.io/properties": "{\"properties\":[{\"type\":\"olm.gvk\",\"value\":{\"group\":\"helm.mariadb.mmontes.io\",\"kind\":\"MariadbOperator\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Backup\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Connection\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Database\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Grant\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"MariaDB\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"MaxScale\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"PhysicalBackup\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Restore\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"SqlJob\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"User\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.package\",\"value\":{\"packageName\":\"mariadb-operator\",\"version\":\"25.8.3\"}}]}",
        "operators.operatorframework.io/builder": "operator-sdk-v1.26.0",
        "operators.operatorframework.io/project_layout": "helm.sdk.operatorframework.io/v1",
        "repository": "https://github.com/mariadb-operator/mariadb-operator",
        "support": "mariadb-operator"
      },
      "owned_crds": [
        "backups.k8s.mariadb.com",
        "connections.k8s.mariadb.com",
        "databases.k8s.mariadb.com",
        "grants.k8s.mariadb.com",
        "mariadboperators.helm.mariadb.mmontes.io",
        "mariadbs.k8s.mariadb.com",
        "maxscales.k8s.mariadb.com",
        "physicalbackups.k8s.mariadb.com",
        "restores.k8s.mariadb.com",
        "sqljobs.k8s.mariadb.com",
        "users.k8s.mariadb.com"
      ],
      "required_crds": [],
      "permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps"
              ],
              "verbs": [
                "get",
                "list",
                "watch",
                "create",
                "update",
                "patch",
                "delete"
              ]
            },
            {
              "apiGroups": [
                "coordination.k8s.io"
              ],
              "resources": [
                "leases"
              ],
              "verbs": [
                "get",
                "list",
                "watch",
                "create",
                "update",
                "patch",
                "delete"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "events"
              ],
              "verbs": [
                "create",
                "patch"
              ]
            }
          ],
          "serviceAccountName": "mariadb-operator-helm-controller-manager"
        }
      ],
      "cluster_permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "namespaces"
              ],
              "verbs": [
                "get"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "secrets"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "events"
              ],
              "verbs": [
                "create"
              ]
            },
            {
              "apiGroups": [
                "helm.mariadb.mmontes.io"
              ],
              "resources": [
                "mariadboperators",
                "mariadboperators/status",
                "mariadboperators/finalizers"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "rbac.authorization.k8s.io"
              ],
              "resources": [
                "clusterrolebindings",
                "clusterroles"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "admissionregistration.k8s.io"
              ],
              "resources": [
                "validatingwebhookconfigurations",
                "mutatingwebhookconfigurations"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "rbac.authorization.k8s.io"
              ],
              "resources": [
                "rolebindings",
                "roles"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "apps"
              ],
              "resources": [
                "deployments"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "serviceaccounts",
                "services"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "apiextensions.k8s.io"
              ],
              "resources": [
                "customresourcedefinitions"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "cert-manager.io"
              ],
              "resources": [
                "certificates",
                "issuers"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "monitoring.coreos.com"
              ],
              "resources": [
                "servicemonitors"
              ],
              "verbs": [
                "*"
              ]
            }
          ],
          "serviceAccountName": "mariadb-operator-helm-controller-manager"
        }
      ],
      "replaces": "mariadb-operator.v25.8.2",
      "skips": [],
      "min_kube_version": "1.16.0"
    },
    {
      "name": "oracle-database-operator.v1.2.0",
      "namespace": "fireworksapp-system",
      "display_name": "Oracle Database Operator",
      "version": "1.2.0",
      "phase": "Installing",
      "description": "As part of Oracle's resolution to make Oracle Database Kubernetes native (that is, observable and operable by Kubernetes), Oracle released Oracle Database Operator for Kubernetes (OraOperator or the operator). OraOperator extends the Kubernetes API with custom resources and controllers for automating Oracle Database lifecycle management.\nIn this v1.2.0 production release, OraOperator supports the following database configurations and infrastructure:\n##Supported Database Configurations:\n* Oracle Cloud Infrastructure (OCI) Databases\n  * Oracle Autonomous Database Serverless (ADB-S)\n  * Oracle Autonomous Database on Dedicated on (ADB-D)\n  * Oracle Base Database Cloud Service (Base DB)\n* Containerized Database deployments on Kubernetes\n  * Oracle Kubernetes Engine (OKE) and Oracle Cloud Native Environments (OCNE)\n    * Single Instance databases (SIDB)\n    * Globally Distributed Databases (Shared)\n    * Oracle Data Guard\n    * True Cache (Preview release)\n    * Oracle Database Observability\n* On-Premises Databases\n  * Oracle Multitenant Databases (CDB/PDBs management)\n  * ORDS Services\n\nRefer to full feature list and capabilities: [https://github.com/oracle/oracle-database-operator/blob/main/README.md](https://github.com/oracle/oracle-database-operator/blob/main/README.md)\n",
      "provider": "Oracle",
      "install_strategy": "OwnNamespace",
      "creation_timestamp": "2025-09-07T09:13:36Z",
      "labels": {
        "olm.copiedFrom": "operators",
        "olm.managed": "true"
      },
      "annotations": {
        "alm-examples": "[\n  {\n    \"apiVersion\": \"database.oracle.com/v1alpha1\",\n    \"kind\": \"CDB\",\n    \"metadata\": {\n      \"name\": \"cdb-dev\",\n      \"namespace\": \"oracle-database-operator-system\"\n    },\n    \"spec\": {\n      \"cdbAdminPwd\": {\n        \"secret\": {\n          \"key\": \"cdbadmin_pwd\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"cdbAdminUser\": {\n        \"secret\": {\n          \"key\": \"cdbadmin_user\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"cdbName\": \"devcdb\",\n      \"dbPort\": 1521,\n      \"dbServer\": \"172.17.0.4\",\n      \"ordsImage\": \"\",\n      \"ordsImagePullPolicy\": \"Always\",\n      \"ordsPwd\": {\n        \"secret\": {\n          \"key\": \"ords_pwd\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"replicas\": 1,\n      \"serviceName\": \"devdb.example.com\",\n      \"sysAdminPwd\": {\n        \"secret\": {\n          \"key\": \"sysadmin_pwd\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"webServerPwd\": {\n        \"secret\": {\n          \"key\": \"webserver_pwd\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"webServerUser\": {\n        \"secret\": {\n          \"key\": \"webserver_user\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v1alpha1\",\n    \"kind\": \"DbcsSystem\",\n    \"metadata\": {\n      \"name\": \"dbcssystem-sample\"\n    },\n    \"spec\": {\n      \"foo\": \"bar\"\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v1alpha1\",\n    \"kind\": \"PDB\",\n    \"metadata\": {\n      \"labels\": {\n        \"cdb\": \"cdb-dev\"\n      },\n      \"name\": \"pdb1\",\n      \"namespace\": \"oracle-database-operator-system\"\n    },\n    \"spec\": {\n      \"action\": \"Create\",\n      \"adminName\": {\n        \"secret\": {\n          \"key\": \"sysadmin_user\",\n          \"secretName\": \"pdb1-secret\"\n        }\n      },\n      \"adminPwd\": {\n        \"secret\": {\n          \"key\": \"sysadmin_pwd\",\n          \"secretName\": \"pdb1-secret\"\n        }\n      },\n      \"cdbName\": \"devcdb\",\n      \"cdbResName\": \"cdb-dev\",\n      \"fileNameConversions\": \"NONE\",\n      \"pdbName\": \"pdbdev\",\n      \"tempSize\": \"100M\",\n      \"totalSize\": \"1G\"\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v4\",\n    \"kind\": \"AutonomousContainerDatabase\",\n    \"metadata\": {\n      \"name\": \"autonomouscontainerdatabase-sample\"\n    },\n    \"spec\": {\n      \"autonomousExadataVMClusterOCID\": \"ocid1.autonomousexainfrastructure...\",\n      \"compartmentOCID\": \"ocid1.compartment... OR ocid1.tenancy...\",\n      \"displayName\": \"newACD\",\n      \"ociConfig\": {\n        \"configMapName\": \"oci-cred\",\n        \"secretName\": \"oci-privatekey\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v4\",\n    \"kind\": \"AutonomousDatabase\",\n    \"metadata\": {\n      \"name\": \"autonomousdatabase-sample\"\n    },\n    \"spec\": {\n      \"action\": \"Create\",\n      \"details\": {\n        \"adminPassword\": {\n          \"k8sSecret\": {\n            \"name\": \"admin-password\"\n          }\n        },\n        \"compartmentId\": \"ocid1.compartment... OR ocid1.tenancy...\",\n        \"cpuCoreCount\": 1,\n        \"dataStorageSizeInTBs\": 1,\n        \"dbName\": \"NewADB\",\n        \"displayName\": \"NewADB\"\n      },\n      \"ociConfig\": {\n        \"configMapName\": \"oci-cred\",\n        \"secretName\": \"oci-privatekey\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v4\",\n    \"kind\": \"AutonomousDatabaseBackup\",\n    \"metadata\": {\n      \"name\": \"autonomousdatabasebackup-sample\"\n    },\n    \"spec\": {\n      \"displayName\": \"autonomousdatabasebackup-sample\",\n      \"isLongTermBackup\": true,\n      \"ociConfig\": {\n        \"configMapName\": \"oci-cred\",\n        \"secretName\": \"oci-privatekey\"\n      },\n      \"retentionPeriodInDays\": 90,\n      \"target\": {\n        \"k8sADB\": {\n          \"name\": \"autonomousdatabase-sample\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v4\",\n    \"kind\": \"SingleInstanceDatabase\",\n    \"metadata\": {\n      \"name\": \"sidb-sample\",\n      \"namespace\": \"default\"\n    },\n    \"spec\": {\n      \"adminPassword\": {\n        \"secretName\": \"db-admin-secret\"\n      },\n      \"archiveLog\": true,\n      \"charset\": \"AL32UTF8\",\n      \"edition\": \"enterprise\",\n      \"image\": {\n        \"pullFrom\": \"container-registry.oracle.com/database/enterprise_ru:19\",\n        \"pullSecrets\": \"oracle-container-registry-secret\"\n      },\n      \"pdbName\": \"orclpdb1\",\n      \"persistence\": {\n        \"accessMode\": \"ReadWriteOnce\",\n        \"size\": \"100Gi\",\n        \"storageClass\": \"oci-bv\"\n      },\n      \"replicas\": 1,\n      \"sid\": \"ORCL1\"\n    }\n  },\n  {\n    \"apiVersion\": \"observability.oracle.com/v1alpha1\",\n    \"kind\": \"DatabaseObserver\",\n    \"metadata\": {\n      \"name\": \"obs-sample\"\n    },\n    \"spec\": {\n      \"database\": {\n        \"dbConnectionString\": {\n          \"key\": \"connection\",\n          \"secret\": \"db-secret\"\n        },\n        \"dbPassword\": {\n          \"key\": \"password\",\n          \"secret\": \"db-secret\"\n        },\n        \"dbUser\": {\n          \"key\": \"username\",\n          \"secret\": \"db-secret\"\n        },\n        \"dbWallet\": {\n          \"secret\": \"instance-wallet\"\n        }\n      },\n      \"exporter\": {\n        \"configuration\": {\n          \"configmap\": {\n            \"configmapName\": \"devcm-oradevdb-config\",\n            \"key\": \"config.toml\"\n          }\n        },\n        \"image\": \"container-registry.oracle.com/database/observability-exporter:latest\",\n        \"service\": {\n          \"port\": 9161\n        }\n      },\n      \"ociConfig\": {\n        \"configMapName\": \"oci-cred\",\n        \"secretName\": \"oci-privatekey\"\n      },\n      \"prometheus\": {\n        \"labels\": {\n          \"app\": \"app-sample-label\"\n        },\n        \"port\": \"metrics\"\n      },\n      \"replicas\": 1\n    }\n  }\n]",
        "capabilities": "Seamless Upgrades",
        "categories": "Database",
        "containerImage": "container-registry.oracle.com/database/operator:1.2.0",
        "createdAt": "2025-04-10T20:09:48Z",
        "olm.operatorGroup": "global-operators",
        "olm.operatorNamespace": "operators",
        "operatorframework.io/properties": "{\"properties\":[{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousContainerDatabase\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousContainerDatabase\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabase\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabase\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabaseBackup\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabaseBackup\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabaseRestore\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabaseRestore\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"CDB\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"CDB\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"DataguardBroker\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"DataguardBroker\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"DbcsSystem\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"DbcsSystem\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"LREST\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"LRPDB\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"OracleRestDataService\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"OracleRestDataService\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"OrdsSrvs\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"PDB\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"PDB\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"ShardingDatabase\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"ShardingDatabase\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"SingleInstanceDatabase\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"SingleInstanceDatabase\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"observability.oracle.com\",\"kind\":\"DatabaseObserver\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"observability.oracle.com\",\"kind\":\"DatabaseObserver\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"observability.oracle.com\",\"kind\":\"DatabaseObserver\",\"version\":\"v4\"}},{\"type\":\"olm.package\",\"value\":{\"packageName\":\"oracle-database-operator\",\"version\":\"1.2.0\"}}]}",
        "operators.operatorframework.io/builder": "operator-sdk-v1.39.2",
        "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v4"
      },
      "owned_crds": [
        "autonomouscontainerdatabases.database.oracle.com",
        "autonomouscontainerdatabases.database.oracle.com",
        "autonomousdatabasebackups.database.oracle.com",
        "autonomousdatabasebackups.database.oracle.com",
        "autonomousdatabaserestores.database.oracle.com",
        "autonomousdatabaserestores.database.oracle.com",
        "autonomousdatabases.database.oracle.com",
        "autonomousdatabases.database.oracle.com",
        "cdbs.database.oracle.com",
        "cdbs.database.oracle.com",
        "databaseobservers.observability.oracle.com",
        "databaseobservers.observability.oracle.com",
        "databaseobservers.observability.oracle.com",
        "dataguardbrokers.database.oracle.com",
        "dataguardbrokers.database.oracle.com",
        "dbcssystems.database.oracle.com",
        "dbcssystems.database.oracle.com",
        "lrests.database.oracle.com",
        "lrpdbs.database.oracle.com",
        "oraclerestdataservices.database.oracle.com",
        "oraclerestdataservices.database.oracle.com",
        "ordssrvs.database.oracle.com",
        "pdbs.database.oracle.com",
        "pdbs.database.oracle.com",
        "shardingdatabases.database.oracle.com",
        "shardingdatabases.database.oracle.com",
        "singleinstancedatabases.database.oracle.com",
        "singleinstancedatabases.database.oracle.com"
      ],
      "required_crds": [],
      "permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps"
              ],
              "verbs": [
                "get",
                "list",
                "watch",
                "create",
                "update",
                "patch",
                "delete"
              ]
            },
            {
              "apiGroups": [
                "coordination.k8s.io"
              ],
              "resources": [
                "leases"
              ],
              "verbs": [
                "get",
                "list",
                "watch",
                "create",
                "update",
                "patch",
                "delete"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps/status"
              ],
              "verbs": [
                "get",
                "update",
                "patch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "events"
              ],
              "verbs": [
                "create",
                "patch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps",
                "containers",
                "deployments",
                "events",
                "namespaces",
                "persistentvolumeclaims",
                "pods",
                "pods/exec",
                "pods/log",
                "replicasets",
                "secrets",
                "services"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps/status",
                "daemonsets/status",
                "deployments/status",
                "services/status",
                "statefulsets/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "persistentvolumes"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "secrets/status"
              ],
              "verbs": [
                "get"
              ]
            },
            {
              "apiGroups": [
                "''"
              ],
              "resources": [
                "statefulsets/finalizers"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "apps"
              ],
              "resources": [
                "configmaps"
              ],
              "verbs": [
                "get",
                "list"
              ]
            },
            {
              "apiGroups": [
                "apps"
              ],
              "resources": [
                "daemonsets",
                "deployments",
                "pods",
                "replicasets",
                "services",
                "statefulsets"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "coordination.k8s.io"
              ],
              "resources": [
                "leases"
              ],
              "verbs": [
                "create",
                "get",
                "list",
                "update"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "autonomouscontainerdatabases",
                "autonomousdatabases",
                "cdbs",
                "dataguardbrokers",
                "dbcssystems",
                "events",
                "lrests",
                "lrpdbs",
                "oraclerestdataservices",
                "ordssrvs",
                "pdbs",
                "shardingdatabases",
                "singleinstancedatabases"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "autonomouscontainerdatabases/status",
                "autonomousdatabasebackups/status",
                "autonomousdatabaserestores/status",
                "cdbs/status",
                "dataguardbrokers/status",
                "dbcssystems/status",
                "lrests/status",
                "lrpdbs/status",
                "oraclerestdataservices/status",
                "ordssrvs/status",
                "pdbs/status",
                "shardingdatabases/status",
                "singleinstancedatabases/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "autonomousdatabasebackups",
                "autonomousdatabaserestores"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "autonomousdatabases/status"
              ],
              "verbs": [
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "cdbs/finalizers",
                "dataguardbrokers/finalizers",
                "lrests/finalizers",
                "oraclerestdataservices/finalizers",
                "ordssrvs/finalizers",
                "singleinstancedatabases/finalizers"
              ],
              "verbs": [
                "update"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "dbcssystems/finalizers",
                "lrpdbs/finalizers",
                "pdbs/finalizers",
                "shardingdatabases/finalizers"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "monitoring.coreos.com"
              ],
              "resources": [
                "servicemonitors"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "observability.oracle.com"
              ],
              "resources": [
                "databaseobservers"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "observability.oracle.com"
              ],
              "resources": [
                "databaseobservers/finalizers"
              ],
              "verbs": [
                "update"
              ]
            },
            {
              "apiGroups": [
                "observability.oracle.com"
              ],
              "resources": [
                "databaseobservers/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "storage.k8s.io"
              ],
              "resources": [
                "storageclasses"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            }
          ],
          "serviceAccountName": "default"
        }
      ],
      "cluster_permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                "authentication.k8s.io"
              ],
              "resources": [
                "tokenreviews"
              ],
              "verbs": [
                "create"
              ]
            },
            {
              "apiGroups": [
                "authorization.k8s.io"
              ],
              "resources": [
                "subjectaccessreviews"
              ],
              "verbs": [
                "create"
              ]
            }
          ],
          "serviceAccountName": "default"
        }
      ],
      "replaces": "oracle-database-operator.v1.1.0",
      "skips": [],
      "min_kube_version": ""
    },
    {
      "name": "cloudnative-pg.v1.27.0",
      "namespace": "krateo-system",
      "display_name": "CloudNativePG",
      "version": "1.27.0",
      "phase": "Succeeded",
      "description": "Main features:\n\n- Direct integration with the Kubernetes API server for High Availability,\n  eliminating the need for external tools.\n- Self-healing capabilities, including:\n    - Automated failover by promoting the most aligned replica.\n    - Automatic recreation of failed replicas.\n- Planned switchover of the primary instance by promoting a selected replica.\n- Declarative management of key PostgreSQL configurations, including:\n    - PostgreSQL settings.\n    - Roles, users, and groups.\n    - Databases, extensions, and schemas.\n    - Tablespaces (including temporary tablespaces).\n- Flexible instance definition, supporting any number of instances (minimum 1\n  primary server).\n- Scale-up/down capabilities to dynamically adjust cluster size.\n- Read-Write and Read-Only Services, ensuring applications connect correctly:\n    - *Read-Write Service*: Routes connections to the primary server.\n    - *Read-Only Service*: Distributes connections among replicas for read workloads.\n- Support for quorum-based and priority-based PostgreSQL Synchronous\n  Replication.\n- Replica clusters enabling PostgreSQL distributed topologies across multiple\n  Kubernetes clusters (private, public, hybrid, and multi-cloud).\n- Delayed Replica clusters for point-in-time access to historical data.\n- Persistent volume management, including:\n    - Support for Local Persistent Volumes with PVC templates.\n    - Reuse of Persistent Volumes storage in Pods.\n    - Separate volumes for WAL files and tablespaces.\n- Backup and recovery options, including:\n    - Integration with the [Barman Cloud plugin](https://github.com/cloudnative-pg/plugin-barman-cloud)\n      for continuous online backup via WAL archiving to AWS S3, S3-compatible\n      services, Azure Blob Storage, and Google Cloud Storage, with support for\n      retention policies based on a configurable recovery window.\n    - Backups using volume snapshots (where supported by storage classes).\n    - Full and Point-In-Time recovery from volume snapshots or object stores (via Barman Cloud plugin).\n    - Backup from standby replicas to reduce primary workload impact.\n- Offline and online import of PostgreSQL databases, including major upgrades:\n    - *Offline Import*: Direct restore from existing databases.\n    - *Online Import*: PostgreSQL native logical replication via the `Subscription` resource.\n- Offline In-Place Major Upgrades of PostgreSQL\n- High Availability physical replication slots, including synchronization of\n  user-defined replication slots.\n- Parallel WAL archiving and restore, ensuring high-performance data\n  synchronization in high-write environments.\n- TLS support, including:\n    - Secure connections and client certificate authentication.\n    - Custom TLS certificates (integrated with `cert-manager`).\n- Startup and readiness probes, including replica probes based on desired lag\n  from the primary.\n- Declarative rolling updates for:\n    - PostgreSQL minor versions.\n    - Operator upgrades (in-place or rolling updates).\n- Standard output logging of PostgreSQL error messages in JSON format for\n  easier integration with log aggregation tools.\n- Prometheus-compatible metrics exporter (`metrics` port 9187) for custom\n  monitoring.\n- `cnpg` plugin for `kubectl` to simplify cluster operations.\n- Cluster hibernation for resource efficiency in inactive states.\n- Fencing of PostgreSQL clusters (full cluster or subset) to isolate instances\n  when needed.\n- Connection pooling with PgBouncer for improved database efficiency.\n- OLM (Operator Lifecycle Manager) installation support for streamlined\n  deployments.\n- Multi-arch container images, including Software Bill of Materials (SBOM) and\n  provenance attestations for security compliance.\n",
      "provider": "The CloudNativePG Contributors",
      "install_strategy": "OwnNamespace",
      "creation_timestamp": "2025-09-07T09:12:54Z",
      "labels": {
        "olm.copiedFrom": "operators",
        "olm.managed": "true",
        "operatorframework.io/arch.amd64": "supported"
      },
      "annotations": {
        "alm-examples": "[\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"backup-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      }\n    },\n    \"status\": {\n      \"serverName\": null\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Cluster\",\n    \"metadata\": {\n      \"name\": \"cluster-sample\"\n    },\n    \"spec\": {\n      \"instances\": 3,\n      \"logLevel\": \"info\",\n      \"primaryUpdateStrategy\": \"unsupervised\",\n      \"storage\": {\n        \"size\": \"1Gi\"\n      },\n      \"walStorage\": {\n        \"size\": \"1Gi\"\n      }\n    },\n    \"status\": {\n      \"instances\": 3\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"ClusterImageCatalog\",\n    \"metadata\": {\n      \"name\": \"postgresql\"\n    },\n    \"spec\": {\n      \"images\": [\n        {\n          \"image\": \"ghcr.io/cloudnative-pg/postgresql@sha256:1c97e0d6e94d8b335be7f258eeda2202966df5fde0c934eef4b13c760ec6a891\",\n          \"major\": 15\n        },\n        {\n          \"image\": \"ghcr.io/cloudnative-pg/postgresql@sha256:ee2e3ce7f0ea935c3f4ab245c0b3959c9f1c49816ae02222ceb6bc347f48e43b\",\n          \"major\": 16\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Database\",\n    \"metadata\": {\n      \"name\": \"database-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      },\n      \"name\": \"database-sample\",\n      \"owner\": \"app\"\n    },\n    \"status\": {\n      \"applied\": false\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"ImageCatalog\",\n    \"metadata\": {\n      \"name\": \"postgresql\",\n      \"namespace\": \"default\"\n    },\n    \"spec\": {\n      \"images\": [\n        {\n          \"image\": \"ghcr.io/cloudnative-pg/postgresql@sha256:1c97e0d6e94d8b335be7f258eeda2202966df5fde0c934eef4b13c760ec6a891\",\n          \"major\": 15\n        },\n        {\n          \"image\": \"ghcr.io/cloudnative-pg/postgresql@sha256:ee2e3ce7f0ea935c3f4ab245c0b3959c9f1c49816ae02222ceb6bc347f48e43b\",\n          \"major\": 16\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Pooler\",\n    \"metadata\": {\n      \"name\": \"pooler-sample-rw\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      },\n      \"instances\": 1,\n      \"pgbouncer\": {\n        \"poolMode\": \"session\"\n      },\n      \"type\": \"rw\"\n    },\n    \"status\": {\n      \"instances\": 1\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Publication\",\n    \"metadata\": {\n      \"name\": \"publication-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      },\n      \"dbname\": \"app\",\n      \"name\": \"pub\",\n      \"target\": {\n        \"allTables\": true\n      }\n    },\n    \"status\": {\n      \"applied\": false\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"ScheduledBackup\",\n    \"metadata\": {\n      \"name\": \"scheduledbackup-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      },\n      \"schedule\": \"0 0 0 * * *\"\n    },\n    \"status\": {\n      \"lastCheckTime\": null\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Subscription\",\n    \"metadata\": {\n      \"name\": \"subscription-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample-dest\"\n      },\n      \"dbname\": \"app\",\n      \"externalClusterName\": \"cluster-sample\",\n      \"name\": \"sub\",\n      \"publicationName\": \"pub\"\n    },\n    \"status\": {\n      \"applied\": false\n    }\n  }\n]",
        "capabilities": "Auto Pilot",
        "categories": "Database",
        "certified": "true",
        "containerImage": "ghcr.io/cloudnative-pg/cloudnative-pg@sha256:53995e9d6a7760c77d77e5298f78b49029427494f4dd933d5fa7a74f7af3bb44",
        "createdAt": "2025-08-12T14:08:35Z",
        "description": "CloudNativePG is an open source operator designed to manage highly available PostgreSQL databases with a primary/standby architecture on any supported Kubernetes cluster.",
        "features.operators.openshift.io/disconnected": "true",
        "features.operators.openshift.io/fips-compliant": "false",
        "features.operators.openshift.io/proxy-aware": "false",
        "features.operators.openshift.io/tls-profiles": "false",
        "features.operators.openshift.io/token-auth-aws": "false",
        "features.operators.openshift.io/token-auth-azure": "false",
        "features.operators.openshift.io/token-auth-gcp": "false",
        "olm.operatorGroup": "global-operators",
        "olm.operatorNamespace": "operators",
        "operatorframework.io/properties": "{\"properties\":[{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Backup\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Cluster\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"ClusterImageCatalog\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Database\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"FailoverQuorum\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"ImageCatalog\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Pooler\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Publication\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"ScheduledBackup\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Subscription\",\"version\":\"v1\"}},{\"type\":\"olm.package\",\"value\":{\"packageName\":\"cloudnative-pg\",\"version\":\"1.27.0\"}}]}",
        "operators.operatorframework.io/builder": "operator-sdk-v1.41.1",
        "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v4",
        "repository": "https://github.com/cloudnative-pg/cloudnative-pg",
        "support": "Community"
      },
      "owned_crds": [
        "backups.postgresql.cnpg.io",
        "clusterimagecatalogs.postgresql.cnpg.io",
        "clusters.postgresql.cnpg.io",
        "databases.postgresql.cnpg.io",
        "failoverquorums.postgresql.cnpg.io",
        "imagecatalogs.postgresql.cnpg.io",
        "poolers.postgresql.cnpg.io",
        "publications.postgresql.cnpg.io",
        "scheduledbackups.postgresql.cnpg.io",
        "subscriptions.postgresql.cnpg.io"
      ],
      "required_crds": [],
      "permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps",
                "secrets",
                "services"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps/status",
                "secrets/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "events"
              ],
              "verbs": [
                "create",
                "patch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "nodes"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "persistentvolumeclaims",
                "pods",
                "pods/exec"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "pods/status"
              ],
              "verbs": [
                "get"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "serviceaccounts"
              ],
              "verbs": [
                "create",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "admissionregistration.k8s.io"
              ],
              "resources": [
                "mutatingwebhookconfigurations",
                "validatingwebhookconfigurations"
              ],
              "verbs": [
                "get",
                "patch"
              ]
            },
            {
              "apiGroups": [
                "apps"
              ],
              "resources": [
                "deployments"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "batch"
              ],
              "resources": [
                "jobs"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "coordination.k8s.io"
              ],
              "resources": [
                "leases"
              ],
              "verbs": [
                "create",
                "get",
                "update"
              ]
            },
            {
              "apiGroups": [
                "monitoring.coreos.com"
              ],
              "resources": [
                "podmonitors"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "policy"
              ],
              "resources": [
                "poddisruptionbudgets"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "backups",
                "clusters",
                "databases",
                "poolers",
                "publications",
                "scheduledbackups",
                "subscriptions"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "backups/status",
                "databases/status",
                "publications/status",
                "scheduledbackups/status",
                "subscriptions/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "clusterimagecatalogs",
                "imagecatalogs"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "clusters/finalizers",
                "poolers/finalizers"
              ],
              "verbs": [
                "update"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "clusters/status",
                "failoverquorums/status",
                "poolers/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "failoverquorums"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "rbac.authorization.k8s.io"
              ],
              "resources": [
                "rolebindings",
                "roles"
              ],
              "verbs": [
                "create",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "snapshot.storage.k8s.io"
              ],
              "resources": [
                "volumesnapshots"
              ],
              "verbs": [
                "create",
                "get",
                "list",
                "patch",
                "watch"
              ]
            }
          ],
          "serviceAccountName": "cnpg-manager"
        }
      ],
      "cluster_permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "nodes"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "clusterimagecatalogs"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            }
          ],
          "serviceAccountName": "cnpg-manager"
        }
      ],
      "replaces": "cloudnative-pg.v1.26.1",
      "skips": [],
      "min_kube_version": "1.23.0"
    },
    {
      "name": "mariadb-operator.v25.8.3",
      "namespace": "krateo-system",
      "display_name": "MariaDB Operator",
      "version": "25.8.3",
      "phase": "Succeeded",
      "description": "Install [`mariadb-operator`](https://github.com/mariadb-operator/mariadb-operator) via [OLM](https://olm.operatorframework.io/) using the [helm chart](https://artifacthub.io/packages/helm/mariadb-operator/mariadb-operator).\n\nThis helm operator provides provides a 1:1 mapping between the official helm chart and the [`MariadbOperator`](https://github.com/mariadb-operator/mariadb-operator-helm/blob/main/config/samples/helm_v1alpha1_mariadboperator.yaml) CRD, allowing to install [`mariadb-operator`](https://github.com/mariadb-operator/mariadb-operator) via OLM without having to do any change in the helm chart.\n\nNormally, you would install [`mariadb-operator`](https://github.com/mariadb-operator/mariadb-operator) providing this `values.yaml` to the helm chart:\n```yaml\nimage:\n  repository: ghcr.io/mariadb-operator/mariadb-operator\n  pullPolicy: IfNotPresent\nlogLevel: INFO\nha:\n  enabled: true\nmetrics:\n  enabled: true\n  serviceMonitor:\n    enabled: true\nwebhook:\n  cert:\n    certManager:\n      enabled: true\n```\n\nThis helm chart installation is abstracted in the [`MariadbOperator`](https://github.com/mariadb-operator/mariadb-operator-helm/blob/main/config/samples/helm_v1alpha1_mariadboperator.yaml) CRD, which will be reconciled by the helm operator:\n```yaml\napiVersion: helm.k8s.mariadb.com/v1alpha1\nkind: MariadbOperator\nmetadata:\n  name: mariadb-operator\nspec:\n  image:\n    repository: ghcr.io/mariadb-operator/mariadb-operator\n    pullPolicy: IfNotPresent\n  logLevel: INFO\n  ha:\n    enabled: true\n  metrics:\n    enabled: true\n    serviceMonitor:\n      enabled: true\n  webhook:\n    cert:\n      certManager:\n        enabled: true\n```\n\nOnce you have installed the operator, you will able to install a [`MariaDB`](https://github.com/mariadb-operator/mariadb-operator/blob/main/examples/manifests/mariadb_v1alpha1_mariadb.yaml) instance. Refer to the main [`mariadb-operator`](https://github.com/mariadb-operator/mariadb-operator) documentation for getting started with the rest of CRDs.\n\n## Documentation\n* [mariadb-operator](https://github.com/mariadb-operator/mariadb-operator/blob/main/README.md)\n* [mariadb-operator-helm](https://github.com/mariadb-operator/mariadb-operator-helm/blob/main/README.md)\n\n## Releases\nThis operator is automatically published in the following repositories whenever a new version of the [helm chart](https://artifacthub.io/packages/helm/mariadb-operator/mariadb-operator) is released:\n- [k8s-operatorhub/community-operators](https://github.com/k8s-operatorhub/community-operators)\n- [redhat-openshift-ecosystem/community-operators-prod](https://github.com/redhat-openshift-ecosystem/community-operators-prod)\n\n## Roadmap\nTake a look at our [roadmap](https://github.com/mariadb-operator/mariadb-operator/blob/main/ROADMAP.md) and feel free to open an issue to suggest new features.\n\n## Contributing\nWe welcome and encourage contributions to this project! Please check our [contributing](https://github.com/mariadb-operator/mariadb-operator/blob/main/CONTRIBUTING.md) and [development](https://github.com/mariadb-operator/mariadb-operator/blob/main/docs/DEVELOPMENT.md) guides. PRs welcome!\n\n## Get in touch\nJoin us on Slack: **[MariaDB Community Slack](https://r.mariadb.com/join-community-slack)**.\n",
      "provider": "mariadb-operator",
      "install_strategy": "OwnNamespace",
      "creation_timestamp": "2025-09-07T09:15:57Z",
      "labels": {
        "olm.copiedFrom": "operators",
        "olm.managed": "true"
      },
      "annotations": {
        "alm-examples": "[\n  {\n    \"apiVersion\": \"helm.mariadb.mmontes.io/v1alpha1\",\n    \"kind\": \"MariadbOperator\",\n    \"metadata\": {\n      \"name\": \"mariadb-operator\"\n    },\n    \"spec\": {\n      \"affinity\": {},\n      \"certController\": {\n        \"affinity\": {},\n        \"caValidity\": \"35064h\",\n        \"certValidity\": \"8766h\",\n        \"enabled\": true,\n        \"extrArgs\": [],\n        \"extraVolumeMounts\": [],\n        \"extraVolumes\": [],\n        \"ha\": {\n          \"enabled\": false,\n          \"replicas\": 3\n        },\n        \"image\": {\n          \"pullPolicy\": \"IfNotPresent\",\n          \"repository\": \"ghcr.io/mariadb-operator/mariadb-operator\",\n          \"tag\": \"\"\n        },\n        \"imagePullSecrets\": [],\n        \"lookaheadValidity\": \"2160h\",\n        \"nodeSelector\": {},\n        \"podAnnotations\": {},\n        \"podSecurityContext\": {},\n        \"requeueDuration\": \"5m\",\n        \"resources\": {},\n        \"securityContext\": {},\n        \"serviceAccount\": {\n          \"annotations\": {},\n          \"automount\": true,\n          \"enabled\": true,\n          \"extraLabels\": {},\n          \"name\": \"\"\n        },\n        \"serviceMonitor\": {\n          \"additionalLabels\": {},\n          \"enabled\": true,\n          \"interval\": \"30s\",\n          \"scrapeTimeout\": \"25s\"\n        },\n        \"tolerations\": []\n      },\n      \"clusterName\": \"cluster.local\",\n      \"extrArgs\": [],\n      \"extraVolumeMounts\": [],\n      \"extraVolumes\": [],\n      \"fullnameOverride\": \"\",\n      \"ha\": {\n        \"enabled\": false,\n        \"replicas\": 3\n      },\n      \"image\": {\n        \"pullPolicy\": \"IfNotPresent\",\n        \"repository\": \"ghcr.io/mariadb-operator/mariadb-operator\",\n        \"tag\": \"\"\n      },\n      \"imagePullSecrets\": [],\n      \"logLevel\": \"INFO\",\n      \"metrics\": {\n        \"enabled\": false,\n        \"serviceMonitor\": {\n          \"additionalLabels\": {},\n          \"enabled\": true,\n          \"interval\": \"30s\",\n          \"scrapeTimeout\": \"25s\"\n        }\n      },\n      \"nameOverride\": \"\",\n      \"nodeSelector\": {},\n      \"podAnnotations\": {},\n      \"podSecurityContext\": {},\n      \"rbac\": {\n        \"enabled\": true\n      },\n      \"resources\": {},\n      \"securityContext\": {},\n      \"serviceAccount\": {\n        \"annotations\": {},\n        \"automount\": true,\n        \"enabled\": true,\n        \"extraLabels\": {},\n        \"name\": \"\"\n      },\n      \"tolerations\": [],\n      \"webhook\": {\n        \"affinity\": {},\n        \"annotations\": {},\n        \"cert\": {\n          \"caPath\": \"/tmp/k8s-webhook-server/certificate-authority\",\n          \"certManager\": {\n            \"duration\": \"\",\n            \"enabled\": false,\n            \"issuerRef\": {},\n            \"renewBefore\": \"\"\n          },\n          \"path\": \"/tmp/k8s-webhook-server/serving-certs\",\n          \"secretAnnotations\": {}\n        },\n        \"extrArgs\": [],\n        \"extraVolumeMounts\": [],\n        \"extraVolumes\": [],\n        \"ha\": {\n          \"enabled\": false,\n          \"replicas\": 3\n        },\n        \"hostNetwork\": false,\n        \"image\": {\n          \"pullPolicy\": \"IfNotPresent\",\n          \"repository\": \"ghcr.io/mariadb-operator/mariadb-operator\",\n          \"tag\": \"\"\n        },\n        \"imagePullSecrets\": [],\n        \"nodeSelector\": {},\n        \"podAnnotations\": {},\n        \"podSecurityContext\": {},\n        \"port\": 10250,\n        \"resources\": {},\n        \"securityContext\": {},\n        \"serviceAccount\": {\n          \"annotations\": {},\n          \"automount\": true,\n          \"enabled\": true,\n          \"extraLabels\": {},\n          \"name\": \"\"\n        },\n        \"serviceMonitor\": {\n          \"additionalLabels\": {},\n          \"enabled\": true,\n          \"interval\": \"30s\",\n          \"scrapeTimeout\": \"25s\"\n        },\n        \"tolerations\": []\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"backup\"\n    },\n    \"spec\": {\n      \"args\": [\n        \"--single-transaction\",\n        \"--all-databases\"\n      ],\n      \"logLevel\": \"info\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"maxRetention\": \"720h\",\n      \"resources\": {\n        \"limits\": {\n          \"cpu\": \"300m\",\n          \"memory\": \"512Mi\"\n        },\n        \"requests\": {\n          \"cpu\": \"100m\",\n          \"memory\": \"128Mi\"\n        }\n      },\n      \"schedule\": {\n        \"cron\": \"*/1 * * * *\",\n        \"suspend\": false\n      },\n      \"storage\": {\n        \"s3\": {\n          \"accessKeyIdSecretKeyRef\": {\n            \"key\": \"access-key-id\",\n            \"name\": \"minio\"\n          },\n          \"bucket\": \"backups\",\n          \"endpoint\": \"minio.minio.svc.cluster.local:9000\",\n          \"prefix\": \"mariadb\",\n          \"secretAccessKeySecretKeyRef\": {\n            \"key\": \"secret-access-key\",\n            \"name\": \"minio\"\n          },\n          \"tls\": {\n            \"caSecretKeyRef\": {\n              \"key\": \"ca.crt\",\n              \"name\": \"minio-ca\"\n            },\n            \"enabled\": true\n          }\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Connection\",\n    \"metadata\": {\n      \"name\": \"connection\"\n    },\n    \"spec\": {\n      \"database\": \"mariadb\",\n      \"healthCheck\": {\n        \"interval\": \"10s\",\n        \"retryInterval\": \"3s\"\n      },\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"params\": {\n        \"parseTime\": \"true\"\n      },\n      \"passwordSecretKeyRef\": {\n        \"key\": \"password\",\n        \"name\": \"mariadb\"\n      },\n      \"secretName\": \"connection\",\n      \"secretTemplate\": {\n        \"annotations\": {\n          \"k8s.mariadb.com/connection\": \"sample\"\n        },\n        \"databaseKey\": \"database\",\n        \"hostKey\": \"host\",\n        \"key\": \"dsn\",\n        \"labels\": {\n          \"k8s.mariadb.com/connection\": \"sample\"\n        },\n        \"passwordKey\": \"password\",\n        \"portKey\": \"port\",\n        \"usernameKey\": \"username\"\n      },\n      \"serviceName\": \"mariadb\",\n      \"username\": \"mariadb\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Database\",\n    \"metadata\": {\n      \"name\": \"data-test\"\n    },\n    \"spec\": {\n      \"characterSet\": \"utf8\",\n      \"collate\": \"utf8_general_ci\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"retryInterval\": \"5s\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Grant\",\n    \"metadata\": {\n      \"name\": \"grant\"\n    },\n    \"spec\": {\n      \"database\": \"*\",\n      \"grantOption\": true,\n      \"host\": \"%\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"privileges\": [\n        \"SELECT\",\n        \"INSERT\",\n        \"UPDATE\"\n      ],\n      \"requeueInterval\": \"30s\",\n      \"retryInterval\": \"5s\",\n      \"table\": \"*\",\n      \"username\": \"user\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"MariaDB\",\n    \"metadata\": {\n      \"name\": \"mariadb\"\n    },\n    \"spec\": {\n      \"connection\": {\n        \"secretName\": \"mariadb-conn\",\n        \"secretTemplate\": {\n          \"key\": \"dsn\"\n        }\n      },\n      \"database\": \"mariadb\",\n      \"galera\": {\n        \"enabled\": true\n      },\n      \"metrics\": {\n        \"enabled\": true,\n        \"passwordSecretKeyRef\": {\n          \"generate\": true,\n          \"key\": \"password\",\n          \"name\": \"mariadb-metrics\"\n        }\n      },\n      \"myCnf\": \"[mariadb]\\nbind-address=*\\ndefault_storage_engine=InnoDB\\nbinlog_format=row\\ninnodb_autoinc_lock_mode=2\\ninnodb_buffer_pool_size=1024M\\nmax_allowed_packet=256M\\n\",\n      \"passwordSecretKeyRef\": {\n        \"generate\": true,\n        \"key\": \"password\",\n        \"name\": \"mariadb-password\"\n      },\n      \"primaryConnection\": {\n        \"secretName\": \"mariadb-conn-primary\",\n        \"secretTemplate\": {\n          \"key\": \"dsn\"\n        }\n      },\n      \"primaryService\": {\n        \"type\": \"ClusterIP\"\n      },\n      \"replicas\": 3,\n      \"rootPasswordSecretKeyRef\": {\n        \"generate\": true,\n        \"key\": \"password\",\n        \"name\": \"mariadb-root\"\n      },\n      \"secondaryConnection\": {\n        \"secretName\": \"mariadb-conn-secondary\",\n        \"secretTemplate\": {\n          \"key\": \"dsn\"\n        }\n      },\n      \"secondaryService\": {\n        \"type\": \"ClusterIP\"\n      },\n      \"service\": {\n        \"type\": \"ClusterIP\"\n      },\n      \"storage\": {\n        \"size\": \"1Gi\"\n      },\n      \"updateStrategy\": {\n        \"type\": \"ReplicasFirstPrimaryLast\"\n      },\n      \"username\": \"mariadb\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"MaxScale\",\n    \"metadata\": {\n      \"name\": \"maxscale-galera\"\n    },\n    \"spec\": {\n      \"admin\": {\n        \"guiEnabled\": true,\n        \"port\": 8989\n      },\n      \"auth\": {\n        \"generate\": true\n      },\n      \"config\": {\n        \"sync\": {\n          \"database\": \"mysql\",\n          \"interval\": \"5s\",\n          \"timeout\": \"10s\"\n        }\n      },\n      \"connection\": {\n        \"port\": 3306,\n        \"secretName\": \"mxs-galera-conn\"\n      },\n      \"guiKubernetesService\": {\n        \"metadata\": {\n          \"annotations\": {\n            \"metallb.universe.tf/loadBalancerIPs\": \"172.18.0.231\"\n          }\n        },\n        \"type\": \"LoadBalancer\"\n      },\n      \"kubernetesService\": {\n        \"annotations\": {\n          \"metallb.universe.tf/loadBalancerIPs\": \"172.18.0.224\"\n        },\n        \"type\": \"LoadBalancer\"\n      },\n      \"mariaDbRef\": {\n        \"name\": \"mariadb-galera\"\n      },\n      \"monitor\": {\n        \"cooperativeMonitoring\": \"majority_of_all\",\n        \"interval\": \"2s\",\n        \"params\": {\n          \"available_when_donor\": \"false\",\n          \"disable_master_failback\": \"false\",\n          \"disable_master_role_setting\": \"false\"\n        }\n      },\n      \"replicas\": 3,\n      \"requeueInterval\": \"10s\",\n      \"services\": [\n        {\n          \"listener\": {\n            \"params\": {\n              \"connection_metadata\": \"tx_isolation=auto\"\n            },\n            \"port\": 3306,\n            \"protocol\": \"MariaDBProtocol\"\n          },\n          \"name\": \"rw-router\",\n          \"params\": {\n            \"master_accept_reads\": \"true\",\n            \"max_replication_lag\": \"3s\",\n            \"max_slave_connections\": \"255\",\n            \"transaction_replay\": \"true\",\n            \"transaction_replay_attempts\": \"10\",\n            \"transaction_replay_timeout\": \"5s\"\n          },\n          \"router\": \"readwritesplit\"\n        },\n        {\n          \"listener\": {\n            \"port\": 3307\n          },\n          \"name\": \"rconn-master-router\",\n          \"params\": {\n            \"master_accept_reads\": \"true\",\n            \"max_replication_lag\": \"3s\",\n            \"router_options\": \"master\"\n          },\n          \"router\": \"readconnroute\"\n        },\n        {\n          \"listener\": {\n            \"port\": 3308\n          },\n          \"name\": \"rconn-slave-router\",\n          \"params\": {\n            \"max_replication_lag\": \"3s\",\n            \"router_options\": \"slave\"\n          },\n          \"router\": \"readconnroute\"\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"PhysicalBackup\",\n    \"metadata\": {\n      \"name\": \"physicalbackup\"\n    },\n    \"spec\": {\n      \"compression\": \"bzip2\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"maxRetention\": \"720h\",\n      \"podAffinity\": true,\n      \"resources\": {\n        \"limits\": {\n          \"cpu\": \"300m\",\n          \"memory\": \"512Mi\"\n        },\n        \"requests\": {\n          \"cpu\": \"100m\",\n          \"memory\": \"128Mi\"\n        }\n      },\n      \"schedule\": {\n        \"cron\": \"*/1 * * * *\",\n        \"immediate\": true,\n        \"suspend\": false\n      },\n      \"serviceAccountName\": \"backup\",\n      \"stagingStorage\": {\n        \"persistentVolumeClaim\": {\n          \"accessModes\": [\n            \"ReadWriteOnce\"\n          ],\n          \"resources\": {\n            \"requests\": {\n              \"storage\": \"1Gi\"\n            }\n          }\n        }\n      },\n      \"storage\": {\n        \"s3\": {\n          \"accessKeyIdSecretKeyRef\": {\n            \"key\": \"access-key-id\",\n            \"name\": \"minio\"\n          },\n          \"bucket\": \"physicalbackups\",\n          \"endpoint\": \"minio.minio.svc.cluster.local:9000\",\n          \"prefix\": \"mariadb\",\n          \"region\": \"us-east-1\",\n          \"secretAccessKeySecretKeyRef\": {\n            \"key\": \"secret-access-key\",\n            \"name\": \"minio\"\n          },\n          \"tls\": {\n            \"caSecretKeyRef\": {\n              \"key\": \"ca.crt\",\n              \"name\": \"minio-ca\"\n            },\n            \"enabled\": true\n          }\n        }\n      },\n      \"timeout\": \"1h\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Restore\",\n    \"metadata\": {\n      \"name\": \"restore\"\n    },\n    \"spec\": {\n      \"backupRef\": {\n        \"name\": \"backup\"\n      },\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"resources\": {\n        \"limits\": {\n          \"cpu\": \"300m\",\n          \"memory\": \"512Mi\"\n        },\n        \"requests\": {\n          \"cpu\": \"100m\",\n          \"memory\": \"128Mi\"\n        }\n      },\n      \"targetRecoveryTime\": \"2023-12-19T09:00:00Z\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"SqlJob\",\n    \"metadata\": {\n      \"name\": \"03-stars\"\n    },\n    \"spec\": {\n      \"database\": \"mariadb\",\n      \"dependsOn\": [\n        {\n          \"name\": \"01-users\"\n        },\n        {\n          \"name\": \"02-repos\"\n        }\n      ],\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"passwordSecretKeyRef\": {\n        \"key\": \"password\",\n        \"name\": \"mariadb\"\n      },\n      \"schedule\": {\n        \"cron\": \"*/1 * * * *\",\n        \"suspend\": false\n      },\n      \"sql\": \"CREATE TABLE IF NOT EXISTS stars (\\n  id bigint PRIMARY KEY AUTO_INCREMENT,\\n  user_id bigint NOT NULL,\\n  repo_id bigint NOT NULL,\\n  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,\\n  FOREIGN KEY (repo_id) REFERENCES repos(id) ON DELETE CASCADE,\\n  UNIQUE KEY (user_id, repo_id)\\n);\\nINSERT INTO stars(user_id, repo_id) \\n  VALUES((SELECT id FROM users ORDER BY RAND() LIMIT 1), (SELECT id FROM repos ORDER BY RAND() LIMIT 1))\\n  ON DUPLICATE KEY UPDATE id=id;\\nDELETE FROM stars WHERE id = (SELECT id FROM stars ORDER BY RAND() LIMIT 1);\\nSELECT r.name AS repo, COUNT(*) AS stars\\nFROM stars s\\nJOIN repos r\\nON s.repo_id = r.id\\nGROUP BY r.id\\nORDER BY stars DESC;\",\n      \"username\": \"mariadb\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"User\",\n    \"metadata\": {\n      \"name\": \"user\"\n    },\n    \"spec\": {\n      \"host\": \"%\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"maxUserConnections\": 20,\n      \"passwordSecretKeyRef\": {\n        \"key\": \"password\",\n        \"name\": \"mariadb\"\n      },\n      \"retryInterval\": \"5s\"\n    }\n  }\n]",
        "capabilities": "Deep Insights",
        "categories": "Database",
        "containerImage": "ghcr.io/mariadb-operator/mariadb-operator-helm:25.8.3",
        "createdAt": "2025-08-08T12:14:12Z",
        "description": "Run and operate MariaDB in a cloud native way",
        "features.operators.openshift.io/disconnected": "false",
        "features.operators.openshift.io/fips-compliant": "false",
        "features.operators.openshift.io/proxy-aware": "false",
        "features.operators.openshift.io/tls-profiles": "false",
        "features.operators.openshift.io/token-auth-aws": "false",
        "features.operators.openshift.io/token-auth-azure": "false",
        "features.operators.openshift.io/token-auth-gcp": "false",
        "olm.operatorGroup": "global-operators",
        "olm.operatorNamespace": "operators",
        "operatorframework.io/properties": "{\"properties\":[{\"type\":\"olm.gvk\",\"value\":{\"group\":\"helm.mariadb.mmontes.io\",\"kind\":\"MariadbOperator\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Backup\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Connection\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Database\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Grant\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"MariaDB\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"MaxScale\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"PhysicalBackup\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Restore\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"SqlJob\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"User\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.package\",\"value\":{\"packageName\":\"mariadb-operator\",\"version\":\"25.8.3\"}}]}",
        "operators.operatorframework.io/builder": "operator-sdk-v1.26.0",
        "operators.operatorframework.io/project_layout": "helm.sdk.operatorframework.io/v1",
        "repository": "https://github.com/mariadb-operator/mariadb-operator",
        "support": "mariadb-operator"
      },
      "owned_crds": [
        "backups.k8s.mariadb.com",
        "connections.k8s.mariadb.com",
        "databases.k8s.mariadb.com",
        "grants.k8s.mariadb.com",
        "mariadboperators.helm.mariadb.mmontes.io",
        "mariadbs.k8s.mariadb.com",
        "maxscales.k8s.mariadb.com",
        "physicalbackups.k8s.mariadb.com",
        "restores.k8s.mariadb.com",
        "sqljobs.k8s.mariadb.com",
        "users.k8s.mariadb.com"
      ],
      "required_crds": [],
      "permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps"
              ],
              "verbs": [
                "get",
                "list",
                "watch",
                "create",
                "update",
                "patch",
                "delete"
              ]
            },
            {
              "apiGroups": [
                "coordination.k8s.io"
              ],
              "resources": [
                "leases"
              ],
              "verbs": [
                "get",
                "list",
                "watch",
                "create",
                "update",
                "patch",
                "delete"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "events"
              ],
              "verbs": [
                "create",
                "patch"
              ]
            }
          ],
          "serviceAccountName": "mariadb-operator-helm-controller-manager"
        }
      ],
      "cluster_permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "namespaces"
              ],
              "verbs": [
                "get"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "secrets"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "events"
              ],
              "verbs": [
                "create"
              ]
            },
            {
              "apiGroups": [
                "helm.mariadb.mmontes.io"
              ],
              "resources": [
                "mariadboperators",
                "mariadboperators/status",
                "mariadboperators/finalizers"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "rbac.authorization.k8s.io"
              ],
              "resources": [
                "clusterrolebindings",
                "clusterroles"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "admissionregistration.k8s.io"
              ],
              "resources": [
                "validatingwebhookconfigurations",
                "mutatingwebhookconfigurations"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "rbac.authorization.k8s.io"
              ],
              "resources": [
                "rolebindings",
                "roles"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "apps"
              ],
              "resources": [
                "deployments"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "serviceaccounts",
                "services"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "apiextensions.k8s.io"
              ],
              "resources": [
                "customresourcedefinitions"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "cert-manager.io"
              ],
              "resources": [
                "certificates",
                "issuers"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "monitoring.coreos.com"
              ],
              "resources": [
                "servicemonitors"
              ],
              "verbs": [
                "*"
              ]
            }
          ],
          "serviceAccountName": "mariadb-operator-helm-controller-manager"
        }
      ],
      "replaces": "mariadb-operator.v25.8.2",
      "skips": [],
      "min_kube_version": "1.16.0"
    },
    {
      "name": "oracle-database-operator.v1.2.0",
      "namespace": "krateo-system",
      "display_name": "Oracle Database Operator",
      "version": "1.2.0",
      "phase": "Installing",
      "description": "As part of Oracle's resolution to make Oracle Database Kubernetes native (that is, observable and operable by Kubernetes), Oracle released Oracle Database Operator for Kubernetes (OraOperator or the operator). OraOperator extends the Kubernetes API with custom resources and controllers for automating Oracle Database lifecycle management.\nIn this v1.2.0 production release, OraOperator supports the following database configurations and infrastructure:\n##Supported Database Configurations:\n* Oracle Cloud Infrastructure (OCI) Databases\n  * Oracle Autonomous Database Serverless (ADB-S)\n  * Oracle Autonomous Database on Dedicated on (ADB-D)\n  * Oracle Base Database Cloud Service (Base DB)\n* Containerized Database deployments on Kubernetes\n  * Oracle Kubernetes Engine (OKE) and Oracle Cloud Native Environments (OCNE)\n    * Single Instance databases (SIDB)\n    * Globally Distributed Databases (Shared)\n    * Oracle Data Guard\n    * True Cache (Preview release)\n    * Oracle Database Observability\n* On-Premises Databases\n  * Oracle Multitenant Databases (CDB/PDBs management)\n  * ORDS Services\n\nRefer to full feature list and capabilities: [https://github.com/oracle/oracle-database-operator/blob/main/README.md](https://github.com/oracle/oracle-database-operator/blob/main/README.md)\n",
      "provider": "Oracle",
      "install_strategy": "OwnNamespace",
      "creation_timestamp": "2025-09-07T09:13:37Z",
      "labels": {
        "olm.copiedFrom": "operators",
        "olm.managed": "true"
      },
      "annotations": {
        "alm-examples": "[\n  {\n    \"apiVersion\": \"database.oracle.com/v1alpha1\",\n    \"kind\": \"CDB\",\n    \"metadata\": {\n      \"name\": \"cdb-dev\",\n      \"namespace\": \"oracle-database-operator-system\"\n    },\n    \"spec\": {\n      \"cdbAdminPwd\": {\n        \"secret\": {\n          \"key\": \"cdbadmin_pwd\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"cdbAdminUser\": {\n        \"secret\": {\n          \"key\": \"cdbadmin_user\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"cdbName\": \"devcdb\",\n      \"dbPort\": 1521,\n      \"dbServer\": \"172.17.0.4\",\n      \"ordsImage\": \"\",\n      \"ordsImagePullPolicy\": \"Always\",\n      \"ordsPwd\": {\n        \"secret\": {\n          \"key\": \"ords_pwd\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"replicas\": 1,\n      \"serviceName\": \"devdb.example.com\",\n      \"sysAdminPwd\": {\n        \"secret\": {\n          \"key\": \"sysadmin_pwd\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"webServerPwd\": {\n        \"secret\": {\n          \"key\": \"webserver_pwd\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"webServerUser\": {\n        \"secret\": {\n          \"key\": \"webserver_user\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v1alpha1\",\n    \"kind\": \"DbcsSystem\",\n    \"metadata\": {\n      \"name\": \"dbcssystem-sample\"\n    },\n    \"spec\": {\n      \"foo\": \"bar\"\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v1alpha1\",\n    \"kind\": \"PDB\",\n    \"metadata\": {\n      \"labels\": {\n        \"cdb\": \"cdb-dev\"\n      },\n      \"name\": \"pdb1\",\n      \"namespace\": \"oracle-database-operator-system\"\n    },\n    \"spec\": {\n      \"action\": \"Create\",\n      \"adminName\": {\n        \"secret\": {\n          \"key\": \"sysadmin_user\",\n          \"secretName\": \"pdb1-secret\"\n        }\n      },\n      \"adminPwd\": {\n        \"secret\": {\n          \"key\": \"sysadmin_pwd\",\n          \"secretName\": \"pdb1-secret\"\n        }\n      },\n      \"cdbName\": \"devcdb\",\n      \"cdbResName\": \"cdb-dev\",\n      \"fileNameConversions\": \"NONE\",\n      \"pdbName\": \"pdbdev\",\n      \"tempSize\": \"100M\",\n      \"totalSize\": \"1G\"\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v4\",\n    \"kind\": \"AutonomousContainerDatabase\",\n    \"metadata\": {\n      \"name\": \"autonomouscontainerdatabase-sample\"\n    },\n    \"spec\": {\n      \"autonomousExadataVMClusterOCID\": \"ocid1.autonomousexainfrastructure...\",\n      \"compartmentOCID\": \"ocid1.compartment... OR ocid1.tenancy...\",\n      \"displayName\": \"newACD\",\n      \"ociConfig\": {\n        \"configMapName\": \"oci-cred\",\n        \"secretName\": \"oci-privatekey\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v4\",\n    \"kind\": \"AutonomousDatabase\",\n    \"metadata\": {\n      \"name\": \"autonomousdatabase-sample\"\n    },\n    \"spec\": {\n      \"action\": \"Create\",\n      \"details\": {\n        \"adminPassword\": {\n          \"k8sSecret\": {\n            \"name\": \"admin-password\"\n          }\n        },\n        \"compartmentId\": \"ocid1.compartment... OR ocid1.tenancy...\",\n        \"cpuCoreCount\": 1,\n        \"dataStorageSizeInTBs\": 1,\n        \"dbName\": \"NewADB\",\n        \"displayName\": \"NewADB\"\n      },\n      \"ociConfig\": {\n        \"configMapName\": \"oci-cred\",\n        \"secretName\": \"oci-privatekey\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v4\",\n    \"kind\": \"AutonomousDatabaseBackup\",\n    \"metadata\": {\n      \"name\": \"autonomousdatabasebackup-sample\"\n    },\n    \"spec\": {\n      \"displayName\": \"autonomousdatabasebackup-sample\",\n      \"isLongTermBackup\": true,\n      \"ociConfig\": {\n        \"configMapName\": \"oci-cred\",\n        \"secretName\": \"oci-privatekey\"\n      },\n      \"retentionPeriodInDays\": 90,\n      \"target\": {\n        \"k8sADB\": {\n          \"name\": \"autonomousdatabase-sample\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v4\",\n    \"kind\": \"SingleInstanceDatabase\",\n    \"metadata\": {\n      \"name\": \"sidb-sample\",\n      \"namespace\": \"default\"\n    },\n    \"spec\": {\n      \"adminPassword\": {\n        \"secretName\": \"db-admin-secret\"\n      },\n      \"archiveLog\": true,\n      \"charset\": \"AL32UTF8\",\n      \"edition\": \"enterprise\",\n      \"image\": {\n        \"pullFrom\": \"container-registry.oracle.com/database/enterprise_ru:19\",\n        \"pullSecrets\": \"oracle-container-registry-secret\"\n      },\n      \"pdbName\": \"orclpdb1\",\n      \"persistence\": {\n        \"accessMode\": \"ReadWriteOnce\",\n        \"size\": \"100Gi\",\n        \"storageClass\": \"oci-bv\"\n      },\n      \"replicas\": 1,\n      \"sid\": \"ORCL1\"\n    }\n  },\n  {\n    \"apiVersion\": \"observability.oracle.com/v1alpha1\",\n    \"kind\": \"DatabaseObserver\",\n    \"metadata\": {\n      \"name\": \"obs-sample\"\n    },\n    \"spec\": {\n      \"database\": {\n        \"dbConnectionString\": {\n          \"key\": \"connection\",\n          \"secret\": \"db-secret\"\n        },\n        \"dbPassword\": {\n          \"key\": \"password\",\n          \"secret\": \"db-secret\"\n        },\n        \"dbUser\": {\n          \"key\": \"username\",\n          \"secret\": \"db-secret\"\n        },\n        \"dbWallet\": {\n          \"secret\": \"instance-wallet\"\n        }\n      },\n      \"exporter\": {\n        \"configuration\": {\n          \"configmap\": {\n            \"configmapName\": \"devcm-oradevdb-config\",\n            \"key\": \"config.toml\"\n          }\n        },\n        \"image\": \"container-registry.oracle.com/database/observability-exporter:latest\",\n        \"service\": {\n          \"port\": 9161\n        }\n      },\n      \"ociConfig\": {\n        \"configMapName\": \"oci-cred\",\n        \"secretName\": \"oci-privatekey\"\n      },\n      \"prometheus\": {\n        \"labels\": {\n          \"app\": \"app-sample-label\"\n        },\n        \"port\": \"metrics\"\n      },\n      \"replicas\": 1\n    }\n  }\n]",
        "capabilities": "Seamless Upgrades",
        "categories": "Database",
        "containerImage": "container-registry.oracle.com/database/operator:1.2.0",
        "createdAt": "2025-04-10T20:09:48Z",
        "olm.operatorGroup": "global-operators",
        "olm.operatorNamespace": "operators",
        "operatorframework.io/properties": "{\"properties\":[{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousContainerDatabase\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousContainerDatabase\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabase\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabase\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabaseBackup\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabaseBackup\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabaseRestore\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabaseRestore\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"CDB\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"CDB\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"DataguardBroker\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"DataguardBroker\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"DbcsSystem\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"DbcsSystem\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"LREST\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"LRPDB\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"OracleRestDataService\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"OracleRestDataService\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"OrdsSrvs\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"PDB\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"PDB\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"ShardingDatabase\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"ShardingDatabase\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"SingleInstanceDatabase\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"SingleInstanceDatabase\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"observability.oracle.com\",\"kind\":\"DatabaseObserver\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"observability.oracle.com\",\"kind\":\"DatabaseObserver\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"observability.oracle.com\",\"kind\":\"DatabaseObserver\",\"version\":\"v4\"}},{\"type\":\"olm.package\",\"value\":{\"packageName\":\"oracle-database-operator\",\"version\":\"1.2.0\"}}]}",
        "operators.operatorframework.io/builder": "operator-sdk-v1.39.2",
        "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v4"
      },
      "owned_crds": [
        "autonomouscontainerdatabases.database.oracle.com",
        "autonomouscontainerdatabases.database.oracle.com",
        "autonomousdatabasebackups.database.oracle.com",
        "autonomousdatabasebackups.database.oracle.com",
        "autonomousdatabaserestores.database.oracle.com",
        "autonomousdatabaserestores.database.oracle.com",
        "autonomousdatabases.database.oracle.com",
        "autonomousdatabases.database.oracle.com",
        "cdbs.database.oracle.com",
        "cdbs.database.oracle.com",
        "databaseobservers.observability.oracle.com",
        "databaseobservers.observability.oracle.com",
        "databaseobservers.observability.oracle.com",
        "dataguardbrokers.database.oracle.com",
        "dataguardbrokers.database.oracle.com",
        "dbcssystems.database.oracle.com",
        "dbcssystems.database.oracle.com",
        "lrests.database.oracle.com",
        "lrpdbs.database.oracle.com",
        "oraclerestdataservices.database.oracle.com",
        "oraclerestdataservices.database.oracle.com",
        "ordssrvs.database.oracle.com",
        "pdbs.database.oracle.com",
        "pdbs.database.oracle.com",
        "shardingdatabases.database.oracle.com",
        "shardingdatabases.database.oracle.com",
        "singleinstancedatabases.database.oracle.com",
        "singleinstancedatabases.database.oracle.com"
      ],
      "required_crds": [],
      "permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps"
              ],
              "verbs": [
                "get",
                "list",
                "watch",
                "create",
                "update",
                "patch",
                "delete"
              ]
            },
            {
              "apiGroups": [
                "coordination.k8s.io"
              ],
              "resources": [
                "leases"
              ],
              "verbs": [
                "get",
                "list",
                "watch",
                "create",
                "update",
                "patch",
                "delete"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps/status"
              ],
              "verbs": [
                "get",
                "update",
                "patch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "events"
              ],
              "verbs": [
                "create",
                "patch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps",
                "containers",
                "deployments",
                "events",
                "namespaces",
                "persistentvolumeclaims",
                "pods",
                "pods/exec",
                "pods/log",
                "replicasets",
                "secrets",
                "services"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps/status",
                "daemonsets/status",
                "deployments/status",
                "services/status",
                "statefulsets/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "persistentvolumes"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "secrets/status"
              ],
              "verbs": [
                "get"
              ]
            },
            {
              "apiGroups": [
                "''"
              ],
              "resources": [
                "statefulsets/finalizers"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "apps"
              ],
              "resources": [
                "configmaps"
              ],
              "verbs": [
                "get",
                "list"
              ]
            },
            {
              "apiGroups": [
                "apps"
              ],
              "resources": [
                "daemonsets",
                "deployments",
                "pods",
                "replicasets",
                "services",
                "statefulsets"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "coordination.k8s.io"
              ],
              "resources": [
                "leases"
              ],
              "verbs": [
                "create",
                "get",
                "list",
                "update"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "autonomouscontainerdatabases",
                "autonomousdatabases",
                "cdbs",
                "dataguardbrokers",
                "dbcssystems",
                "events",
                "lrests",
                "lrpdbs",
                "oraclerestdataservices",
                "ordssrvs",
                "pdbs",
                "shardingdatabases",
                "singleinstancedatabases"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "autonomouscontainerdatabases/status",
                "autonomousdatabasebackups/status",
                "autonomousdatabaserestores/status",
                "cdbs/status",
                "dataguardbrokers/status",
                "dbcssystems/status",
                "lrests/status",
                "lrpdbs/status",
                "oraclerestdataservices/status",
                "ordssrvs/status",
                "pdbs/status",
                "shardingdatabases/status",
                "singleinstancedatabases/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "autonomousdatabasebackups",
                "autonomousdatabaserestores"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "autonomousdatabases/status"
              ],
              "verbs": [
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "cdbs/finalizers",
                "dataguardbrokers/finalizers",
                "lrests/finalizers",
                "oraclerestdataservices/finalizers",
                "ordssrvs/finalizers",
                "singleinstancedatabases/finalizers"
              ],
              "verbs": [
                "update"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "dbcssystems/finalizers",
                "lrpdbs/finalizers",
                "pdbs/finalizers",
                "shardingdatabases/finalizers"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "monitoring.coreos.com"
              ],
              "resources": [
                "servicemonitors"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "observability.oracle.com"
              ],
              "resources": [
                "databaseobservers"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "observability.oracle.com"
              ],
              "resources": [
                "databaseobservers/finalizers"
              ],
              "verbs": [
                "update"
              ]
            },
            {
              "apiGroups": [
                "observability.oracle.com"
              ],
              "resources": [
                "databaseobservers/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "storage.k8s.io"
              ],
              "resources": [
                "storageclasses"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            }
          ],
          "serviceAccountName": "default"
        }
      ],
      "cluster_permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                "authentication.k8s.io"
              ],
              "resources": [
                "tokenreviews"
              ],
              "verbs": [
                "create"
              ]
            },
            {
              "apiGroups": [
                "authorization.k8s.io"
              ],
              "resources": [
                "subjectaccessreviews"
              ],
              "verbs": [
                "create"
              ]
            }
          ],
          "serviceAccountName": "default"
        }
      ],
      "replaces": "oracle-database-operator.v1.1.0",
      "skips": [],
      "min_kube_version": ""
    },
    {
      "name": "cloudnative-pg.v1.27.0",
      "namespace": "kube-node-lease",
      "display_name": "CloudNativePG",
      "version": "1.27.0",
      "phase": "Succeeded",
      "description": "Main features:\n\n- Direct integration with the Kubernetes API server for High Availability,\n  eliminating the need for external tools.\n- Self-healing capabilities, including:\n    - Automated failover by promoting the most aligned replica.\n    - Automatic recreation of failed replicas.\n- Planned switchover of the primary instance by promoting a selected replica.\n- Declarative management of key PostgreSQL configurations, including:\n    - PostgreSQL settings.\n    - Roles, users, and groups.\n    - Databases, extensions, and schemas.\n    - Tablespaces (including temporary tablespaces).\n- Flexible instance definition, supporting any number of instances (minimum 1\n  primary server).\n- Scale-up/down capabilities to dynamically adjust cluster size.\n- Read-Write and Read-Only Services, ensuring applications connect correctly:\n    - *Read-Write Service*: Routes connections to the primary server.\n    - *Read-Only Service*: Distributes connections among replicas for read workloads.\n- Support for quorum-based and priority-based PostgreSQL Synchronous\n  Replication.\n- Replica clusters enabling PostgreSQL distributed topologies across multiple\n  Kubernetes clusters (private, public, hybrid, and multi-cloud).\n- Delayed Replica clusters for point-in-time access to historical data.\n- Persistent volume management, including:\n    - Support for Local Persistent Volumes with PVC templates.\n    - Reuse of Persistent Volumes storage in Pods.\n    - Separate volumes for WAL files and tablespaces.\n- Backup and recovery options, including:\n    - Integration with the [Barman Cloud plugin](https://github.com/cloudnative-pg/plugin-barman-cloud)\n      for continuous online backup via WAL archiving to AWS S3, S3-compatible\n      services, Azure Blob Storage, and Google Cloud Storage, with support for\n      retention policies based on a configurable recovery window.\n    - Backups using volume snapshots (where supported by storage classes).\n    - Full and Point-In-Time recovery from volume snapshots or object stores (via Barman Cloud plugin).\n    - Backup from standby replicas to reduce primary workload impact.\n- Offline and online import of PostgreSQL databases, including major upgrades:\n    - *Offline Import*: Direct restore from existing databases.\n    - *Online Import*: PostgreSQL native logical replication via the `Subscription` resource.\n- Offline In-Place Major Upgrades of PostgreSQL\n- High Availability physical replication slots, including synchronization of\n  user-defined replication slots.\n- Parallel WAL archiving and restore, ensuring high-performance data\n  synchronization in high-write environments.\n- TLS support, including:\n    - Secure connections and client certificate authentication.\n    - Custom TLS certificates (integrated with `cert-manager`).\n- Startup and readiness probes, including replica probes based on desired lag\n  from the primary.\n- Declarative rolling updates for:\n    - PostgreSQL minor versions.\n    - Operator upgrades (in-place or rolling updates).\n- Standard output logging of PostgreSQL error messages in JSON format for\n  easier integration with log aggregation tools.\n- Prometheus-compatible metrics exporter (`metrics` port 9187) for custom\n  monitoring.\n- `cnpg` plugin for `kubectl` to simplify cluster operations.\n- Cluster hibernation for resource efficiency in inactive states.\n- Fencing of PostgreSQL clusters (full cluster or subset) to isolate instances\n  when needed.\n- Connection pooling with PgBouncer for improved database efficiency.\n- OLM (Operator Lifecycle Manager) installation support for streamlined\n  deployments.\n- Multi-arch container images, including Software Bill of Materials (SBOM) and\n  provenance attestations for security compliance.\n",
      "provider": "The CloudNativePG Contributors",
      "install_strategy": "OwnNamespace",
      "creation_timestamp": "2025-09-07T09:12:54Z",
      "labels": {
        "olm.copiedFrom": "operators",
        "olm.managed": "true",
        "operatorframework.io/arch.amd64": "supported"
      },
      "annotations": {
        "alm-examples": "[\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"backup-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      }\n    },\n    \"status\": {\n      \"serverName\": null\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Cluster\",\n    \"metadata\": {\n      \"name\": \"cluster-sample\"\n    },\n    \"spec\": {\n      \"instances\": 3,\n      \"logLevel\": \"info\",\n      \"primaryUpdateStrategy\": \"unsupervised\",\n      \"storage\": {\n        \"size\": \"1Gi\"\n      },\n      \"walStorage\": {\n        \"size\": \"1Gi\"\n      }\n    },\n    \"status\": {\n      \"instances\": 3\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"ClusterImageCatalog\",\n    \"metadata\": {\n      \"name\": \"postgresql\"\n    },\n    \"spec\": {\n      \"images\": [\n        {\n          \"image\": \"ghcr.io/cloudnative-pg/postgresql@sha256:1c97e0d6e94d8b335be7f258eeda2202966df5fde0c934eef4b13c760ec6a891\",\n          \"major\": 15\n        },\n        {\n          \"image\": \"ghcr.io/cloudnative-pg/postgresql@sha256:ee2e3ce7f0ea935c3f4ab245c0b3959c9f1c49816ae02222ceb6bc347f48e43b\",\n          \"major\": 16\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Database\",\n    \"metadata\": {\n      \"name\": \"database-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      },\n      \"name\": \"database-sample\",\n      \"owner\": \"app\"\n    },\n    \"status\": {\n      \"applied\": false\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"ImageCatalog\",\n    \"metadata\": {\n      \"name\": \"postgresql\",\n      \"namespace\": \"default\"\n    },\n    \"spec\": {\n      \"images\": [\n        {\n          \"image\": \"ghcr.io/cloudnative-pg/postgresql@sha256:1c97e0d6e94d8b335be7f258eeda2202966df5fde0c934eef4b13c760ec6a891\",\n          \"major\": 15\n        },\n        {\n          \"image\": \"ghcr.io/cloudnative-pg/postgresql@sha256:ee2e3ce7f0ea935c3f4ab245c0b3959c9f1c49816ae02222ceb6bc347f48e43b\",\n          \"major\": 16\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Pooler\",\n    \"metadata\": {\n      \"name\": \"pooler-sample-rw\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      },\n      \"instances\": 1,\n      \"pgbouncer\": {\n        \"poolMode\": \"session\"\n      },\n      \"type\": \"rw\"\n    },\n    \"status\": {\n      \"instances\": 1\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Publication\",\n    \"metadata\": {\n      \"name\": \"publication-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      },\n      \"dbname\": \"app\",\n      \"name\": \"pub\",\n      \"target\": {\n        \"allTables\": true\n      }\n    },\n    \"status\": {\n      \"applied\": false\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"ScheduledBackup\",\n    \"metadata\": {\n      \"name\": \"scheduledbackup-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      },\n      \"schedule\": \"0 0 0 * * *\"\n    },\n    \"status\": {\n      \"lastCheckTime\": null\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Subscription\",\n    \"metadata\": {\n      \"name\": \"subscription-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample-dest\"\n      },\n      \"dbname\": \"app\",\n      \"externalClusterName\": \"cluster-sample\",\n      \"name\": \"sub\",\n      \"publicationName\": \"pub\"\n    },\n    \"status\": {\n      \"applied\": false\n    }\n  }\n]",
        "capabilities": "Auto Pilot",
        "categories": "Database",
        "certified": "true",
        "containerImage": "ghcr.io/cloudnative-pg/cloudnative-pg@sha256:53995e9d6a7760c77d77e5298f78b49029427494f4dd933d5fa7a74f7af3bb44",
        "createdAt": "2025-08-12T14:08:35Z",
        "description": "CloudNativePG is an open source operator designed to manage highly available PostgreSQL databases with a primary/standby architecture on any supported Kubernetes cluster.",
        "features.operators.openshift.io/disconnected": "true",
        "features.operators.openshift.io/fips-compliant": "false",
        "features.operators.openshift.io/proxy-aware": "false",
        "features.operators.openshift.io/tls-profiles": "false",
        "features.operators.openshift.io/token-auth-aws": "false",
        "features.operators.openshift.io/token-auth-azure": "false",
        "features.operators.openshift.io/token-auth-gcp": "false",
        "olm.operatorGroup": "global-operators",
        "olm.operatorNamespace": "operators",
        "operatorframework.io/properties": "{\"properties\":[{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Backup\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Cluster\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"ClusterImageCatalog\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Database\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"FailoverQuorum\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"ImageCatalog\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Pooler\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Publication\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"ScheduledBackup\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Subscription\",\"version\":\"v1\"}},{\"type\":\"olm.package\",\"value\":{\"packageName\":\"cloudnative-pg\",\"version\":\"1.27.0\"}}]}",
        "operators.operatorframework.io/builder": "operator-sdk-v1.41.1",
        "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v4",
        "repository": "https://github.com/cloudnative-pg/cloudnative-pg",
        "support": "Community"
      },
      "owned_crds": [
        "backups.postgresql.cnpg.io",
        "clusterimagecatalogs.postgresql.cnpg.io",
        "clusters.postgresql.cnpg.io",
        "databases.postgresql.cnpg.io",
        "failoverquorums.postgresql.cnpg.io",
        "imagecatalogs.postgresql.cnpg.io",
        "poolers.postgresql.cnpg.io",
        "publications.postgresql.cnpg.io",
        "scheduledbackups.postgresql.cnpg.io",
        "subscriptions.postgresql.cnpg.io"
      ],
      "required_crds": [],
      "permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps",
                "secrets",
                "services"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps/status",
                "secrets/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "events"
              ],
              "verbs": [
                "create",
                "patch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "nodes"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "persistentvolumeclaims",
                "pods",
                "pods/exec"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "pods/status"
              ],
              "verbs": [
                "get"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "serviceaccounts"
              ],
              "verbs": [
                "create",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "admissionregistration.k8s.io"
              ],
              "resources": [
                "mutatingwebhookconfigurations",
                "validatingwebhookconfigurations"
              ],
              "verbs": [
                "get",
                "patch"
              ]
            },
            {
              "apiGroups": [
                "apps"
              ],
              "resources": [
                "deployments"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "batch"
              ],
              "resources": [
                "jobs"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "coordination.k8s.io"
              ],
              "resources": [
                "leases"
              ],
              "verbs": [
                "create",
                "get",
                "update"
              ]
            },
            {
              "apiGroups": [
                "monitoring.coreos.com"
              ],
              "resources": [
                "podmonitors"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "policy"
              ],
              "resources": [
                "poddisruptionbudgets"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "backups",
                "clusters",
                "databases",
                "poolers",
                "publications",
                "scheduledbackups",
                "subscriptions"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "backups/status",
                "databases/status",
                "publications/status",
                "scheduledbackups/status",
                "subscriptions/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "clusterimagecatalogs",
                "imagecatalogs"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "clusters/finalizers",
                "poolers/finalizers"
              ],
              "verbs": [
                "update"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "clusters/status",
                "failoverquorums/status",
                "poolers/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "failoverquorums"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "rbac.authorization.k8s.io"
              ],
              "resources": [
                "rolebindings",
                "roles"
              ],
              "verbs": [
                "create",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "snapshot.storage.k8s.io"
              ],
              "resources": [
                "volumesnapshots"
              ],
              "verbs": [
                "create",
                "get",
                "list",
                "patch",
                "watch"
              ]
            }
          ],
          "serviceAccountName": "cnpg-manager"
        }
      ],
      "cluster_permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "nodes"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "clusterimagecatalogs"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            }
          ],
          "serviceAccountName": "cnpg-manager"
        }
      ],
      "replaces": "cloudnative-pg.v1.26.1",
      "skips": [],
      "min_kube_version": "1.23.0"
    },
    {
      "name": "mariadb-operator.v25.8.3",
      "namespace": "kube-node-lease",
      "display_name": "MariaDB Operator",
      "version": "25.8.3",
      "phase": "Succeeded",
      "description": "Install [`mariadb-operator`](https://github.com/mariadb-operator/mariadb-operator) via [OLM](https://olm.operatorframework.io/) using the [helm chart](https://artifacthub.io/packages/helm/mariadb-operator/mariadb-operator).\n\nThis helm operator provides provides a 1:1 mapping between the official helm chart and the [`MariadbOperator`](https://github.com/mariadb-operator/mariadb-operator-helm/blob/main/config/samples/helm_v1alpha1_mariadboperator.yaml) CRD, allowing to install [`mariadb-operator`](https://github.com/mariadb-operator/mariadb-operator) via OLM without having to do any change in the helm chart.\n\nNormally, you would install [`mariadb-operator`](https://github.com/mariadb-operator/mariadb-operator) providing this `values.yaml` to the helm chart:\n```yaml\nimage:\n  repository: ghcr.io/mariadb-operator/mariadb-operator\n  pullPolicy: IfNotPresent\nlogLevel: INFO\nha:\n  enabled: true\nmetrics:\n  enabled: true\n  serviceMonitor:\n    enabled: true\nwebhook:\n  cert:\n    certManager:\n      enabled: true\n```\n\nThis helm chart installation is abstracted in the [`MariadbOperator`](https://github.com/mariadb-operator/mariadb-operator-helm/blob/main/config/samples/helm_v1alpha1_mariadboperator.yaml) CRD, which will be reconciled by the helm operator:\n```yaml\napiVersion: helm.k8s.mariadb.com/v1alpha1\nkind: MariadbOperator\nmetadata:\n  name: mariadb-operator\nspec:\n  image:\n    repository: ghcr.io/mariadb-operator/mariadb-operator\n    pullPolicy: IfNotPresent\n  logLevel: INFO\n  ha:\n    enabled: true\n  metrics:\n    enabled: true\n    serviceMonitor:\n      enabled: true\n  webhook:\n    cert:\n      certManager:\n        enabled: true\n```\n\nOnce you have installed the operator, you will able to install a [`MariaDB`](https://github.com/mariadb-operator/mariadb-operator/blob/main/examples/manifests/mariadb_v1alpha1_mariadb.yaml) instance. Refer to the main [`mariadb-operator`](https://github.com/mariadb-operator/mariadb-operator) documentation for getting started with the rest of CRDs.\n\n## Documentation\n* [mariadb-operator](https://github.com/mariadb-operator/mariadb-operator/blob/main/README.md)\n* [mariadb-operator-helm](https://github.com/mariadb-operator/mariadb-operator-helm/blob/main/README.md)\n\n## Releases\nThis operator is automatically published in the following repositories whenever a new version of the [helm chart](https://artifacthub.io/packages/helm/mariadb-operator/mariadb-operator) is released:\n- [k8s-operatorhub/community-operators](https://github.com/k8s-operatorhub/community-operators)\n- [redhat-openshift-ecosystem/community-operators-prod](https://github.com/redhat-openshift-ecosystem/community-operators-prod)\n\n## Roadmap\nTake a look at our [roadmap](https://github.com/mariadb-operator/mariadb-operator/blob/main/ROADMAP.md) and feel free to open an issue to suggest new features.\n\n## Contributing\nWe welcome and encourage contributions to this project! Please check our [contributing](https://github.com/mariadb-operator/mariadb-operator/blob/main/CONTRIBUTING.md) and [development](https://github.com/mariadb-operator/mariadb-operator/blob/main/docs/DEVELOPMENT.md) guides. PRs welcome!\n\n## Get in touch\nJoin us on Slack: **[MariaDB Community Slack](https://r.mariadb.com/join-community-slack)**.\n",
      "provider": "mariadb-operator",
      "install_strategy": "OwnNamespace",
      "creation_timestamp": "2025-09-07T09:15:57Z",
      "labels": {
        "olm.copiedFrom": "operators",
        "olm.managed": "true"
      },
      "annotations": {
        "alm-examples": "[\n  {\n    \"apiVersion\": \"helm.mariadb.mmontes.io/v1alpha1\",\n    \"kind\": \"MariadbOperator\",\n    \"metadata\": {\n      \"name\": \"mariadb-operator\"\n    },\n    \"spec\": {\n      \"affinity\": {},\n      \"certController\": {\n        \"affinity\": {},\n        \"caValidity\": \"35064h\",\n        \"certValidity\": \"8766h\",\n        \"enabled\": true,\n        \"extrArgs\": [],\n        \"extraVolumeMounts\": [],\n        \"extraVolumes\": [],\n        \"ha\": {\n          \"enabled\": false,\n          \"replicas\": 3\n        },\n        \"image\": {\n          \"pullPolicy\": \"IfNotPresent\",\n          \"repository\": \"ghcr.io/mariadb-operator/mariadb-operator\",\n          \"tag\": \"\"\n        },\n        \"imagePullSecrets\": [],\n        \"lookaheadValidity\": \"2160h\",\n        \"nodeSelector\": {},\n        \"podAnnotations\": {},\n        \"podSecurityContext\": {},\n        \"requeueDuration\": \"5m\",\n        \"resources\": {},\n        \"securityContext\": {},\n        \"serviceAccount\": {\n          \"annotations\": {},\n          \"automount\": true,\n          \"enabled\": true,\n          \"extraLabels\": {},\n          \"name\": \"\"\n        },\n        \"serviceMonitor\": {\n          \"additionalLabels\": {},\n          \"enabled\": true,\n          \"interval\": \"30s\",\n          \"scrapeTimeout\": \"25s\"\n        },\n        \"tolerations\": []\n      },\n      \"clusterName\": \"cluster.local\",\n      \"extrArgs\": [],\n      \"extraVolumeMounts\": [],\n      \"extraVolumes\": [],\n      \"fullnameOverride\": \"\",\n      \"ha\": {\n        \"enabled\": false,\n        \"replicas\": 3\n      },\n      \"image\": {\n        \"pullPolicy\": \"IfNotPresent\",\n        \"repository\": \"ghcr.io/mariadb-operator/mariadb-operator\",\n        \"tag\": \"\"\n      },\n      \"imagePullSecrets\": [],\n      \"logLevel\": \"INFO\",\n      \"metrics\": {\n        \"enabled\": false,\n        \"serviceMonitor\": {\n          \"additionalLabels\": {},\n          \"enabled\": true,\n          \"interval\": \"30s\",\n          \"scrapeTimeout\": \"25s\"\n        }\n      },\n      \"nameOverride\": \"\",\n      \"nodeSelector\": {},\n      \"podAnnotations\": {},\n      \"podSecurityContext\": {},\n      \"rbac\": {\n        \"enabled\": true\n      },\n      \"resources\": {},\n      \"securityContext\": {},\n      \"serviceAccount\": {\n        \"annotations\": {},\n        \"automount\": true,\n        \"enabled\": true,\n        \"extraLabels\": {},\n        \"name\": \"\"\n      },\n      \"tolerations\": [],\n      \"webhook\": {\n        \"affinity\": {},\n        \"annotations\": {},\n        \"cert\": {\n          \"caPath\": \"/tmp/k8s-webhook-server/certificate-authority\",\n          \"certManager\": {\n            \"duration\": \"\",\n            \"enabled\": false,\n            \"issuerRef\": {},\n            \"renewBefore\": \"\"\n          },\n          \"path\": \"/tmp/k8s-webhook-server/serving-certs\",\n          \"secretAnnotations\": {}\n        },\n        \"extrArgs\": [],\n        \"extraVolumeMounts\": [],\n        \"extraVolumes\": [],\n        \"ha\": {\n          \"enabled\": false,\n          \"replicas\": 3\n        },\n        \"hostNetwork\": false,\n        \"image\": {\n          \"pullPolicy\": \"IfNotPresent\",\n          \"repository\": \"ghcr.io/mariadb-operator/mariadb-operator\",\n          \"tag\": \"\"\n        },\n        \"imagePullSecrets\": [],\n        \"nodeSelector\": {},\n        \"podAnnotations\": {},\n        \"podSecurityContext\": {},\n        \"port\": 10250,\n        \"resources\": {},\n        \"securityContext\": {},\n        \"serviceAccount\": {\n          \"annotations\": {},\n          \"automount\": true,\n          \"enabled\": true,\n          \"extraLabels\": {},\n          \"name\": \"\"\n        },\n        \"serviceMonitor\": {\n          \"additionalLabels\": {},\n          \"enabled\": true,\n          \"interval\": \"30s\",\n          \"scrapeTimeout\": \"25s\"\n        },\n        \"tolerations\": []\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"backup\"\n    },\n    \"spec\": {\n      \"args\": [\n        \"--single-transaction\",\n        \"--all-databases\"\n      ],\n      \"logLevel\": \"info\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"maxRetention\": \"720h\",\n      \"resources\": {\n        \"limits\": {\n          \"cpu\": \"300m\",\n          \"memory\": \"512Mi\"\n        },\n        \"requests\": {\n          \"cpu\": \"100m\",\n          \"memory\": \"128Mi\"\n        }\n      },\n      \"schedule\": {\n        \"cron\": \"*/1 * * * *\",\n        \"suspend\": false\n      },\n      \"storage\": {\n        \"s3\": {\n          \"accessKeyIdSecretKeyRef\": {\n            \"key\": \"access-key-id\",\n            \"name\": \"minio\"\n          },\n          \"bucket\": \"backups\",\n          \"endpoint\": \"minio.minio.svc.cluster.local:9000\",\n          \"prefix\": \"mariadb\",\n          \"secretAccessKeySecretKeyRef\": {\n            \"key\": \"secret-access-key\",\n            \"name\": \"minio\"\n          },\n          \"tls\": {\n            \"caSecretKeyRef\": {\n              \"key\": \"ca.crt\",\n              \"name\": \"minio-ca\"\n            },\n            \"enabled\": true\n          }\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Connection\",\n    \"metadata\": {\n      \"name\": \"connection\"\n    },\n    \"spec\": {\n      \"database\": \"mariadb\",\n      \"healthCheck\": {\n        \"interval\": \"10s\",\n        \"retryInterval\": \"3s\"\n      },\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"params\": {\n        \"parseTime\": \"true\"\n      },\n      \"passwordSecretKeyRef\": {\n        \"key\": \"password\",\n        \"name\": \"mariadb\"\n      },\n      \"secretName\": \"connection\",\n      \"secretTemplate\": {\n        \"annotations\": {\n          \"k8s.mariadb.com/connection\": \"sample\"\n        },\n        \"databaseKey\": \"database\",\n        \"hostKey\": \"host\",\n        \"key\": \"dsn\",\n        \"labels\": {\n          \"k8s.mariadb.com/connection\": \"sample\"\n        },\n        \"passwordKey\": \"password\",\n        \"portKey\": \"port\",\n        \"usernameKey\": \"username\"\n      },\n      \"serviceName\": \"mariadb\",\n      \"username\": \"mariadb\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Database\",\n    \"metadata\": {\n      \"name\": \"data-test\"\n    },\n    \"spec\": {\n      \"characterSet\": \"utf8\",\n      \"collate\": \"utf8_general_ci\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"retryInterval\": \"5s\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Grant\",\n    \"metadata\": {\n      \"name\": \"grant\"\n    },\n    \"spec\": {\n      \"database\": \"*\",\n      \"grantOption\": true,\n      \"host\": \"%\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"privileges\": [\n        \"SELECT\",\n        \"INSERT\",\n        \"UPDATE\"\n      ],\n      \"requeueInterval\": \"30s\",\n      \"retryInterval\": \"5s\",\n      \"table\": \"*\",\n      \"username\": \"user\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"MariaDB\",\n    \"metadata\": {\n      \"name\": \"mariadb\"\n    },\n    \"spec\": {\n      \"connection\": {\n        \"secretName\": \"mariadb-conn\",\n        \"secretTemplate\": {\n          \"key\": \"dsn\"\n        }\n      },\n      \"database\": \"mariadb\",\n      \"galera\": {\n        \"enabled\": true\n      },\n      \"metrics\": {\n        \"enabled\": true,\n        \"passwordSecretKeyRef\": {\n          \"generate\": true,\n          \"key\": \"password\",\n          \"name\": \"mariadb-metrics\"\n        }\n      },\n      \"myCnf\": \"[mariadb]\\nbind-address=*\\ndefault_storage_engine=InnoDB\\nbinlog_format=row\\ninnodb_autoinc_lock_mode=2\\ninnodb_buffer_pool_size=1024M\\nmax_allowed_packet=256M\\n\",\n      \"passwordSecretKeyRef\": {\n        \"generate\": true,\n        \"key\": \"password\",\n        \"name\": \"mariadb-password\"\n      },\n      \"primaryConnection\": {\n        \"secretName\": \"mariadb-conn-primary\",\n        \"secretTemplate\": {\n          \"key\": \"dsn\"\n        }\n      },\n      \"primaryService\": {\n        \"type\": \"ClusterIP\"\n      },\n      \"replicas\": 3,\n      \"rootPasswordSecretKeyRef\": {\n        \"generate\": true,\n        \"key\": \"password\",\n        \"name\": \"mariadb-root\"\n      },\n      \"secondaryConnection\": {\n        \"secretName\": \"mariadb-conn-secondary\",\n        \"secretTemplate\": {\n          \"key\": \"dsn\"\n        }\n      },\n      \"secondaryService\": {\n        \"type\": \"ClusterIP\"\n      },\n      \"service\": {\n        \"type\": \"ClusterIP\"\n      },\n      \"storage\": {\n        \"size\": \"1Gi\"\n      },\n      \"updateStrategy\": {\n        \"type\": \"ReplicasFirstPrimaryLast\"\n      },\n      \"username\": \"mariadb\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"MaxScale\",\n    \"metadata\": {\n      \"name\": \"maxscale-galera\"\n    },\n    \"spec\": {\n      \"admin\": {\n        \"guiEnabled\": true,\n        \"port\": 8989\n      },\n      \"auth\": {\n        \"generate\": true\n      },\n      \"config\": {\n        \"sync\": {\n          \"database\": \"mysql\",\n          \"interval\": \"5s\",\n          \"timeout\": \"10s\"\n        }\n      },\n      \"connection\": {\n        \"port\": 3306,\n        \"secretName\": \"mxs-galera-conn\"\n      },\n      \"guiKubernetesService\": {\n        \"metadata\": {\n          \"annotations\": {\n            \"metallb.universe.tf/loadBalancerIPs\": \"172.18.0.231\"\n          }\n        },\n        \"type\": \"LoadBalancer\"\n      },\n      \"kubernetesService\": {\n        \"annotations\": {\n          \"metallb.universe.tf/loadBalancerIPs\": \"172.18.0.224\"\n        },\n        \"type\": \"LoadBalancer\"\n      },\n      \"mariaDbRef\": {\n        \"name\": \"mariadb-galera\"\n      },\n      \"monitor\": {\n        \"cooperativeMonitoring\": \"majority_of_all\",\n        \"interval\": \"2s\",\n        \"params\": {\n          \"available_when_donor\": \"false\",\n          \"disable_master_failback\": \"false\",\n          \"disable_master_role_setting\": \"false\"\n        }\n      },\n      \"replicas\": 3,\n      \"requeueInterval\": \"10s\",\n      \"services\": [\n        {\n          \"listener\": {\n            \"params\": {\n              \"connection_metadata\": \"tx_isolation=auto\"\n            },\n            \"port\": 3306,\n            \"protocol\": \"MariaDBProtocol\"\n          },\n          \"name\": \"rw-router\",\n          \"params\": {\n            \"master_accept_reads\": \"true\",\n            \"max_replication_lag\": \"3s\",\n            \"max_slave_connections\": \"255\",\n            \"transaction_replay\": \"true\",\n            \"transaction_replay_attempts\": \"10\",\n            \"transaction_replay_timeout\": \"5s\"\n          },\n          \"router\": \"readwritesplit\"\n        },\n        {\n          \"listener\": {\n            \"port\": 3307\n          },\n          \"name\": \"rconn-master-router\",\n          \"params\": {\n            \"master_accept_reads\": \"true\",\n            \"max_replication_lag\": \"3s\",\n            \"router_options\": \"master\"\n          },\n          \"router\": \"readconnroute\"\n        },\n        {\n          \"listener\": {\n            \"port\": 3308\n          },\n          \"name\": \"rconn-slave-router\",\n          \"params\": {\n            \"max_replication_lag\": \"3s\",\n            \"router_options\": \"slave\"\n          },\n          \"router\": \"readconnroute\"\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"PhysicalBackup\",\n    \"metadata\": {\n      \"name\": \"physicalbackup\"\n    },\n    \"spec\": {\n      \"compression\": \"bzip2\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"maxRetention\": \"720h\",\n      \"podAffinity\": true,\n      \"resources\": {\n        \"limits\": {\n          \"cpu\": \"300m\",\n          \"memory\": \"512Mi\"\n        },\n        \"requests\": {\n          \"cpu\": \"100m\",\n          \"memory\": \"128Mi\"\n        }\n      },\n      \"schedule\": {\n        \"cron\": \"*/1 * * * *\",\n        \"immediate\": true,\n        \"suspend\": false\n      },\n      \"serviceAccountName\": \"backup\",\n      \"stagingStorage\": {\n        \"persistentVolumeClaim\": {\n          \"accessModes\": [\n            \"ReadWriteOnce\"\n          ],\n          \"resources\": {\n            \"requests\": {\n              \"storage\": \"1Gi\"\n            }\n          }\n        }\n      },\n      \"storage\": {\n        \"s3\": {\n          \"accessKeyIdSecretKeyRef\": {\n            \"key\": \"access-key-id\",\n            \"name\": \"minio\"\n          },\n          \"bucket\": \"physicalbackups\",\n          \"endpoint\": \"minio.minio.svc.cluster.local:9000\",\n          \"prefix\": \"mariadb\",\n          \"region\": \"us-east-1\",\n          \"secretAccessKeySecretKeyRef\": {\n            \"key\": \"secret-access-key\",\n            \"name\": \"minio\"\n          },\n          \"tls\": {\n            \"caSecretKeyRef\": {\n              \"key\": \"ca.crt\",\n              \"name\": \"minio-ca\"\n            },\n            \"enabled\": true\n          }\n        }\n      },\n      \"timeout\": \"1h\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Restore\",\n    \"metadata\": {\n      \"name\": \"restore\"\n    },\n    \"spec\": {\n      \"backupRef\": {\n        \"name\": \"backup\"\n      },\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"resources\": {\n        \"limits\": {\n          \"cpu\": \"300m\",\n          \"memory\": \"512Mi\"\n        },\n        \"requests\": {\n          \"cpu\": \"100m\",\n          \"memory\": \"128Mi\"\n        }\n      },\n      \"targetRecoveryTime\": \"2023-12-19T09:00:00Z\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"SqlJob\",\n    \"metadata\": {\n      \"name\": \"03-stars\"\n    },\n    \"spec\": {\n      \"database\": \"mariadb\",\n      \"dependsOn\": [\n        {\n          \"name\": \"01-users\"\n        },\n        {\n          \"name\": \"02-repos\"\n        }\n      ],\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"passwordSecretKeyRef\": {\n        \"key\": \"password\",\n        \"name\": \"mariadb\"\n      },\n      \"schedule\": {\n        \"cron\": \"*/1 * * * *\",\n        \"suspend\": false\n      },\n      \"sql\": \"CREATE TABLE IF NOT EXISTS stars (\\n  id bigint PRIMARY KEY AUTO_INCREMENT,\\n  user_id bigint NOT NULL,\\n  repo_id bigint NOT NULL,\\n  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,\\n  FOREIGN KEY (repo_id) REFERENCES repos(id) ON DELETE CASCADE,\\n  UNIQUE KEY (user_id, repo_id)\\n);\\nINSERT INTO stars(user_id, repo_id) \\n  VALUES((SELECT id FROM users ORDER BY RAND() LIMIT 1), (SELECT id FROM repos ORDER BY RAND() LIMIT 1))\\n  ON DUPLICATE KEY UPDATE id=id;\\nDELETE FROM stars WHERE id = (SELECT id FROM stars ORDER BY RAND() LIMIT 1);\\nSELECT r.name AS repo, COUNT(*) AS stars\\nFROM stars s\\nJOIN repos r\\nON s.repo_id = r.id\\nGROUP BY r.id\\nORDER BY stars DESC;\",\n      \"username\": \"mariadb\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"User\",\n    \"metadata\": {\n      \"name\": \"user\"\n    },\n    \"spec\": {\n      \"host\": \"%\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"maxUserConnections\": 20,\n      \"passwordSecretKeyRef\": {\n        \"key\": \"password\",\n        \"name\": \"mariadb\"\n      },\n      \"retryInterval\": \"5s\"\n    }\n  }\n]",
        "capabilities": "Deep Insights",
        "categories": "Database",
        "containerImage": "ghcr.io/mariadb-operator/mariadb-operator-helm:25.8.3",
        "createdAt": "2025-08-08T12:14:12Z",
        "description": "Run and operate MariaDB in a cloud native way",
        "features.operators.openshift.io/disconnected": "false",
        "features.operators.openshift.io/fips-compliant": "false",
        "features.operators.openshift.io/proxy-aware": "false",
        "features.operators.openshift.io/tls-profiles": "false",
        "features.operators.openshift.io/token-auth-aws": "false",
        "features.operators.openshift.io/token-auth-azure": "false",
        "features.operators.openshift.io/token-auth-gcp": "false",
        "olm.operatorGroup": "global-operators",
        "olm.operatorNamespace": "operators",
        "operatorframework.io/properties": "{\"properties\":[{\"type\":\"olm.gvk\",\"value\":{\"group\":\"helm.mariadb.mmontes.io\",\"kind\":\"MariadbOperator\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Backup\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Connection\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Database\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Grant\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"MariaDB\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"MaxScale\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"PhysicalBackup\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Restore\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"SqlJob\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"User\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.package\",\"value\":{\"packageName\":\"mariadb-operator\",\"version\":\"25.8.3\"}}]}",
        "operators.operatorframework.io/builder": "operator-sdk-v1.26.0",
        "operators.operatorframework.io/project_layout": "helm.sdk.operatorframework.io/v1",
        "repository": "https://github.com/mariadb-operator/mariadb-operator",
        "support": "mariadb-operator"
      },
      "owned_crds": [
        "backups.k8s.mariadb.com",
        "connections.k8s.mariadb.com",
        "databases.k8s.mariadb.com",
        "grants.k8s.mariadb.com",
        "mariadboperators.helm.mariadb.mmontes.io",
        "mariadbs.k8s.mariadb.com",
        "maxscales.k8s.mariadb.com",
        "physicalbackups.k8s.mariadb.com",
        "restores.k8s.mariadb.com",
        "sqljobs.k8s.mariadb.com",
        "users.k8s.mariadb.com"
      ],
      "required_crds": [],
      "permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps"
              ],
              "verbs": [
                "get",
                "list",
                "watch",
                "create",
                "update",
                "patch",
                "delete"
              ]
            },
            {
              "apiGroups": [
                "coordination.k8s.io"
              ],
              "resources": [
                "leases"
              ],
              "verbs": [
                "get",
                "list",
                "watch",
                "create",
                "update",
                "patch",
                "delete"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "events"
              ],
              "verbs": [
                "create",
                "patch"
              ]
            }
          ],
          "serviceAccountName": "mariadb-operator-helm-controller-manager"
        }
      ],
      "cluster_permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "namespaces"
              ],
              "verbs": [
                "get"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "secrets"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "events"
              ],
              "verbs": [
                "create"
              ]
            },
            {
              "apiGroups": [
                "helm.mariadb.mmontes.io"
              ],
              "resources": [
                "mariadboperators",
                "mariadboperators/status",
                "mariadboperators/finalizers"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "rbac.authorization.k8s.io"
              ],
              "resources": [
                "clusterrolebindings",
                "clusterroles"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "admissionregistration.k8s.io"
              ],
              "resources": [
                "validatingwebhookconfigurations",
                "mutatingwebhookconfigurations"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "rbac.authorization.k8s.io"
              ],
              "resources": [
                "rolebindings",
                "roles"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "apps"
              ],
              "resources": [
                "deployments"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "serviceaccounts",
                "services"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "apiextensions.k8s.io"
              ],
              "resources": [
                "customresourcedefinitions"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "cert-manager.io"
              ],
              "resources": [
                "certificates",
                "issuers"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "monitoring.coreos.com"
              ],
              "resources": [
                "servicemonitors"
              ],
              "verbs": [
                "*"
              ]
            }
          ],
          "serviceAccountName": "mariadb-operator-helm-controller-manager"
        }
      ],
      "replaces": "mariadb-operator.v25.8.2",
      "skips": [],
      "min_kube_version": "1.16.0"
    },
    {
      "name": "oracle-database-operator.v1.2.0",
      "namespace": "kube-node-lease",
      "display_name": "Oracle Database Operator",
      "version": "1.2.0",
      "phase": "Installing",
      "description": "As part of Oracle's resolution to make Oracle Database Kubernetes native (that is, observable and operable by Kubernetes), Oracle released Oracle Database Operator for Kubernetes (OraOperator or the operator). OraOperator extends the Kubernetes API with custom resources and controllers for automating Oracle Database lifecycle management.\nIn this v1.2.0 production release, OraOperator supports the following database configurations and infrastructure:\n##Supported Database Configurations:\n* Oracle Cloud Infrastructure (OCI) Databases\n  * Oracle Autonomous Database Serverless (ADB-S)\n  * Oracle Autonomous Database on Dedicated on (ADB-D)\n  * Oracle Base Database Cloud Service (Base DB)\n* Containerized Database deployments on Kubernetes\n  * Oracle Kubernetes Engine (OKE) and Oracle Cloud Native Environments (OCNE)\n    * Single Instance databases (SIDB)\n    * Globally Distributed Databases (Shared)\n    * Oracle Data Guard\n    * True Cache (Preview release)\n    * Oracle Database Observability\n* On-Premises Databases\n  * Oracle Multitenant Databases (CDB/PDBs management)\n  * ORDS Services\n\nRefer to full feature list and capabilities: [https://github.com/oracle/oracle-database-operator/blob/main/README.md](https://github.com/oracle/oracle-database-operator/blob/main/README.md)\n",
      "provider": "Oracle",
      "install_strategy": "OwnNamespace",
      "creation_timestamp": "2025-09-07T09:13:37Z",
      "labels": {
        "olm.copiedFrom": "operators",
        "olm.managed": "true"
      },
      "annotations": {
        "alm-examples": "[\n  {\n    \"apiVersion\": \"database.oracle.com/v1alpha1\",\n    \"kind\": \"CDB\",\n    \"metadata\": {\n      \"name\": \"cdb-dev\",\n      \"namespace\": \"oracle-database-operator-system\"\n    },\n    \"spec\": {\n      \"cdbAdminPwd\": {\n        \"secret\": {\n          \"key\": \"cdbadmin_pwd\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"cdbAdminUser\": {\n        \"secret\": {\n          \"key\": \"cdbadmin_user\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"cdbName\": \"devcdb\",\n      \"dbPort\": 1521,\n      \"dbServer\": \"172.17.0.4\",\n      \"ordsImage\": \"\",\n      \"ordsImagePullPolicy\": \"Always\",\n      \"ordsPwd\": {\n        \"secret\": {\n          \"key\": \"ords_pwd\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"replicas\": 1,\n      \"serviceName\": \"devdb.example.com\",\n      \"sysAdminPwd\": {\n        \"secret\": {\n          \"key\": \"sysadmin_pwd\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"webServerPwd\": {\n        \"secret\": {\n          \"key\": \"webserver_pwd\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"webServerUser\": {\n        \"secret\": {\n          \"key\": \"webserver_user\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v1alpha1\",\n    \"kind\": \"DbcsSystem\",\n    \"metadata\": {\n      \"name\": \"dbcssystem-sample\"\n    },\n    \"spec\": {\n      \"foo\": \"bar\"\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v1alpha1\",\n    \"kind\": \"PDB\",\n    \"metadata\": {\n      \"labels\": {\n        \"cdb\": \"cdb-dev\"\n      },\n      \"name\": \"pdb1\",\n      \"namespace\": \"oracle-database-operator-system\"\n    },\n    \"spec\": {\n      \"action\": \"Create\",\n      \"adminName\": {\n        \"secret\": {\n          \"key\": \"sysadmin_user\",\n          \"secretName\": \"pdb1-secret\"\n        }\n      },\n      \"adminPwd\": {\n        \"secret\": {\n          \"key\": \"sysadmin_pwd\",\n          \"secretName\": \"pdb1-secret\"\n        }\n      },\n      \"cdbName\": \"devcdb\",\n      \"cdbResName\": \"cdb-dev\",\n      \"fileNameConversions\": \"NONE\",\n      \"pdbName\": \"pdbdev\",\n      \"tempSize\": \"100M\",\n      \"totalSize\": \"1G\"\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v4\",\n    \"kind\": \"AutonomousContainerDatabase\",\n    \"metadata\": {\n      \"name\": \"autonomouscontainerdatabase-sample\"\n    },\n    \"spec\": {\n      \"autonomousExadataVMClusterOCID\": \"ocid1.autonomousexainfrastructure...\",\n      \"compartmentOCID\": \"ocid1.compartment... OR ocid1.tenancy...\",\n      \"displayName\": \"newACD\",\n      \"ociConfig\": {\n        \"configMapName\": \"oci-cred\",\n        \"secretName\": \"oci-privatekey\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v4\",\n    \"kind\": \"AutonomousDatabase\",\n    \"metadata\": {\n      \"name\": \"autonomousdatabase-sample\"\n    },\n    \"spec\": {\n      \"action\": \"Create\",\n      \"details\": {\n        \"adminPassword\": {\n          \"k8sSecret\": {\n            \"name\": \"admin-password\"\n          }\n        },\n        \"compartmentId\": \"ocid1.compartment... OR ocid1.tenancy...\",\n        \"cpuCoreCount\": 1,\n        \"dataStorageSizeInTBs\": 1,\n        \"dbName\": \"NewADB\",\n        \"displayName\": \"NewADB\"\n      },\n      \"ociConfig\": {\n        \"configMapName\": \"oci-cred\",\n        \"secretName\": \"oci-privatekey\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v4\",\n    \"kind\": \"AutonomousDatabaseBackup\",\n    \"metadata\": {\n      \"name\": \"autonomousdatabasebackup-sample\"\n    },\n    \"spec\": {\n      \"displayName\": \"autonomousdatabasebackup-sample\",\n      \"isLongTermBackup\": true,\n      \"ociConfig\": {\n        \"configMapName\": \"oci-cred\",\n        \"secretName\": \"oci-privatekey\"\n      },\n      \"retentionPeriodInDays\": 90,\n      \"target\": {\n        \"k8sADB\": {\n          \"name\": \"autonomousdatabase-sample\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v4\",\n    \"kind\": \"SingleInstanceDatabase\",\n    \"metadata\": {\n      \"name\": \"sidb-sample\",\n      \"namespace\": \"default\"\n    },\n    \"spec\": {\n      \"adminPassword\": {\n        \"secretName\": \"db-admin-secret\"\n      },\n      \"archiveLog\": true,\n      \"charset\": \"AL32UTF8\",\n      \"edition\": \"enterprise\",\n      \"image\": {\n        \"pullFrom\": \"container-registry.oracle.com/database/enterprise_ru:19\",\n        \"pullSecrets\": \"oracle-container-registry-secret\"\n      },\n      \"pdbName\": \"orclpdb1\",\n      \"persistence\": {\n        \"accessMode\": \"ReadWriteOnce\",\n        \"size\": \"100Gi\",\n        \"storageClass\": \"oci-bv\"\n      },\n      \"replicas\": 1,\n      \"sid\": \"ORCL1\"\n    }\n  },\n  {\n    \"apiVersion\": \"observability.oracle.com/v1alpha1\",\n    \"kind\": \"DatabaseObserver\",\n    \"metadata\": {\n      \"name\": \"obs-sample\"\n    },\n    \"spec\": {\n      \"database\": {\n        \"dbConnectionString\": {\n          \"key\": \"connection\",\n          \"secret\": \"db-secret\"\n        },\n        \"dbPassword\": {\n          \"key\": \"password\",\n          \"secret\": \"db-secret\"\n        },\n        \"dbUser\": {\n          \"key\": \"username\",\n          \"secret\": \"db-secret\"\n        },\n        \"dbWallet\": {\n          \"secret\": \"instance-wallet\"\n        }\n      },\n      \"exporter\": {\n        \"configuration\": {\n          \"configmap\": {\n            \"configmapName\": \"devcm-oradevdb-config\",\n            \"key\": \"config.toml\"\n          }\n        },\n        \"image\": \"container-registry.oracle.com/database/observability-exporter:latest\",\n        \"service\": {\n          \"port\": 9161\n        }\n      },\n      \"ociConfig\": {\n        \"configMapName\": \"oci-cred\",\n        \"secretName\": \"oci-privatekey\"\n      },\n      \"prometheus\": {\n        \"labels\": {\n          \"app\": \"app-sample-label\"\n        },\n        \"port\": \"metrics\"\n      },\n      \"replicas\": 1\n    }\n  }\n]",
        "capabilities": "Seamless Upgrades",
        "categories": "Database",
        "containerImage": "container-registry.oracle.com/database/operator:1.2.0",
        "createdAt": "2025-04-10T20:09:48Z",
        "olm.operatorGroup": "global-operators",
        "olm.operatorNamespace": "operators",
        "operatorframework.io/properties": "{\"properties\":[{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousContainerDatabase\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousContainerDatabase\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabase\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabase\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabaseBackup\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabaseBackup\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabaseRestore\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabaseRestore\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"CDB\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"CDB\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"DataguardBroker\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"DataguardBroker\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"DbcsSystem\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"DbcsSystem\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"LREST\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"LRPDB\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"OracleRestDataService\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"OracleRestDataService\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"OrdsSrvs\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"PDB\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"PDB\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"ShardingDatabase\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"ShardingDatabase\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"SingleInstanceDatabase\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"SingleInstanceDatabase\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"observability.oracle.com\",\"kind\":\"DatabaseObserver\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"observability.oracle.com\",\"kind\":\"DatabaseObserver\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"observability.oracle.com\",\"kind\":\"DatabaseObserver\",\"version\":\"v4\"}},{\"type\":\"olm.package\",\"value\":{\"packageName\":\"oracle-database-operator\",\"version\":\"1.2.0\"}}]}",
        "operators.operatorframework.io/builder": "operator-sdk-v1.39.2",
        "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v4"
      },
      "owned_crds": [
        "autonomouscontainerdatabases.database.oracle.com",
        "autonomouscontainerdatabases.database.oracle.com",
        "autonomousdatabasebackups.database.oracle.com",
        "autonomousdatabasebackups.database.oracle.com",
        "autonomousdatabaserestores.database.oracle.com",
        "autonomousdatabaserestores.database.oracle.com",
        "autonomousdatabases.database.oracle.com",
        "autonomousdatabases.database.oracle.com",
        "cdbs.database.oracle.com",
        "cdbs.database.oracle.com",
        "databaseobservers.observability.oracle.com",
        "databaseobservers.observability.oracle.com",
        "databaseobservers.observability.oracle.com",
        "dataguardbrokers.database.oracle.com",
        "dataguardbrokers.database.oracle.com",
        "dbcssystems.database.oracle.com",
        "dbcssystems.database.oracle.com",
        "lrests.database.oracle.com",
        "lrpdbs.database.oracle.com",
        "oraclerestdataservices.database.oracle.com",
        "oraclerestdataservices.database.oracle.com",
        "ordssrvs.database.oracle.com",
        "pdbs.database.oracle.com",
        "pdbs.database.oracle.com",
        "shardingdatabases.database.oracle.com",
        "shardingdatabases.database.oracle.com",
        "singleinstancedatabases.database.oracle.com",
        "singleinstancedatabases.database.oracle.com"
      ],
      "required_crds": [],
      "permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps"
              ],
              "verbs": [
                "get",
                "list",
                "watch",
                "create",
                "update",
                "patch",
                "delete"
              ]
            },
            {
              "apiGroups": [
                "coordination.k8s.io"
              ],
              "resources": [
                "leases"
              ],
              "verbs": [
                "get",
                "list",
                "watch",
                "create",
                "update",
                "patch",
                "delete"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps/status"
              ],
              "verbs": [
                "get",
                "update",
                "patch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "events"
              ],
              "verbs": [
                "create",
                "patch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps",
                "containers",
                "deployments",
                "events",
                "namespaces",
                "persistentvolumeclaims",
                "pods",
                "pods/exec",
                "pods/log",
                "replicasets",
                "secrets",
                "services"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps/status",
                "daemonsets/status",
                "deployments/status",
                "services/status",
                "statefulsets/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "persistentvolumes"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "secrets/status"
              ],
              "verbs": [
                "get"
              ]
            },
            {
              "apiGroups": [
                "''"
              ],
              "resources": [
                "statefulsets/finalizers"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "apps"
              ],
              "resources": [
                "configmaps"
              ],
              "verbs": [
                "get",
                "list"
              ]
            },
            {
              "apiGroups": [
                "apps"
              ],
              "resources": [
                "daemonsets",
                "deployments",
                "pods",
                "replicasets",
                "services",
                "statefulsets"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "coordination.k8s.io"
              ],
              "resources": [
                "leases"
              ],
              "verbs": [
                "create",
                "get",
                "list",
                "update"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "autonomouscontainerdatabases",
                "autonomousdatabases",
                "cdbs",
                "dataguardbrokers",
                "dbcssystems",
                "events",
                "lrests",
                "lrpdbs",
                "oraclerestdataservices",
                "ordssrvs",
                "pdbs",
                "shardingdatabases",
                "singleinstancedatabases"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "autonomouscontainerdatabases/status",
                "autonomousdatabasebackups/status",
                "autonomousdatabaserestores/status",
                "cdbs/status",
                "dataguardbrokers/status",
                "dbcssystems/status",
                "lrests/status",
                "lrpdbs/status",
                "oraclerestdataservices/status",
                "ordssrvs/status",
                "pdbs/status",
                "shardingdatabases/status",
                "singleinstancedatabases/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "autonomousdatabasebackups",
                "autonomousdatabaserestores"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "autonomousdatabases/status"
              ],
              "verbs": [
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "cdbs/finalizers",
                "dataguardbrokers/finalizers",
                "lrests/finalizers",
                "oraclerestdataservices/finalizers",
                "ordssrvs/finalizers",
                "singleinstancedatabases/finalizers"
              ],
              "verbs": [
                "update"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "dbcssystems/finalizers",
                "lrpdbs/finalizers",
                "pdbs/finalizers",
                "shardingdatabases/finalizers"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "monitoring.coreos.com"
              ],
              "resources": [
                "servicemonitors"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "observability.oracle.com"
              ],
              "resources": [
                "databaseobservers"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "observability.oracle.com"
              ],
              "resources": [
                "databaseobservers/finalizers"
              ],
              "verbs": [
                "update"
              ]
            },
            {
              "apiGroups": [
                "observability.oracle.com"
              ],
              "resources": [
                "databaseobservers/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "storage.k8s.io"
              ],
              "resources": [
                "storageclasses"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            }
          ],
          "serviceAccountName": "default"
        }
      ],
      "cluster_permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                "authentication.k8s.io"
              ],
              "resources": [
                "tokenreviews"
              ],
              "verbs": [
                "create"
              ]
            },
            {
              "apiGroups": [
                "authorization.k8s.io"
              ],
              "resources": [
                "subjectaccessreviews"
              ],
              "verbs": [
                "create"
              ]
            }
          ],
          "serviceAccountName": "default"
        }
      ],
      "replaces": "oracle-database-operator.v1.1.0",
      "skips": [],
      "min_kube_version": ""
    },
    {
      "name": "cloudnative-pg.v1.27.0",
      "namespace": "kube-public",
      "display_name": "CloudNativePG",
      "version": "1.27.0",
      "phase": "Succeeded",
      "description": "Main features:\n\n- Direct integration with the Kubernetes API server for High Availability,\n  eliminating the need for external tools.\n- Self-healing capabilities, including:\n    - Automated failover by promoting the most aligned replica.\n    - Automatic recreation of failed replicas.\n- Planned switchover of the primary instance by promoting a selected replica.\n- Declarative management of key PostgreSQL configurations, including:\n    - PostgreSQL settings.\n    - Roles, users, and groups.\n    - Databases, extensions, and schemas.\n    - Tablespaces (including temporary tablespaces).\n- Flexible instance definition, supporting any number of instances (minimum 1\n  primary server).\n- Scale-up/down capabilities to dynamically adjust cluster size.\n- Read-Write and Read-Only Services, ensuring applications connect correctly:\n    - *Read-Write Service*: Routes connections to the primary server.\n    - *Read-Only Service*: Distributes connections among replicas for read workloads.\n- Support for quorum-based and priority-based PostgreSQL Synchronous\n  Replication.\n- Replica clusters enabling PostgreSQL distributed topologies across multiple\n  Kubernetes clusters (private, public, hybrid, and multi-cloud).\n- Delayed Replica clusters for point-in-time access to historical data.\n- Persistent volume management, including:\n    - Support for Local Persistent Volumes with PVC templates.\n    - Reuse of Persistent Volumes storage in Pods.\n    - Separate volumes for WAL files and tablespaces.\n- Backup and recovery options, including:\n    - Integration with the [Barman Cloud plugin](https://github.com/cloudnative-pg/plugin-barman-cloud)\n      for continuous online backup via WAL archiving to AWS S3, S3-compatible\n      services, Azure Blob Storage, and Google Cloud Storage, with support for\n      retention policies based on a configurable recovery window.\n    - Backups using volume snapshots (where supported by storage classes).\n    - Full and Point-In-Time recovery from volume snapshots or object stores (via Barman Cloud plugin).\n    - Backup from standby replicas to reduce primary workload impact.\n- Offline and online import of PostgreSQL databases, including major upgrades:\n    - *Offline Import*: Direct restore from existing databases.\n    - *Online Import*: PostgreSQL native logical replication via the `Subscription` resource.\n- Offline In-Place Major Upgrades of PostgreSQL\n- High Availability physical replication slots, including synchronization of\n  user-defined replication slots.\n- Parallel WAL archiving and restore, ensuring high-performance data\n  synchronization in high-write environments.\n- TLS support, including:\n    - Secure connections and client certificate authentication.\n    - Custom TLS certificates (integrated with `cert-manager`).\n- Startup and readiness probes, including replica probes based on desired lag\n  from the primary.\n- Declarative rolling updates for:\n    - PostgreSQL minor versions.\n    - Operator upgrades (in-place or rolling updates).\n- Standard output logging of PostgreSQL error messages in JSON format for\n  easier integration with log aggregation tools.\n- Prometheus-compatible metrics exporter (`metrics` port 9187) for custom\n  monitoring.\n- `cnpg` plugin for `kubectl` to simplify cluster operations.\n- Cluster hibernation for resource efficiency in inactive states.\n- Fencing of PostgreSQL clusters (full cluster or subset) to isolate instances\n  when needed.\n- Connection pooling with PgBouncer for improved database efficiency.\n- OLM (Operator Lifecycle Manager) installation support for streamlined\n  deployments.\n- Multi-arch container images, including Software Bill of Materials (SBOM) and\n  provenance attestations for security compliance.\n",
      "provider": "The CloudNativePG Contributors",
      "install_strategy": "OwnNamespace",
      "creation_timestamp": "2025-09-07T09:12:55Z",
      "labels": {
        "olm.copiedFrom": "operators",
        "olm.managed": "true",
        "operatorframework.io/arch.amd64": "supported"
      },
      "annotations": {
        "alm-examples": "[\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"backup-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      }\n    },\n    \"status\": {\n      \"serverName\": null\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Cluster\",\n    \"metadata\": {\n      \"name\": \"cluster-sample\"\n    },\n    \"spec\": {\n      \"instances\": 3,\n      \"logLevel\": \"info\",\n      \"primaryUpdateStrategy\": \"unsupervised\",\n      \"storage\": {\n        \"size\": \"1Gi\"\n      },\n      \"walStorage\": {\n        \"size\": \"1Gi\"\n      }\n    },\n    \"status\": {\n      \"instances\": 3\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"ClusterImageCatalog\",\n    \"metadata\": {\n      \"name\": \"postgresql\"\n    },\n    \"spec\": {\n      \"images\": [\n        {\n          \"image\": \"ghcr.io/cloudnative-pg/postgresql@sha256:1c97e0d6e94d8b335be7f258eeda2202966df5fde0c934eef4b13c760ec6a891\",\n          \"major\": 15\n        },\n        {\n          \"image\": \"ghcr.io/cloudnative-pg/postgresql@sha256:ee2e3ce7f0ea935c3f4ab245c0b3959c9f1c49816ae02222ceb6bc347f48e43b\",\n          \"major\": 16\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Database\",\n    \"metadata\": {\n      \"name\": \"database-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      },\n      \"name\": \"database-sample\",\n      \"owner\": \"app\"\n    },\n    \"status\": {\n      \"applied\": false\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"ImageCatalog\",\n    \"metadata\": {\n      \"name\": \"postgresql\",\n      \"namespace\": \"default\"\n    },\n    \"spec\": {\n      \"images\": [\n        {\n          \"image\": \"ghcr.io/cloudnative-pg/postgresql@sha256:1c97e0d6e94d8b335be7f258eeda2202966df5fde0c934eef4b13c760ec6a891\",\n          \"major\": 15\n        },\n        {\n          \"image\": \"ghcr.io/cloudnative-pg/postgresql@sha256:ee2e3ce7f0ea935c3f4ab245c0b3959c9f1c49816ae02222ceb6bc347f48e43b\",\n          \"major\": 16\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Pooler\",\n    \"metadata\": {\n      \"name\": \"pooler-sample-rw\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      },\n      \"instances\": 1,\n      \"pgbouncer\": {\n        \"poolMode\": \"session\"\n      },\n      \"type\": \"rw\"\n    },\n    \"status\": {\n      \"instances\": 1\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Publication\",\n    \"metadata\": {\n      \"name\": \"publication-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      },\n      \"dbname\": \"app\",\n      \"name\": \"pub\",\n      \"target\": {\n        \"allTables\": true\n      }\n    },\n    \"status\": {\n      \"applied\": false\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"ScheduledBackup\",\n    \"metadata\": {\n      \"name\": \"scheduledbackup-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      },\n      \"schedule\": \"0 0 0 * * *\"\n    },\n    \"status\": {\n      \"lastCheckTime\": null\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Subscription\",\n    \"metadata\": {\n      \"name\": \"subscription-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample-dest\"\n      },\n      \"dbname\": \"app\",\n      \"externalClusterName\": \"cluster-sample\",\n      \"name\": \"sub\",\n      \"publicationName\": \"pub\"\n    },\n    \"status\": {\n      \"applied\": false\n    }\n  }\n]",
        "capabilities": "Auto Pilot",
        "categories": "Database",
        "certified": "true",
        "containerImage": "ghcr.io/cloudnative-pg/cloudnative-pg@sha256:53995e9d6a7760c77d77e5298f78b49029427494f4dd933d5fa7a74f7af3bb44",
        "createdAt": "2025-08-12T14:08:35Z",
        "description": "CloudNativePG is an open source operator designed to manage highly available PostgreSQL databases with a primary/standby architecture on any supported Kubernetes cluster.",
        "features.operators.openshift.io/disconnected": "true",
        "features.operators.openshift.io/fips-compliant": "false",
        "features.operators.openshift.io/proxy-aware": "false",
        "features.operators.openshift.io/tls-profiles": "false",
        "features.operators.openshift.io/token-auth-aws": "false",
        "features.operators.openshift.io/token-auth-azure": "false",
        "features.operators.openshift.io/token-auth-gcp": "false",
        "olm.operatorGroup": "global-operators",
        "olm.operatorNamespace": "operators",
        "operatorframework.io/properties": "{\"properties\":[{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Backup\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Cluster\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"ClusterImageCatalog\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Database\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"FailoverQuorum\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"ImageCatalog\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Pooler\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Publication\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"ScheduledBackup\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Subscription\",\"version\":\"v1\"}},{\"type\":\"olm.package\",\"value\":{\"packageName\":\"cloudnative-pg\",\"version\":\"1.27.0\"}}]}",
        "operators.operatorframework.io/builder": "operator-sdk-v1.41.1",
        "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v4",
        "repository": "https://github.com/cloudnative-pg/cloudnative-pg",
        "support": "Community"
      },
      "owned_crds": [
        "backups.postgresql.cnpg.io",
        "clusterimagecatalogs.postgresql.cnpg.io",
        "clusters.postgresql.cnpg.io",
        "databases.postgresql.cnpg.io",
        "failoverquorums.postgresql.cnpg.io",
        "imagecatalogs.postgresql.cnpg.io",
        "poolers.postgresql.cnpg.io",
        "publications.postgresql.cnpg.io",
        "scheduledbackups.postgresql.cnpg.io",
        "subscriptions.postgresql.cnpg.io"
      ],
      "required_crds": [],
      "permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps",
                "secrets",
                "services"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps/status",
                "secrets/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "events"
              ],
              "verbs": [
                "create",
                "patch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "nodes"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "persistentvolumeclaims",
                "pods",
                "pods/exec"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "pods/status"
              ],
              "verbs": [
                "get"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "serviceaccounts"
              ],
              "verbs": [
                "create",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "admissionregistration.k8s.io"
              ],
              "resources": [
                "mutatingwebhookconfigurations",
                "validatingwebhookconfigurations"
              ],
              "verbs": [
                "get",
                "patch"
              ]
            },
            {
              "apiGroups": [
                "apps"
              ],
              "resources": [
                "deployments"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "batch"
              ],
              "resources": [
                "jobs"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "coordination.k8s.io"
              ],
              "resources": [
                "leases"
              ],
              "verbs": [
                "create",
                "get",
                "update"
              ]
            },
            {
              "apiGroups": [
                "monitoring.coreos.com"
              ],
              "resources": [
                "podmonitors"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "policy"
              ],
              "resources": [
                "poddisruptionbudgets"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "backups",
                "clusters",
                "databases",
                "poolers",
                "publications",
                "scheduledbackups",
                "subscriptions"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "backups/status",
                "databases/status",
                "publications/status",
                "scheduledbackups/status",
                "subscriptions/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "clusterimagecatalogs",
                "imagecatalogs"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "clusters/finalizers",
                "poolers/finalizers"
              ],
              "verbs": [
                "update"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "clusters/status",
                "failoverquorums/status",
                "poolers/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "failoverquorums"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "rbac.authorization.k8s.io"
              ],
              "resources": [
                "rolebindings",
                "roles"
              ],
              "verbs": [
                "create",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "snapshot.storage.k8s.io"
              ],
              "resources": [
                "volumesnapshots"
              ],
              "verbs": [
                "create",
                "get",
                "list",
                "patch",
                "watch"
              ]
            }
          ],
          "serviceAccountName": "cnpg-manager"
        }
      ],
      "cluster_permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "nodes"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "clusterimagecatalogs"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            }
          ],
          "serviceAccountName": "cnpg-manager"
        }
      ],
      "replaces": "cloudnative-pg.v1.26.1",
      "skips": [],
      "min_kube_version": "1.23.0"
    },
    {
      "name": "mariadb-operator.v25.8.3",
      "namespace": "kube-public",
      "display_name": "MariaDB Operator",
      "version": "25.8.3",
      "phase": "Succeeded",
      "description": "Install [`mariadb-operator`](https://github.com/mariadb-operator/mariadb-operator) via [OLM](https://olm.operatorframework.io/) using the [helm chart](https://artifacthub.io/packages/helm/mariadb-operator/mariadb-operator).\n\nThis helm operator provides provides a 1:1 mapping between the official helm chart and the [`MariadbOperator`](https://github.com/mariadb-operator/mariadb-operator-helm/blob/main/config/samples/helm_v1alpha1_mariadboperator.yaml) CRD, allowing to install [`mariadb-operator`](https://github.com/mariadb-operator/mariadb-operator) via OLM without having to do any change in the helm chart.\n\nNormally, you would install [`mariadb-operator`](https://github.com/mariadb-operator/mariadb-operator) providing this `values.yaml` to the helm chart:\n```yaml\nimage:\n  repository: ghcr.io/mariadb-operator/mariadb-operator\n  pullPolicy: IfNotPresent\nlogLevel: INFO\nha:\n  enabled: true\nmetrics:\n  enabled: true\n  serviceMonitor:\n    enabled: true\nwebhook:\n  cert:\n    certManager:\n      enabled: true\n```\n\nThis helm chart installation is abstracted in the [`MariadbOperator`](https://github.com/mariadb-operator/mariadb-operator-helm/blob/main/config/samples/helm_v1alpha1_mariadboperator.yaml) CRD, which will be reconciled by the helm operator:\n```yaml\napiVersion: helm.k8s.mariadb.com/v1alpha1\nkind: MariadbOperator\nmetadata:\n  name: mariadb-operator\nspec:\n  image:\n    repository: ghcr.io/mariadb-operator/mariadb-operator\n    pullPolicy: IfNotPresent\n  logLevel: INFO\n  ha:\n    enabled: true\n  metrics:\n    enabled: true\n    serviceMonitor:\n      enabled: true\n  webhook:\n    cert:\n      certManager:\n        enabled: true\n```\n\nOnce you have installed the operator, you will able to install a [`MariaDB`](https://github.com/mariadb-operator/mariadb-operator/blob/main/examples/manifests/mariadb_v1alpha1_mariadb.yaml) instance. Refer to the main [`mariadb-operator`](https://github.com/mariadb-operator/mariadb-operator) documentation for getting started with the rest of CRDs.\n\n## Documentation\n* [mariadb-operator](https://github.com/mariadb-operator/mariadb-operator/blob/main/README.md)\n* [mariadb-operator-helm](https://github.com/mariadb-operator/mariadb-operator-helm/blob/main/README.md)\n\n## Releases\nThis operator is automatically published in the following repositories whenever a new version of the [helm chart](https://artifacthub.io/packages/helm/mariadb-operator/mariadb-operator) is released:\n- [k8s-operatorhub/community-operators](https://github.com/k8s-operatorhub/community-operators)\n- [redhat-openshift-ecosystem/community-operators-prod](https://github.com/redhat-openshift-ecosystem/community-operators-prod)\n\n## Roadmap\nTake a look at our [roadmap](https://github.com/mariadb-operator/mariadb-operator/blob/main/ROADMAP.md) and feel free to open an issue to suggest new features.\n\n## Contributing\nWe welcome and encourage contributions to this project! Please check our [contributing](https://github.com/mariadb-operator/mariadb-operator/blob/main/CONTRIBUTING.md) and [development](https://github.com/mariadb-operator/mariadb-operator/blob/main/docs/DEVELOPMENT.md) guides. PRs welcome!\n\n## Get in touch\nJoin us on Slack: **[MariaDB Community Slack](https://r.mariadb.com/join-community-slack)**.\n",
      "provider": "mariadb-operator",
      "install_strategy": "OwnNamespace",
      "creation_timestamp": "2025-09-07T09:15:58Z",
      "labels": {
        "olm.copiedFrom": "operators",
        "olm.managed": "true"
      },
      "annotations": {
        "alm-examples": "[\n  {\n    \"apiVersion\": \"helm.mariadb.mmontes.io/v1alpha1\",\n    \"kind\": \"MariadbOperator\",\n    \"metadata\": {\n      \"name\": \"mariadb-operator\"\n    },\n    \"spec\": {\n      \"affinity\": {},\n      \"certController\": {\n        \"affinity\": {},\n        \"caValidity\": \"35064h\",\n        \"certValidity\": \"8766h\",\n        \"enabled\": true,\n        \"extrArgs\": [],\n        \"extraVolumeMounts\": [],\n        \"extraVolumes\": [],\n        \"ha\": {\n          \"enabled\": false,\n          \"replicas\": 3\n        },\n        \"image\": {\n          \"pullPolicy\": \"IfNotPresent\",\n          \"repository\": \"ghcr.io/mariadb-operator/mariadb-operator\",\n          \"tag\": \"\"\n        },\n        \"imagePullSecrets\": [],\n        \"lookaheadValidity\": \"2160h\",\n        \"nodeSelector\": {},\n        \"podAnnotations\": {},\n        \"podSecurityContext\": {},\n        \"requeueDuration\": \"5m\",\n        \"resources\": {},\n        \"securityContext\": {},\n        \"serviceAccount\": {\n          \"annotations\": {},\n          \"automount\": true,\n          \"enabled\": true,\n          \"extraLabels\": {},\n          \"name\": \"\"\n        },\n        \"serviceMonitor\": {\n          \"additionalLabels\": {},\n          \"enabled\": true,\n          \"interval\": \"30s\",\n          \"scrapeTimeout\": \"25s\"\n        },\n        \"tolerations\": []\n      },\n      \"clusterName\": \"cluster.local\",\n      \"extrArgs\": [],\n      \"extraVolumeMounts\": [],\n      \"extraVolumes\": [],\n      \"fullnameOverride\": \"\",\n      \"ha\": {\n        \"enabled\": false,\n        \"replicas\": 3\n      },\n      \"image\": {\n        \"pullPolicy\": \"IfNotPresent\",\n        \"repository\": \"ghcr.io/mariadb-operator/mariadb-operator\",\n        \"tag\": \"\"\n      },\n      \"imagePullSecrets\": [],\n      \"logLevel\": \"INFO\",\n      \"metrics\": {\n        \"enabled\": false,\n        \"serviceMonitor\": {\n          \"additionalLabels\": {},\n          \"enabled\": true,\n          \"interval\": \"30s\",\n          \"scrapeTimeout\": \"25s\"\n        }\n      },\n      \"nameOverride\": \"\",\n      \"nodeSelector\": {},\n      \"podAnnotations\": {},\n      \"podSecurityContext\": {},\n      \"rbac\": {\n        \"enabled\": true\n      },\n      \"resources\": {},\n      \"securityContext\": {},\n      \"serviceAccount\": {\n        \"annotations\": {},\n        \"automount\": true,\n        \"enabled\": true,\n        \"extraLabels\": {},\n        \"name\": \"\"\n      },\n      \"tolerations\": [],\n      \"webhook\": {\n        \"affinity\": {},\n        \"annotations\": {},\n        \"cert\": {\n          \"caPath\": \"/tmp/k8s-webhook-server/certificate-authority\",\n          \"certManager\": {\n            \"duration\": \"\",\n            \"enabled\": false,\n            \"issuerRef\": {},\n            \"renewBefore\": \"\"\n          },\n          \"path\": \"/tmp/k8s-webhook-server/serving-certs\",\n          \"secretAnnotations\": {}\n        },\n        \"extrArgs\": [],\n        \"extraVolumeMounts\": [],\n        \"extraVolumes\": [],\n        \"ha\": {\n          \"enabled\": false,\n          \"replicas\": 3\n        },\n        \"hostNetwork\": false,\n        \"image\": {\n          \"pullPolicy\": \"IfNotPresent\",\n          \"repository\": \"ghcr.io/mariadb-operator/mariadb-operator\",\n          \"tag\": \"\"\n        },\n        \"imagePullSecrets\": [],\n        \"nodeSelector\": {},\n        \"podAnnotations\": {},\n        \"podSecurityContext\": {},\n        \"port\": 10250,\n        \"resources\": {},\n        \"securityContext\": {},\n        \"serviceAccount\": {\n          \"annotations\": {},\n          \"automount\": true,\n          \"enabled\": true,\n          \"extraLabels\": {},\n          \"name\": \"\"\n        },\n        \"serviceMonitor\": {\n          \"additionalLabels\": {},\n          \"enabled\": true,\n          \"interval\": \"30s\",\n          \"scrapeTimeout\": \"25s\"\n        },\n        \"tolerations\": []\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"backup\"\n    },\n    \"spec\": {\n      \"args\": [\n        \"--single-transaction\",\n        \"--all-databases\"\n      ],\n      \"logLevel\": \"info\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"maxRetention\": \"720h\",\n      \"resources\": {\n        \"limits\": {\n          \"cpu\": \"300m\",\n          \"memory\": \"512Mi\"\n        },\n        \"requests\": {\n          \"cpu\": \"100m\",\n          \"memory\": \"128Mi\"\n        }\n      },\n      \"schedule\": {\n        \"cron\": \"*/1 * * * *\",\n        \"suspend\": false\n      },\n      \"storage\": {\n        \"s3\": {\n          \"accessKeyIdSecretKeyRef\": {\n            \"key\": \"access-key-id\",\n            \"name\": \"minio\"\n          },\n          \"bucket\": \"backups\",\n          \"endpoint\": \"minio.minio.svc.cluster.local:9000\",\n          \"prefix\": \"mariadb\",\n          \"secretAccessKeySecretKeyRef\": {\n            \"key\": \"secret-access-key\",\n            \"name\": \"minio\"\n          },\n          \"tls\": {\n            \"caSecretKeyRef\": {\n              \"key\": \"ca.crt\",\n              \"name\": \"minio-ca\"\n            },\n            \"enabled\": true\n          }\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Connection\",\n    \"metadata\": {\n      \"name\": \"connection\"\n    },\n    \"spec\": {\n      \"database\": \"mariadb\",\n      \"healthCheck\": {\n        \"interval\": \"10s\",\n        \"retryInterval\": \"3s\"\n      },\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"params\": {\n        \"parseTime\": \"true\"\n      },\n      \"passwordSecretKeyRef\": {\n        \"key\": \"password\",\n        \"name\": \"mariadb\"\n      },\n      \"secretName\": \"connection\",\n      \"secretTemplate\": {\n        \"annotations\": {\n          \"k8s.mariadb.com/connection\": \"sample\"\n        },\n        \"databaseKey\": \"database\",\n        \"hostKey\": \"host\",\n        \"key\": \"dsn\",\n        \"labels\": {\n          \"k8s.mariadb.com/connection\": \"sample\"\n        },\n        \"passwordKey\": \"password\",\n        \"portKey\": \"port\",\n        \"usernameKey\": \"username\"\n      },\n      \"serviceName\": \"mariadb\",\n      \"username\": \"mariadb\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Database\",\n    \"metadata\": {\n      \"name\": \"data-test\"\n    },\n    \"spec\": {\n      \"characterSet\": \"utf8\",\n      \"collate\": \"utf8_general_ci\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"retryInterval\": \"5s\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Grant\",\n    \"metadata\": {\n      \"name\": \"grant\"\n    },\n    \"spec\": {\n      \"database\": \"*\",\n      \"grantOption\": true,\n      \"host\": \"%\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"privileges\": [\n        \"SELECT\",\n        \"INSERT\",\n        \"UPDATE\"\n      ],\n      \"requeueInterval\": \"30s\",\n      \"retryInterval\": \"5s\",\n      \"table\": \"*\",\n      \"username\": \"user\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"MariaDB\",\n    \"metadata\": {\n      \"name\": \"mariadb\"\n    },\n    \"spec\": {\n      \"connection\": {\n        \"secretName\": \"mariadb-conn\",\n        \"secretTemplate\": {\n          \"key\": \"dsn\"\n        }\n      },\n      \"database\": \"mariadb\",\n      \"galera\": {\n        \"enabled\": true\n      },\n      \"metrics\": {\n        \"enabled\": true,\n        \"passwordSecretKeyRef\": {\n          \"generate\": true,\n          \"key\": \"password\",\n          \"name\": \"mariadb-metrics\"\n        }\n      },\n      \"myCnf\": \"[mariadb]\\nbind-address=*\\ndefault_storage_engine=InnoDB\\nbinlog_format=row\\ninnodb_autoinc_lock_mode=2\\ninnodb_buffer_pool_size=1024M\\nmax_allowed_packet=256M\\n\",\n      \"passwordSecretKeyRef\": {\n        \"generate\": true,\n        \"key\": \"password\",\n        \"name\": \"mariadb-password\"\n      },\n      \"primaryConnection\": {\n        \"secretName\": \"mariadb-conn-primary\",\n        \"secretTemplate\": {\n          \"key\": \"dsn\"\n        }\n      },\n      \"primaryService\": {\n        \"type\": \"ClusterIP\"\n      },\n      \"replicas\": 3,\n      \"rootPasswordSecretKeyRef\": {\n        \"generate\": true,\n        \"key\": \"password\",\n        \"name\": \"mariadb-root\"\n      },\n      \"secondaryConnection\": {\n        \"secretName\": \"mariadb-conn-secondary\",\n        \"secretTemplate\": {\n          \"key\": \"dsn\"\n        }\n      },\n      \"secondaryService\": {\n        \"type\": \"ClusterIP\"\n      },\n      \"service\": {\n        \"type\": \"ClusterIP\"\n      },\n      \"storage\": {\n        \"size\": \"1Gi\"\n      },\n      \"updateStrategy\": {\n        \"type\": \"ReplicasFirstPrimaryLast\"\n      },\n      \"username\": \"mariadb\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"MaxScale\",\n    \"metadata\": {\n      \"name\": \"maxscale-galera\"\n    },\n    \"spec\": {\n      \"admin\": {\n        \"guiEnabled\": true,\n        \"port\": 8989\n      },\n      \"auth\": {\n        \"generate\": true\n      },\n      \"config\": {\n        \"sync\": {\n          \"database\": \"mysql\",\n          \"interval\": \"5s\",\n          \"timeout\": \"10s\"\n        }\n      },\n      \"connection\": {\n        \"port\": 3306,\n        \"secretName\": \"mxs-galera-conn\"\n      },\n      \"guiKubernetesService\": {\n        \"metadata\": {\n          \"annotations\": {\n            \"metallb.universe.tf/loadBalancerIPs\": \"172.18.0.231\"\n          }\n        },\n        \"type\": \"LoadBalancer\"\n      },\n      \"kubernetesService\": {\n        \"annotations\": {\n          \"metallb.universe.tf/loadBalancerIPs\": \"172.18.0.224\"\n        },\n        \"type\": \"LoadBalancer\"\n      },\n      \"mariaDbRef\": {\n        \"name\": \"mariadb-galera\"\n      },\n      \"monitor\": {\n        \"cooperativeMonitoring\": \"majority_of_all\",\n        \"interval\": \"2s\",\n        \"params\": {\n          \"available_when_donor\": \"false\",\n          \"disable_master_failback\": \"false\",\n          \"disable_master_role_setting\": \"false\"\n        }\n      },\n      \"replicas\": 3,\n      \"requeueInterval\": \"10s\",\n      \"services\": [\n        {\n          \"listener\": {\n            \"params\": {\n              \"connection_metadata\": \"tx_isolation=auto\"\n            },\n            \"port\": 3306,\n            \"protocol\": \"MariaDBProtocol\"\n          },\n          \"name\": \"rw-router\",\n          \"params\": {\n            \"master_accept_reads\": \"true\",\n            \"max_replication_lag\": \"3s\",\n            \"max_slave_connections\": \"255\",\n            \"transaction_replay\": \"true\",\n            \"transaction_replay_attempts\": \"10\",\n            \"transaction_replay_timeout\": \"5s\"\n          },\n          \"router\": \"readwritesplit\"\n        },\n        {\n          \"listener\": {\n            \"port\": 3307\n          },\n          \"name\": \"rconn-master-router\",\n          \"params\": {\n            \"master_accept_reads\": \"true\",\n            \"max_replication_lag\": \"3s\",\n            \"router_options\": \"master\"\n          },\n          \"router\": \"readconnroute\"\n        },\n        {\n          \"listener\": {\n            \"port\": 3308\n          },\n          \"name\": \"rconn-slave-router\",\n          \"params\": {\n            \"max_replication_lag\": \"3s\",\n            \"router_options\": \"slave\"\n          },\n          \"router\": \"readconnroute\"\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"PhysicalBackup\",\n    \"metadata\": {\n      \"name\": \"physicalbackup\"\n    },\n    \"spec\": {\n      \"compression\": \"bzip2\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"maxRetention\": \"720h\",\n      \"podAffinity\": true,\n      \"resources\": {\n        \"limits\": {\n          \"cpu\": \"300m\",\n          \"memory\": \"512Mi\"\n        },\n        \"requests\": {\n          \"cpu\": \"100m\",\n          \"memory\": \"128Mi\"\n        }\n      },\n      \"schedule\": {\n        \"cron\": \"*/1 * * * *\",\n        \"immediate\": true,\n        \"suspend\": false\n      },\n      \"serviceAccountName\": \"backup\",\n      \"stagingStorage\": {\n        \"persistentVolumeClaim\": {\n          \"accessModes\": [\n            \"ReadWriteOnce\"\n          ],\n          \"resources\": {\n            \"requests\": {\n              \"storage\": \"1Gi\"\n            }\n          }\n        }\n      },\n      \"storage\": {\n        \"s3\": {\n          \"accessKeyIdSecretKeyRef\": {\n            \"key\": \"access-key-id\",\n            \"name\": \"minio\"\n          },\n          \"bucket\": \"physicalbackups\",\n          \"endpoint\": \"minio.minio.svc.cluster.local:9000\",\n          \"prefix\": \"mariadb\",\n          \"region\": \"us-east-1\",\n          \"secretAccessKeySecretKeyRef\": {\n            \"key\": \"secret-access-key\",\n            \"name\": \"minio\"\n          },\n          \"tls\": {\n            \"caSecretKeyRef\": {\n              \"key\": \"ca.crt\",\n              \"name\": \"minio-ca\"\n            },\n            \"enabled\": true\n          }\n        }\n      },\n      \"timeout\": \"1h\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Restore\",\n    \"metadata\": {\n      \"name\": \"restore\"\n    },\n    \"spec\": {\n      \"backupRef\": {\n        \"name\": \"backup\"\n      },\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"resources\": {\n        \"limits\": {\n          \"cpu\": \"300m\",\n          \"memory\": \"512Mi\"\n        },\n        \"requests\": {\n          \"cpu\": \"100m\",\n          \"memory\": \"128Mi\"\n        }\n      },\n      \"targetRecoveryTime\": \"2023-12-19T09:00:00Z\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"SqlJob\",\n    \"metadata\": {\n      \"name\": \"03-stars\"\n    },\n    \"spec\": {\n      \"database\": \"mariadb\",\n      \"dependsOn\": [\n        {\n          \"name\": \"01-users\"\n        },\n        {\n          \"name\": \"02-repos\"\n        }\n      ],\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"passwordSecretKeyRef\": {\n        \"key\": \"password\",\n        \"name\": \"mariadb\"\n      },\n      \"schedule\": {\n        \"cron\": \"*/1 * * * *\",\n        \"suspend\": false\n      },\n      \"sql\": \"CREATE TABLE IF NOT EXISTS stars (\\n  id bigint PRIMARY KEY AUTO_INCREMENT,\\n  user_id bigint NOT NULL,\\n  repo_id bigint NOT NULL,\\n  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,\\n  FOREIGN KEY (repo_id) REFERENCES repos(id) ON DELETE CASCADE,\\n  UNIQUE KEY (user_id, repo_id)\\n);\\nINSERT INTO stars(user_id, repo_id) \\n  VALUES((SELECT id FROM users ORDER BY RAND() LIMIT 1), (SELECT id FROM repos ORDER BY RAND() LIMIT 1))\\n  ON DUPLICATE KEY UPDATE id=id;\\nDELETE FROM stars WHERE id = (SELECT id FROM stars ORDER BY RAND() LIMIT 1);\\nSELECT r.name AS repo, COUNT(*) AS stars\\nFROM stars s\\nJOIN repos r\\nON s.repo_id = r.id\\nGROUP BY r.id\\nORDER BY stars DESC;\",\n      \"username\": \"mariadb\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"User\",\n    \"metadata\": {\n      \"name\": \"user\"\n    },\n    \"spec\": {\n      \"host\": \"%\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"maxUserConnections\": 20,\n      \"passwordSecretKeyRef\": {\n        \"key\": \"password\",\n        \"name\": \"mariadb\"\n      },\n      \"retryInterval\": \"5s\"\n    }\n  }\n]",
        "capabilities": "Deep Insights",
        "categories": "Database",
        "containerImage": "ghcr.io/mariadb-operator/mariadb-operator-helm:25.8.3",
        "createdAt": "2025-08-08T12:14:12Z",
        "description": "Run and operate MariaDB in a cloud native way",
        "features.operators.openshift.io/disconnected": "false",
        "features.operators.openshift.io/fips-compliant": "false",
        "features.operators.openshift.io/proxy-aware": "false",
        "features.operators.openshift.io/tls-profiles": "false",
        "features.operators.openshift.io/token-auth-aws": "false",
        "features.operators.openshift.io/token-auth-azure": "false",
        "features.operators.openshift.io/token-auth-gcp": "false",
        "olm.operatorGroup": "global-operators",
        "olm.operatorNamespace": "operators",
        "operatorframework.io/properties": "{\"properties\":[{\"type\":\"olm.gvk\",\"value\":{\"group\":\"helm.mariadb.mmontes.io\",\"kind\":\"MariadbOperator\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Backup\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Connection\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Database\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Grant\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"MariaDB\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"MaxScale\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"PhysicalBackup\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Restore\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"SqlJob\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"User\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.package\",\"value\":{\"packageName\":\"mariadb-operator\",\"version\":\"25.8.3\"}}]}",
        "operators.operatorframework.io/builder": "operator-sdk-v1.26.0",
        "operators.operatorframework.io/project_layout": "helm.sdk.operatorframework.io/v1",
        "repository": "https://github.com/mariadb-operator/mariadb-operator",
        "support": "mariadb-operator"
      },
      "owned_crds": [
        "backups.k8s.mariadb.com",
        "connections.k8s.mariadb.com",
        "databases.k8s.mariadb.com",
        "grants.k8s.mariadb.com",
        "mariadboperators.helm.mariadb.mmontes.io",
        "mariadbs.k8s.mariadb.com",
        "maxscales.k8s.mariadb.com",
        "physicalbackups.k8s.mariadb.com",
        "restores.k8s.mariadb.com",
        "sqljobs.k8s.mariadb.com",
        "users.k8s.mariadb.com"
      ],
      "required_crds": [],
      "permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps"
              ],
              "verbs": [
                "get",
                "list",
                "watch",
                "create",
                "update",
                "patch",
                "delete"
              ]
            },
            {
              "apiGroups": [
                "coordination.k8s.io"
              ],
              "resources": [
                "leases"
              ],
              "verbs": [
                "get",
                "list",
                "watch",
                "create",
                "update",
                "patch",
                "delete"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "events"
              ],
              "verbs": [
                "create",
                "patch"
              ]
            }
          ],
          "serviceAccountName": "mariadb-operator-helm-controller-manager"
        }
      ],
      "cluster_permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "namespaces"
              ],
              "verbs": [
                "get"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "secrets"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "events"
              ],
              "verbs": [
                "create"
              ]
            },
            {
              "apiGroups": [
                "helm.mariadb.mmontes.io"
              ],
              "resources": [
                "mariadboperators",
                "mariadboperators/status",
                "mariadboperators/finalizers"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "rbac.authorization.k8s.io"
              ],
              "resources": [
                "clusterrolebindings",
                "clusterroles"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "admissionregistration.k8s.io"
              ],
              "resources": [
                "validatingwebhookconfigurations",
                "mutatingwebhookconfigurations"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "rbac.authorization.k8s.io"
              ],
              "resources": [
                "rolebindings",
                "roles"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "apps"
              ],
              "resources": [
                "deployments"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "serviceaccounts",
                "services"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "apiextensions.k8s.io"
              ],
              "resources": [
                "customresourcedefinitions"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "cert-manager.io"
              ],
              "resources": [
                "certificates",
                "issuers"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "monitoring.coreos.com"
              ],
              "resources": [
                "servicemonitors"
              ],
              "verbs": [
                "*"
              ]
            }
          ],
          "serviceAccountName": "mariadb-operator-helm-controller-manager"
        }
      ],
      "replaces": "mariadb-operator.v25.8.2",
      "skips": [],
      "min_kube_version": "1.16.0"
    },
    {
      "name": "oracle-database-operator.v1.2.0",
      "namespace": "kube-public",
      "display_name": "Oracle Database Operator",
      "version": "1.2.0",
      "phase": "Installing",
      "description": "As part of Oracle's resolution to make Oracle Database Kubernetes native (that is, observable and operable by Kubernetes), Oracle released Oracle Database Operator for Kubernetes (OraOperator or the operator). OraOperator extends the Kubernetes API with custom resources and controllers for automating Oracle Database lifecycle management.\nIn this v1.2.0 production release, OraOperator supports the following database configurations and infrastructure:\n##Supported Database Configurations:\n* Oracle Cloud Infrastructure (OCI) Databases\n  * Oracle Autonomous Database Serverless (ADB-S)\n  * Oracle Autonomous Database on Dedicated on (ADB-D)\n  * Oracle Base Database Cloud Service (Base DB)\n* Containerized Database deployments on Kubernetes\n  * Oracle Kubernetes Engine (OKE) and Oracle Cloud Native Environments (OCNE)\n    * Single Instance databases (SIDB)\n    * Globally Distributed Databases (Shared)\n    * Oracle Data Guard\n    * True Cache (Preview release)\n    * Oracle Database Observability\n* On-Premises Databases\n  * Oracle Multitenant Databases (CDB/PDBs management)\n  * ORDS Services\n\nRefer to full feature list and capabilities: [https://github.com/oracle/oracle-database-operator/blob/main/README.md](https://github.com/oracle/oracle-database-operator/blob/main/README.md)\n",
      "provider": "Oracle",
      "install_strategy": "OwnNamespace",
      "creation_timestamp": "2025-09-07T09:13:37Z",
      "labels": {
        "olm.copiedFrom": "operators",
        "olm.managed": "true"
      },
      "annotations": {
        "alm-examples": "[\n  {\n    \"apiVersion\": \"database.oracle.com/v1alpha1\",\n    \"kind\": \"CDB\",\n    \"metadata\": {\n      \"name\": \"cdb-dev\",\n      \"namespace\": \"oracle-database-operator-system\"\n    },\n    \"spec\": {\n      \"cdbAdminPwd\": {\n        \"secret\": {\n          \"key\": \"cdbadmin_pwd\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"cdbAdminUser\": {\n        \"secret\": {\n          \"key\": \"cdbadmin_user\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"cdbName\": \"devcdb\",\n      \"dbPort\": 1521,\n      \"dbServer\": \"172.17.0.4\",\n      \"ordsImage\": \"\",\n      \"ordsImagePullPolicy\": \"Always\",\n      \"ordsPwd\": {\n        \"secret\": {\n          \"key\": \"ords_pwd\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"replicas\": 1,\n      \"serviceName\": \"devdb.example.com\",\n      \"sysAdminPwd\": {\n        \"secret\": {\n          \"key\": \"sysadmin_pwd\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"webServerPwd\": {\n        \"secret\": {\n          \"key\": \"webserver_pwd\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"webServerUser\": {\n        \"secret\": {\n          \"key\": \"webserver_user\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v1alpha1\",\n    \"kind\": \"DbcsSystem\",\n    \"metadata\": {\n      \"name\": \"dbcssystem-sample\"\n    },\n    \"spec\": {\n      \"foo\": \"bar\"\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v1alpha1\",\n    \"kind\": \"PDB\",\n    \"metadata\": {\n      \"labels\": {\n        \"cdb\": \"cdb-dev\"\n      },\n      \"name\": \"pdb1\",\n      \"namespace\": \"oracle-database-operator-system\"\n    },\n    \"spec\": {\n      \"action\": \"Create\",\n      \"adminName\": {\n        \"secret\": {\n          \"key\": \"sysadmin_user\",\n          \"secretName\": \"pdb1-secret\"\n        }\n      },\n      \"adminPwd\": {\n        \"secret\": {\n          \"key\": \"sysadmin_pwd\",\n          \"secretName\": \"pdb1-secret\"\n        }\n      },\n      \"cdbName\": \"devcdb\",\n      \"cdbResName\": \"cdb-dev\",\n      \"fileNameConversions\": \"NONE\",\n      \"pdbName\": \"pdbdev\",\n      \"tempSize\": \"100M\",\n      \"totalSize\": \"1G\"\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v4\",\n    \"kind\": \"AutonomousContainerDatabase\",\n    \"metadata\": {\n      \"name\": \"autonomouscontainerdatabase-sample\"\n    },\n    \"spec\": {\n      \"autonomousExadataVMClusterOCID\": \"ocid1.autonomousexainfrastructure...\",\n      \"compartmentOCID\": \"ocid1.compartment... OR ocid1.tenancy...\",\n      \"displayName\": \"newACD\",\n      \"ociConfig\": {\n        \"configMapName\": \"oci-cred\",\n        \"secretName\": \"oci-privatekey\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v4\",\n    \"kind\": \"AutonomousDatabase\",\n    \"metadata\": {\n      \"name\": \"autonomousdatabase-sample\"\n    },\n    \"spec\": {\n      \"action\": \"Create\",\n      \"details\": {\n        \"adminPassword\": {\n          \"k8sSecret\": {\n            \"name\": \"admin-password\"\n          }\n        },\n        \"compartmentId\": \"ocid1.compartment... OR ocid1.tenancy...\",\n        \"cpuCoreCount\": 1,\n        \"dataStorageSizeInTBs\": 1,\n        \"dbName\": \"NewADB\",\n        \"displayName\": \"NewADB\"\n      },\n      \"ociConfig\": {\n        \"configMapName\": \"oci-cred\",\n        \"secretName\": \"oci-privatekey\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v4\",\n    \"kind\": \"AutonomousDatabaseBackup\",\n    \"metadata\": {\n      \"name\": \"autonomousdatabasebackup-sample\"\n    },\n    \"spec\": {\n      \"displayName\": \"autonomousdatabasebackup-sample\",\n      \"isLongTermBackup\": true,\n      \"ociConfig\": {\n        \"configMapName\": \"oci-cred\",\n        \"secretName\": \"oci-privatekey\"\n      },\n      \"retentionPeriodInDays\": 90,\n      \"target\": {\n        \"k8sADB\": {\n          \"name\": \"autonomousdatabase-sample\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v4\",\n    \"kind\": \"SingleInstanceDatabase\",\n    \"metadata\": {\n      \"name\": \"sidb-sample\",\n      \"namespace\": \"default\"\n    },\n    \"spec\": {\n      \"adminPassword\": {\n        \"secretName\": \"db-admin-secret\"\n      },\n      \"archiveLog\": true,\n      \"charset\": \"AL32UTF8\",\n      \"edition\": \"enterprise\",\n      \"image\": {\n        \"pullFrom\": \"container-registry.oracle.com/database/enterprise_ru:19\",\n        \"pullSecrets\": \"oracle-container-registry-secret\"\n      },\n      \"pdbName\": \"orclpdb1\",\n      \"persistence\": {\n        \"accessMode\": \"ReadWriteOnce\",\n        \"size\": \"100Gi\",\n        \"storageClass\": \"oci-bv\"\n      },\n      \"replicas\": 1,\n      \"sid\": \"ORCL1\"\n    }\n  },\n  {\n    \"apiVersion\": \"observability.oracle.com/v1alpha1\",\n    \"kind\": \"DatabaseObserver\",\n    \"metadata\": {\n      \"name\": \"obs-sample\"\n    },\n    \"spec\": {\n      \"database\": {\n        \"dbConnectionString\": {\n          \"key\": \"connection\",\n          \"secret\": \"db-secret\"\n        },\n        \"dbPassword\": {\n          \"key\": \"password\",\n          \"secret\": \"db-secret\"\n        },\n        \"dbUser\": {\n          \"key\": \"username\",\n          \"secret\": \"db-secret\"\n        },\n        \"dbWallet\": {\n          \"secret\": \"instance-wallet\"\n        }\n      },\n      \"exporter\": {\n        \"configuration\": {\n          \"configmap\": {\n            \"configmapName\": \"devcm-oradevdb-config\",\n            \"key\": \"config.toml\"\n          }\n        },\n        \"image\": \"container-registry.oracle.com/database/observability-exporter:latest\",\n        \"service\": {\n          \"port\": 9161\n        }\n      },\n      \"ociConfig\": {\n        \"configMapName\": \"oci-cred\",\n        \"secretName\": \"oci-privatekey\"\n      },\n      \"prometheus\": {\n        \"labels\": {\n          \"app\": \"app-sample-label\"\n        },\n        \"port\": \"metrics\"\n      },\n      \"replicas\": 1\n    }\n  }\n]",
        "capabilities": "Seamless Upgrades",
        "categories": "Database",
        "containerImage": "container-registry.oracle.com/database/operator:1.2.0",
        "createdAt": "2025-04-10T20:09:48Z",
        "olm.operatorGroup": "global-operators",
        "olm.operatorNamespace": "operators",
        "operatorframework.io/properties": "{\"properties\":[{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousContainerDatabase\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousContainerDatabase\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabase\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabase\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabaseBackup\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabaseBackup\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabaseRestore\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabaseRestore\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"CDB\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"CDB\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"DataguardBroker\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"DataguardBroker\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"DbcsSystem\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"DbcsSystem\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"LREST\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"LRPDB\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"OracleRestDataService\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"OracleRestDataService\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"OrdsSrvs\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"PDB\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"PDB\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"ShardingDatabase\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"ShardingDatabase\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"SingleInstanceDatabase\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"SingleInstanceDatabase\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"observability.oracle.com\",\"kind\":\"DatabaseObserver\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"observability.oracle.com\",\"kind\":\"DatabaseObserver\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"observability.oracle.com\",\"kind\":\"DatabaseObserver\",\"version\":\"v4\"}},{\"type\":\"olm.package\",\"value\":{\"packageName\":\"oracle-database-operator\",\"version\":\"1.2.0\"}}]}",
        "operators.operatorframework.io/builder": "operator-sdk-v1.39.2",
        "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v4"
      },
      "owned_crds": [
        "autonomouscontainerdatabases.database.oracle.com",
        "autonomouscontainerdatabases.database.oracle.com",
        "autonomousdatabasebackups.database.oracle.com",
        "autonomousdatabasebackups.database.oracle.com",
        "autonomousdatabaserestores.database.oracle.com",
        "autonomousdatabaserestores.database.oracle.com",
        "autonomousdatabases.database.oracle.com",
        "autonomousdatabases.database.oracle.com",
        "cdbs.database.oracle.com",
        "cdbs.database.oracle.com",
        "databaseobservers.observability.oracle.com",
        "databaseobservers.observability.oracle.com",
        "databaseobservers.observability.oracle.com",
        "dataguardbrokers.database.oracle.com",
        "dataguardbrokers.database.oracle.com",
        "dbcssystems.database.oracle.com",
        "dbcssystems.database.oracle.com",
        "lrests.database.oracle.com",
        "lrpdbs.database.oracle.com",
        "oraclerestdataservices.database.oracle.com",
        "oraclerestdataservices.database.oracle.com",
        "ordssrvs.database.oracle.com",
        "pdbs.database.oracle.com",
        "pdbs.database.oracle.com",
        "shardingdatabases.database.oracle.com",
        "shardingdatabases.database.oracle.com",
        "singleinstancedatabases.database.oracle.com",
        "singleinstancedatabases.database.oracle.com"
      ],
      "required_crds": [],
      "permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps"
              ],
              "verbs": [
                "get",
                "list",
                "watch",
                "create",
                "update",
                "patch",
                "delete"
              ]
            },
            {
              "apiGroups": [
                "coordination.k8s.io"
              ],
              "resources": [
                "leases"
              ],
              "verbs": [
                "get",
                "list",
                "watch",
                "create",
                "update",
                "patch",
                "delete"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps/status"
              ],
              "verbs": [
                "get",
                "update",
                "patch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "events"
              ],
              "verbs": [
                "create",
                "patch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps",
                "containers",
                "deployments",
                "events",
                "namespaces",
                "persistentvolumeclaims",
                "pods",
                "pods/exec",
                "pods/log",
                "replicasets",
                "secrets",
                "services"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps/status",
                "daemonsets/status",
                "deployments/status",
                "services/status",
                "statefulsets/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "persistentvolumes"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "secrets/status"
              ],
              "verbs": [
                "get"
              ]
            },
            {
              "apiGroups": [
                "''"
              ],
              "resources": [
                "statefulsets/finalizers"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "apps"
              ],
              "resources": [
                "configmaps"
              ],
              "verbs": [
                "get",
                "list"
              ]
            },
            {
              "apiGroups": [
                "apps"
              ],
              "resources": [
                "daemonsets",
                "deployments",
                "pods",
                "replicasets",
                "services",
                "statefulsets"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "coordination.k8s.io"
              ],
              "resources": [
                "leases"
              ],
              "verbs": [
                "create",
                "get",
                "list",
                "update"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "autonomouscontainerdatabases",
                "autonomousdatabases",
                "cdbs",
                "dataguardbrokers",
                "dbcssystems",
                "events",
                "lrests",
                "lrpdbs",
                "oraclerestdataservices",
                "ordssrvs",
                "pdbs",
                "shardingdatabases",
                "singleinstancedatabases"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "autonomouscontainerdatabases/status",
                "autonomousdatabasebackups/status",
                "autonomousdatabaserestores/status",
                "cdbs/status",
                "dataguardbrokers/status",
                "dbcssystems/status",
                "lrests/status",
                "lrpdbs/status",
                "oraclerestdataservices/status",
                "ordssrvs/status",
                "pdbs/status",
                "shardingdatabases/status",
                "singleinstancedatabases/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "autonomousdatabasebackups",
                "autonomousdatabaserestores"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "autonomousdatabases/status"
              ],
              "verbs": [
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "cdbs/finalizers",
                "dataguardbrokers/finalizers",
                "lrests/finalizers",
                "oraclerestdataservices/finalizers",
                "ordssrvs/finalizers",
                "singleinstancedatabases/finalizers"
              ],
              "verbs": [
                "update"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "dbcssystems/finalizers",
                "lrpdbs/finalizers",
                "pdbs/finalizers",
                "shardingdatabases/finalizers"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "monitoring.coreos.com"
              ],
              "resources": [
                "servicemonitors"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "observability.oracle.com"
              ],
              "resources": [
                "databaseobservers"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "observability.oracle.com"
              ],
              "resources": [
                "databaseobservers/finalizers"
              ],
              "verbs": [
                "update"
              ]
            },
            {
              "apiGroups": [
                "observability.oracle.com"
              ],
              "resources": [
                "databaseobservers/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "storage.k8s.io"
              ],
              "resources": [
                "storageclasses"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            }
          ],
          "serviceAccountName": "default"
        }
      ],
      "cluster_permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                "authentication.k8s.io"
              ],
              "resources": [
                "tokenreviews"
              ],
              "verbs": [
                "create"
              ]
            },
            {
              "apiGroups": [
                "authorization.k8s.io"
              ],
              "resources": [
                "subjectaccessreviews"
              ],
              "verbs": [
                "create"
              ]
            }
          ],
          "serviceAccountName": "default"
        }
      ],
      "replaces": "oracle-database-operator.v1.1.0",
      "skips": [],
      "min_kube_version": ""
    },
    {
      "name": "cloudnative-pg.v1.27.0",
      "namespace": "kube-system",
      "display_name": "CloudNativePG",
      "version": "1.27.0",
      "phase": "Succeeded",
      "description": "Main features:\n\n- Direct integration with the Kubernetes API server for High Availability,\n  eliminating the need for external tools.\n- Self-healing capabilities, including:\n    - Automated failover by promoting the most aligned replica.\n    - Automatic recreation of failed replicas.\n- Planned switchover of the primary instance by promoting a selected replica.\n- Declarative management of key PostgreSQL configurations, including:\n    - PostgreSQL settings.\n    - Roles, users, and groups.\n    - Databases, extensions, and schemas.\n    - Tablespaces (including temporary tablespaces).\n- Flexible instance definition, supporting any number of instances (minimum 1\n  primary server).\n- Scale-up/down capabilities to dynamically adjust cluster size.\n- Read-Write and Read-Only Services, ensuring applications connect correctly:\n    - *Read-Write Service*: Routes connections to the primary server.\n    - *Read-Only Service*: Distributes connections among replicas for read workloads.\n- Support for quorum-based and priority-based PostgreSQL Synchronous\n  Replication.\n- Replica clusters enabling PostgreSQL distributed topologies across multiple\n  Kubernetes clusters (private, public, hybrid, and multi-cloud).\n- Delayed Replica clusters for point-in-time access to historical data.\n- Persistent volume management, including:\n    - Support for Local Persistent Volumes with PVC templates.\n    - Reuse of Persistent Volumes storage in Pods.\n    - Separate volumes for WAL files and tablespaces.\n- Backup and recovery options, including:\n    - Integration with the [Barman Cloud plugin](https://github.com/cloudnative-pg/plugin-barman-cloud)\n      for continuous online backup via WAL archiving to AWS S3, S3-compatible\n      services, Azure Blob Storage, and Google Cloud Storage, with support for\n      retention policies based on a configurable recovery window.\n    - Backups using volume snapshots (where supported by storage classes).\n    - Full and Point-In-Time recovery from volume snapshots or object stores (via Barman Cloud plugin).\n    - Backup from standby replicas to reduce primary workload impact.\n- Offline and online import of PostgreSQL databases, including major upgrades:\n    - *Offline Import*: Direct restore from existing databases.\n    - *Online Import*: PostgreSQL native logical replication via the `Subscription` resource.\n- Offline In-Place Major Upgrades of PostgreSQL\n- High Availability physical replication slots, including synchronization of\n  user-defined replication slots.\n- Parallel WAL archiving and restore, ensuring high-performance data\n  synchronization in high-write environments.\n- TLS support, including:\n    - Secure connections and client certificate authentication.\n    - Custom TLS certificates (integrated with `cert-manager`).\n- Startup and readiness probes, including replica probes based on desired lag\n  from the primary.\n- Declarative rolling updates for:\n    - PostgreSQL minor versions.\n    - Operator upgrades (in-place or rolling updates).\n- Standard output logging of PostgreSQL error messages in JSON format for\n  easier integration with log aggregation tools.\n- Prometheus-compatible metrics exporter (`metrics` port 9187) for custom\n  monitoring.\n- `cnpg` plugin for `kubectl` to simplify cluster operations.\n- Cluster hibernation for resource efficiency in inactive states.\n- Fencing of PostgreSQL clusters (full cluster or subset) to isolate instances\n  when needed.\n- Connection pooling with PgBouncer for improved database efficiency.\n- OLM (Operator Lifecycle Manager) installation support for streamlined\n  deployments.\n- Multi-arch container images, including Software Bill of Materials (SBOM) and\n  provenance attestations for security compliance.\n",
      "provider": "The CloudNativePG Contributors",
      "install_strategy": "OwnNamespace",
      "creation_timestamp": "2025-09-07T09:12:58Z",
      "labels": {
        "olm.copiedFrom": "operators",
        "olm.managed": "true",
        "operatorframework.io/arch.amd64": "supported"
      },
      "annotations": {
        "alm-examples": "[\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"backup-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      }\n    },\n    \"status\": {\n      \"serverName\": null\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Cluster\",\n    \"metadata\": {\n      \"name\": \"cluster-sample\"\n    },\n    \"spec\": {\n      \"instances\": 3,\n      \"logLevel\": \"info\",\n      \"primaryUpdateStrategy\": \"unsupervised\",\n      \"storage\": {\n        \"size\": \"1Gi\"\n      },\n      \"walStorage\": {\n        \"size\": \"1Gi\"\n      }\n    },\n    \"status\": {\n      \"instances\": 3\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"ClusterImageCatalog\",\n    \"metadata\": {\n      \"name\": \"postgresql\"\n    },\n    \"spec\": {\n      \"images\": [\n        {\n          \"image\": \"ghcr.io/cloudnative-pg/postgresql@sha256:1c97e0d6e94d8b335be7f258eeda2202966df5fde0c934eef4b13c760ec6a891\",\n          \"major\": 15\n        },\n        {\n          \"image\": \"ghcr.io/cloudnative-pg/postgresql@sha256:ee2e3ce7f0ea935c3f4ab245c0b3959c9f1c49816ae02222ceb6bc347f48e43b\",\n          \"major\": 16\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Database\",\n    \"metadata\": {\n      \"name\": \"database-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      },\n      \"name\": \"database-sample\",\n      \"owner\": \"app\"\n    },\n    \"status\": {\n      \"applied\": false\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"ImageCatalog\",\n    \"metadata\": {\n      \"name\": \"postgresql\",\n      \"namespace\": \"default\"\n    },\n    \"spec\": {\n      \"images\": [\n        {\n          \"image\": \"ghcr.io/cloudnative-pg/postgresql@sha256:1c97e0d6e94d8b335be7f258eeda2202966df5fde0c934eef4b13c760ec6a891\",\n          \"major\": 15\n        },\n        {\n          \"image\": \"ghcr.io/cloudnative-pg/postgresql@sha256:ee2e3ce7f0ea935c3f4ab245c0b3959c9f1c49816ae02222ceb6bc347f48e43b\",\n          \"major\": 16\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Pooler\",\n    \"metadata\": {\n      \"name\": \"pooler-sample-rw\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      },\n      \"instances\": 1,\n      \"pgbouncer\": {\n        \"poolMode\": \"session\"\n      },\n      \"type\": \"rw\"\n    },\n    \"status\": {\n      \"instances\": 1\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Publication\",\n    \"metadata\": {\n      \"name\": \"publication-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      },\n      \"dbname\": \"app\",\n      \"name\": \"pub\",\n      \"target\": {\n        \"allTables\": true\n      }\n    },\n    \"status\": {\n      \"applied\": false\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"ScheduledBackup\",\n    \"metadata\": {\n      \"name\": \"scheduledbackup-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      },\n      \"schedule\": \"0 0 0 * * *\"\n    },\n    \"status\": {\n      \"lastCheckTime\": null\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Subscription\",\n    \"metadata\": {\n      \"name\": \"subscription-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample-dest\"\n      },\n      \"dbname\": \"app\",\n      \"externalClusterName\": \"cluster-sample\",\n      \"name\": \"sub\",\n      \"publicationName\": \"pub\"\n    },\n    \"status\": {\n      \"applied\": false\n    }\n  }\n]",
        "capabilities": "Auto Pilot",
        "categories": "Database",
        "certified": "true",
        "containerImage": "ghcr.io/cloudnative-pg/cloudnative-pg@sha256:53995e9d6a7760c77d77e5298f78b49029427494f4dd933d5fa7a74f7af3bb44",
        "createdAt": "2025-08-12T14:08:35Z",
        "description": "CloudNativePG is an open source operator designed to manage highly available PostgreSQL databases with a primary/standby architecture on any supported Kubernetes cluster.",
        "features.operators.openshift.io/disconnected": "true",
        "features.operators.openshift.io/fips-compliant": "false",
        "features.operators.openshift.io/proxy-aware": "false",
        "features.operators.openshift.io/tls-profiles": "false",
        "features.operators.openshift.io/token-auth-aws": "false",
        "features.operators.openshift.io/token-auth-azure": "false",
        "features.operators.openshift.io/token-auth-gcp": "false",
        "olm.operatorGroup": "global-operators",
        "olm.operatorNamespace": "operators",
        "operatorframework.io/properties": "{\"properties\":[{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Backup\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Cluster\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"ClusterImageCatalog\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Database\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"FailoverQuorum\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"ImageCatalog\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Pooler\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Publication\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"ScheduledBackup\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Subscription\",\"version\":\"v1\"}},{\"type\":\"olm.package\",\"value\":{\"packageName\":\"cloudnative-pg\",\"version\":\"1.27.0\"}}]}",
        "operators.operatorframework.io/builder": "operator-sdk-v1.41.1",
        "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v4",
        "repository": "https://github.com/cloudnative-pg/cloudnative-pg",
        "support": "Community"
      },
      "owned_crds": [
        "backups.postgresql.cnpg.io",
        "clusterimagecatalogs.postgresql.cnpg.io",
        "clusters.postgresql.cnpg.io",
        "databases.postgresql.cnpg.io",
        "failoverquorums.postgresql.cnpg.io",
        "imagecatalogs.postgresql.cnpg.io",
        "poolers.postgresql.cnpg.io",
        "publications.postgresql.cnpg.io",
        "scheduledbackups.postgresql.cnpg.io",
        "subscriptions.postgresql.cnpg.io"
      ],
      "required_crds": [],
      "permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps",
                "secrets",
                "services"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps/status",
                "secrets/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "events"
              ],
              "verbs": [
                "create",
                "patch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "nodes"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "persistentvolumeclaims",
                "pods",
                "pods/exec"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "pods/status"
              ],
              "verbs": [
                "get"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "serviceaccounts"
              ],
              "verbs": [
                "create",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "admissionregistration.k8s.io"
              ],
              "resources": [
                "mutatingwebhookconfigurations",
                "validatingwebhookconfigurations"
              ],
              "verbs": [
                "get",
                "patch"
              ]
            },
            {
              "apiGroups": [
                "apps"
              ],
              "resources": [
                "deployments"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "batch"
              ],
              "resources": [
                "jobs"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "coordination.k8s.io"
              ],
              "resources": [
                "leases"
              ],
              "verbs": [
                "create",
                "get",
                "update"
              ]
            },
            {
              "apiGroups": [
                "monitoring.coreos.com"
              ],
              "resources": [
                "podmonitors"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "policy"
              ],
              "resources": [
                "poddisruptionbudgets"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "backups",
                "clusters",
                "databases",
                "poolers",
                "publications",
                "scheduledbackups",
                "subscriptions"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "backups/status",
                "databases/status",
                "publications/status",
                "scheduledbackups/status",
                "subscriptions/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "clusterimagecatalogs",
                "imagecatalogs"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "clusters/finalizers",
                "poolers/finalizers"
              ],
              "verbs": [
                "update"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "clusters/status",
                "failoverquorums/status",
                "poolers/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "failoverquorums"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "rbac.authorization.k8s.io"
              ],
              "resources": [
                "rolebindings",
                "roles"
              ],
              "verbs": [
                "create",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "snapshot.storage.k8s.io"
              ],
              "resources": [
                "volumesnapshots"
              ],
              "verbs": [
                "create",
                "get",
                "list",
                "patch",
                "watch"
              ]
            }
          ],
          "serviceAccountName": "cnpg-manager"
        }
      ],
      "cluster_permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "nodes"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "clusterimagecatalogs"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            }
          ],
          "serviceAccountName": "cnpg-manager"
        }
      ],
      "replaces": "cloudnative-pg.v1.26.1",
      "skips": [],
      "min_kube_version": "1.23.0"
    },
    {
      "name": "mariadb-operator.v25.8.3",
      "namespace": "kube-system",
      "display_name": "MariaDB Operator",
      "version": "25.8.3",
      "phase": "Succeeded",
      "description": "Install [`mariadb-operator`](https://github.com/mariadb-operator/mariadb-operator) via [OLM](https://olm.operatorframework.io/) using the [helm chart](https://artifacthub.io/packages/helm/mariadb-operator/mariadb-operator).\n\nThis helm operator provides provides a 1:1 mapping between the official helm chart and the [`MariadbOperator`](https://github.com/mariadb-operator/mariadb-operator-helm/blob/main/config/samples/helm_v1alpha1_mariadboperator.yaml) CRD, allowing to install [`mariadb-operator`](https://github.com/mariadb-operator/mariadb-operator) via OLM without having to do any change in the helm chart.\n\nNormally, you would install [`mariadb-operator`](https://github.com/mariadb-operator/mariadb-operator) providing this `values.yaml` to the helm chart:\n```yaml\nimage:\n  repository: ghcr.io/mariadb-operator/mariadb-operator\n  pullPolicy: IfNotPresent\nlogLevel: INFO\nha:\n  enabled: true\nmetrics:\n  enabled: true\n  serviceMonitor:\n    enabled: true\nwebhook:\n  cert:\n    certManager:\n      enabled: true\n```\n\nThis helm chart installation is abstracted in the [`MariadbOperator`](https://github.com/mariadb-operator/mariadb-operator-helm/blob/main/config/samples/helm_v1alpha1_mariadboperator.yaml) CRD, which will be reconciled by the helm operator:\n```yaml\napiVersion: helm.k8s.mariadb.com/v1alpha1\nkind: MariadbOperator\nmetadata:\n  name: mariadb-operator\nspec:\n  image:\n    repository: ghcr.io/mariadb-operator/mariadb-operator\n    pullPolicy: IfNotPresent\n  logLevel: INFO\n  ha:\n    enabled: true\n  metrics:\n    enabled: true\n    serviceMonitor:\n      enabled: true\n  webhook:\n    cert:\n      certManager:\n        enabled: true\n```\n\nOnce you have installed the operator, you will able to install a [`MariaDB`](https://github.com/mariadb-operator/mariadb-operator/blob/main/examples/manifests/mariadb_v1alpha1_mariadb.yaml) instance. Refer to the main [`mariadb-operator`](https://github.com/mariadb-operator/mariadb-operator) documentation for getting started with the rest of CRDs.\n\n## Documentation\n* [mariadb-operator](https://github.com/mariadb-operator/mariadb-operator/blob/main/README.md)\n* [mariadb-operator-helm](https://github.com/mariadb-operator/mariadb-operator-helm/blob/main/README.md)\n\n## Releases\nThis operator is automatically published in the following repositories whenever a new version of the [helm chart](https://artifacthub.io/packages/helm/mariadb-operator/mariadb-operator) is released:\n- [k8s-operatorhub/community-operators](https://github.com/k8s-operatorhub/community-operators)\n- [redhat-openshift-ecosystem/community-operators-prod](https://github.com/redhat-openshift-ecosystem/community-operators-prod)\n\n## Roadmap\nTake a look at our [roadmap](https://github.com/mariadb-operator/mariadb-operator/blob/main/ROADMAP.md) and feel free to open an issue to suggest new features.\n\n## Contributing\nWe welcome and encourage contributions to this project! Please check our [contributing](https://github.com/mariadb-operator/mariadb-operator/blob/main/CONTRIBUTING.md) and [development](https://github.com/mariadb-operator/mariadb-operator/blob/main/docs/DEVELOPMENT.md) guides. PRs welcome!\n\n## Get in touch\nJoin us on Slack: **[MariaDB Community Slack](https://r.mariadb.com/join-community-slack)**.\n",
      "provider": "mariadb-operator",
      "install_strategy": "OwnNamespace",
      "creation_timestamp": "2025-09-07T09:15:59Z",
      "labels": {
        "olm.copiedFrom": "operators",
        "olm.managed": "true"
      },
      "annotations": {
        "alm-examples": "[\n  {\n    \"apiVersion\": \"helm.mariadb.mmontes.io/v1alpha1\",\n    \"kind\": \"MariadbOperator\",\n    \"metadata\": {\n      \"name\": \"mariadb-operator\"\n    },\n    \"spec\": {\n      \"affinity\": {},\n      \"certController\": {\n        \"affinity\": {},\n        \"caValidity\": \"35064h\",\n        \"certValidity\": \"8766h\",\n        \"enabled\": true,\n        \"extrArgs\": [],\n        \"extraVolumeMounts\": [],\n        \"extraVolumes\": [],\n        \"ha\": {\n          \"enabled\": false,\n          \"replicas\": 3\n        },\n        \"image\": {\n          \"pullPolicy\": \"IfNotPresent\",\n          \"repository\": \"ghcr.io/mariadb-operator/mariadb-operator\",\n          \"tag\": \"\"\n        },\n        \"imagePullSecrets\": [],\n        \"lookaheadValidity\": \"2160h\",\n        \"nodeSelector\": {},\n        \"podAnnotations\": {},\n        \"podSecurityContext\": {},\n        \"requeueDuration\": \"5m\",\n        \"resources\": {},\n        \"securityContext\": {},\n        \"serviceAccount\": {\n          \"annotations\": {},\n          \"automount\": true,\n          \"enabled\": true,\n          \"extraLabels\": {},\n          \"name\": \"\"\n        },\n        \"serviceMonitor\": {\n          \"additionalLabels\": {},\n          \"enabled\": true,\n          \"interval\": \"30s\",\n          \"scrapeTimeout\": \"25s\"\n        },\n        \"tolerations\": []\n      },\n      \"clusterName\": \"cluster.local\",\n      \"extrArgs\": [],\n      \"extraVolumeMounts\": [],\n      \"extraVolumes\": [],\n      \"fullnameOverride\": \"\",\n      \"ha\": {\n        \"enabled\": false,\n        \"replicas\": 3\n      },\n      \"image\": {\n        \"pullPolicy\": \"IfNotPresent\",\n        \"repository\": \"ghcr.io/mariadb-operator/mariadb-operator\",\n        \"tag\": \"\"\n      },\n      \"imagePullSecrets\": [],\n      \"logLevel\": \"INFO\",\n      \"metrics\": {\n        \"enabled\": false,\n        \"serviceMonitor\": {\n          \"additionalLabels\": {},\n          \"enabled\": true,\n          \"interval\": \"30s\",\n          \"scrapeTimeout\": \"25s\"\n        }\n      },\n      \"nameOverride\": \"\",\n      \"nodeSelector\": {},\n      \"podAnnotations\": {},\n      \"podSecurityContext\": {},\n      \"rbac\": {\n        \"enabled\": true\n      },\n      \"resources\": {},\n      \"securityContext\": {},\n      \"serviceAccount\": {\n        \"annotations\": {},\n        \"automount\": true,\n        \"enabled\": true,\n        \"extraLabels\": {},\n        \"name\": \"\"\n      },\n      \"tolerations\": [],\n      \"webhook\": {\n        \"affinity\": {},\n        \"annotations\": {},\n        \"cert\": {\n          \"caPath\": \"/tmp/k8s-webhook-server/certificate-authority\",\n          \"certManager\": {\n            \"duration\": \"\",\n            \"enabled\": false,\n            \"issuerRef\": {},\n            \"renewBefore\": \"\"\n          },\n          \"path\": \"/tmp/k8s-webhook-server/serving-certs\",\n          \"secretAnnotations\": {}\n        },\n        \"extrArgs\": [],\n        \"extraVolumeMounts\": [],\n        \"extraVolumes\": [],\n        \"ha\": {\n          \"enabled\": false,\n          \"replicas\": 3\n        },\n        \"hostNetwork\": false,\n        \"image\": {\n          \"pullPolicy\": \"IfNotPresent\",\n          \"repository\": \"ghcr.io/mariadb-operator/mariadb-operator\",\n          \"tag\": \"\"\n        },\n        \"imagePullSecrets\": [],\n        \"nodeSelector\": {},\n        \"podAnnotations\": {},\n        \"podSecurityContext\": {},\n        \"port\": 10250,\n        \"resources\": {},\n        \"securityContext\": {},\n        \"serviceAccount\": {\n          \"annotations\": {},\n          \"automount\": true,\n          \"enabled\": true,\n          \"extraLabels\": {},\n          \"name\": \"\"\n        },\n        \"serviceMonitor\": {\n          \"additionalLabels\": {},\n          \"enabled\": true,\n          \"interval\": \"30s\",\n          \"scrapeTimeout\": \"25s\"\n        },\n        \"tolerations\": []\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"backup\"\n    },\n    \"spec\": {\n      \"args\": [\n        \"--single-transaction\",\n        \"--all-databases\"\n      ],\n      \"logLevel\": \"info\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"maxRetention\": \"720h\",\n      \"resources\": {\n        \"limits\": {\n          \"cpu\": \"300m\",\n          \"memory\": \"512Mi\"\n        },\n        \"requests\": {\n          \"cpu\": \"100m\",\n          \"memory\": \"128Mi\"\n        }\n      },\n      \"schedule\": {\n        \"cron\": \"*/1 * * * *\",\n        \"suspend\": false\n      },\n      \"storage\": {\n        \"s3\": {\n          \"accessKeyIdSecretKeyRef\": {\n            \"key\": \"access-key-id\",\n            \"name\": \"minio\"\n          },\n          \"bucket\": \"backups\",\n          \"endpoint\": \"minio.minio.svc.cluster.local:9000\",\n          \"prefix\": \"mariadb\",\n          \"secretAccessKeySecretKeyRef\": {\n            \"key\": \"secret-access-key\",\n            \"name\": \"minio\"\n          },\n          \"tls\": {\n            \"caSecretKeyRef\": {\n              \"key\": \"ca.crt\",\n              \"name\": \"minio-ca\"\n            },\n            \"enabled\": true\n          }\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Connection\",\n    \"metadata\": {\n      \"name\": \"connection\"\n    },\n    \"spec\": {\n      \"database\": \"mariadb\",\n      \"healthCheck\": {\n        \"interval\": \"10s\",\n        \"retryInterval\": \"3s\"\n      },\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"params\": {\n        \"parseTime\": \"true\"\n      },\n      \"passwordSecretKeyRef\": {\n        \"key\": \"password\",\n        \"name\": \"mariadb\"\n      },\n      \"secretName\": \"connection\",\n      \"secretTemplate\": {\n        \"annotations\": {\n          \"k8s.mariadb.com/connection\": \"sample\"\n        },\n        \"databaseKey\": \"database\",\n        \"hostKey\": \"host\",\n        \"key\": \"dsn\",\n        \"labels\": {\n          \"k8s.mariadb.com/connection\": \"sample\"\n        },\n        \"passwordKey\": \"password\",\n        \"portKey\": \"port\",\n        \"usernameKey\": \"username\"\n      },\n      \"serviceName\": \"mariadb\",\n      \"username\": \"mariadb\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Database\",\n    \"metadata\": {\n      \"name\": \"data-test\"\n    },\n    \"spec\": {\n      \"characterSet\": \"utf8\",\n      \"collate\": \"utf8_general_ci\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"retryInterval\": \"5s\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Grant\",\n    \"metadata\": {\n      \"name\": \"grant\"\n    },\n    \"spec\": {\n      \"database\": \"*\",\n      \"grantOption\": true,\n      \"host\": \"%\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"privileges\": [\n        \"SELECT\",\n        \"INSERT\",\n        \"UPDATE\"\n      ],\n      \"requeueInterval\": \"30s\",\n      \"retryInterval\": \"5s\",\n      \"table\": \"*\",\n      \"username\": \"user\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"MariaDB\",\n    \"metadata\": {\n      \"name\": \"mariadb\"\n    },\n    \"spec\": {\n      \"connection\": {\n        \"secretName\": \"mariadb-conn\",\n        \"secretTemplate\": {\n          \"key\": \"dsn\"\n        }\n      },\n      \"database\": \"mariadb\",\n      \"galera\": {\n        \"enabled\": true\n      },\n      \"metrics\": {\n        \"enabled\": true,\n        \"passwordSecretKeyRef\": {\n          \"generate\": true,\n          \"key\": \"password\",\n          \"name\": \"mariadb-metrics\"\n        }\n      },\n      \"myCnf\": \"[mariadb]\\nbind-address=*\\ndefault_storage_engine=InnoDB\\nbinlog_format=row\\ninnodb_autoinc_lock_mode=2\\ninnodb_buffer_pool_size=1024M\\nmax_allowed_packet=256M\\n\",\n      \"passwordSecretKeyRef\": {\n        \"generate\": true,\n        \"key\": \"password\",\n        \"name\": \"mariadb-password\"\n      },\n      \"primaryConnection\": {\n        \"secretName\": \"mariadb-conn-primary\",\n        \"secretTemplate\": {\n          \"key\": \"dsn\"\n        }\n      },\n      \"primaryService\": {\n        \"type\": \"ClusterIP\"\n      },\n      \"replicas\": 3,\n      \"rootPasswordSecretKeyRef\": {\n        \"generate\": true,\n        \"key\": \"password\",\n        \"name\": \"mariadb-root\"\n      },\n      \"secondaryConnection\": {\n        \"secretName\": \"mariadb-conn-secondary\",\n        \"secretTemplate\": {\n          \"key\": \"dsn\"\n        }\n      },\n      \"secondaryService\": {\n        \"type\": \"ClusterIP\"\n      },\n      \"service\": {\n        \"type\": \"ClusterIP\"\n      },\n      \"storage\": {\n        \"size\": \"1Gi\"\n      },\n      \"updateStrategy\": {\n        \"type\": \"ReplicasFirstPrimaryLast\"\n      },\n      \"username\": \"mariadb\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"MaxScale\",\n    \"metadata\": {\n      \"name\": \"maxscale-galera\"\n    },\n    \"spec\": {\n      \"admin\": {\n        \"guiEnabled\": true,\n        \"port\": 8989\n      },\n      \"auth\": {\n        \"generate\": true\n      },\n      \"config\": {\n        \"sync\": {\n          \"database\": \"mysql\",\n          \"interval\": \"5s\",\n          \"timeout\": \"10s\"\n        }\n      },\n      \"connection\": {\n        \"port\": 3306,\n        \"secretName\": \"mxs-galera-conn\"\n      },\n      \"guiKubernetesService\": {\n        \"metadata\": {\n          \"annotations\": {\n            \"metallb.universe.tf/loadBalancerIPs\": \"172.18.0.231\"\n          }\n        },\n        \"type\": \"LoadBalancer\"\n      },\n      \"kubernetesService\": {\n        \"annotations\": {\n          \"metallb.universe.tf/loadBalancerIPs\": \"172.18.0.224\"\n        },\n        \"type\": \"LoadBalancer\"\n      },\n      \"mariaDbRef\": {\n        \"name\": \"mariadb-galera\"\n      },\n      \"monitor\": {\n        \"cooperativeMonitoring\": \"majority_of_all\",\n        \"interval\": \"2s\",\n        \"params\": {\n          \"available_when_donor\": \"false\",\n          \"disable_master_failback\": \"false\",\n          \"disable_master_role_setting\": \"false\"\n        }\n      },\n      \"replicas\": 3,\n      \"requeueInterval\": \"10s\",\n      \"services\": [\n        {\n          \"listener\": {\n            \"params\": {\n              \"connection_metadata\": \"tx_isolation=auto\"\n            },\n            \"port\": 3306,\n            \"protocol\": \"MariaDBProtocol\"\n          },\n          \"name\": \"rw-router\",\n          \"params\": {\n            \"master_accept_reads\": \"true\",\n            \"max_replication_lag\": \"3s\",\n            \"max_slave_connections\": \"255\",\n            \"transaction_replay\": \"true\",\n            \"transaction_replay_attempts\": \"10\",\n            \"transaction_replay_timeout\": \"5s\"\n          },\n          \"router\": \"readwritesplit\"\n        },\n        {\n          \"listener\": {\n            \"port\": 3307\n          },\n          \"name\": \"rconn-master-router\",\n          \"params\": {\n            \"master_accept_reads\": \"true\",\n            \"max_replication_lag\": \"3s\",\n            \"router_options\": \"master\"\n          },\n          \"router\": \"readconnroute\"\n        },\n        {\n          \"listener\": {\n            \"port\": 3308\n          },\n          \"name\": \"rconn-slave-router\",\n          \"params\": {\n            \"max_replication_lag\": \"3s\",\n            \"router_options\": \"slave\"\n          },\n          \"router\": \"readconnroute\"\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"PhysicalBackup\",\n    \"metadata\": {\n      \"name\": \"physicalbackup\"\n    },\n    \"spec\": {\n      \"compression\": \"bzip2\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"maxRetention\": \"720h\",\n      \"podAffinity\": true,\n      \"resources\": {\n        \"limits\": {\n          \"cpu\": \"300m\",\n          \"memory\": \"512Mi\"\n        },\n        \"requests\": {\n          \"cpu\": \"100m\",\n          \"memory\": \"128Mi\"\n        }\n      },\n      \"schedule\": {\n        \"cron\": \"*/1 * * * *\",\n        \"immediate\": true,\n        \"suspend\": false\n      },\n      \"serviceAccountName\": \"backup\",\n      \"stagingStorage\": {\n        \"persistentVolumeClaim\": {\n          \"accessModes\": [\n            \"ReadWriteOnce\"\n          ],\n          \"resources\": {\n            \"requests\": {\n              \"storage\": \"1Gi\"\n            }\n          }\n        }\n      },\n      \"storage\": {\n        \"s3\": {\n          \"accessKeyIdSecretKeyRef\": {\n            \"key\": \"access-key-id\",\n            \"name\": \"minio\"\n          },\n          \"bucket\": \"physicalbackups\",\n          \"endpoint\": \"minio.minio.svc.cluster.local:9000\",\n          \"prefix\": \"mariadb\",\n          \"region\": \"us-east-1\",\n          \"secretAccessKeySecretKeyRef\": {\n            \"key\": \"secret-access-key\",\n            \"name\": \"minio\"\n          },\n          \"tls\": {\n            \"caSecretKeyRef\": {\n              \"key\": \"ca.crt\",\n              \"name\": \"minio-ca\"\n            },\n            \"enabled\": true\n          }\n        }\n      },\n      \"timeout\": \"1h\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Restore\",\n    \"metadata\": {\n      \"name\": \"restore\"\n    },\n    \"spec\": {\n      \"backupRef\": {\n        \"name\": \"backup\"\n      },\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"resources\": {\n        \"limits\": {\n          \"cpu\": \"300m\",\n          \"memory\": \"512Mi\"\n        },\n        \"requests\": {\n          \"cpu\": \"100m\",\n          \"memory\": \"128Mi\"\n        }\n      },\n      \"targetRecoveryTime\": \"2023-12-19T09:00:00Z\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"SqlJob\",\n    \"metadata\": {\n      \"name\": \"03-stars\"\n    },\n    \"spec\": {\n      \"database\": \"mariadb\",\n      \"dependsOn\": [\n        {\n          \"name\": \"01-users\"\n        },\n        {\n          \"name\": \"02-repos\"\n        }\n      ],\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"passwordSecretKeyRef\": {\n        \"key\": \"password\",\n        \"name\": \"mariadb\"\n      },\n      \"schedule\": {\n        \"cron\": \"*/1 * * * *\",\n        \"suspend\": false\n      },\n      \"sql\": \"CREATE TABLE IF NOT EXISTS stars (\\n  id bigint PRIMARY KEY AUTO_INCREMENT,\\n  user_id bigint NOT NULL,\\n  repo_id bigint NOT NULL,\\n  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,\\n  FOREIGN KEY (repo_id) REFERENCES repos(id) ON DELETE CASCADE,\\n  UNIQUE KEY (user_id, repo_id)\\n);\\nINSERT INTO stars(user_id, repo_id) \\n  VALUES((SELECT id FROM users ORDER BY RAND() LIMIT 1), (SELECT id FROM repos ORDER BY RAND() LIMIT 1))\\n  ON DUPLICATE KEY UPDATE id=id;\\nDELETE FROM stars WHERE id = (SELECT id FROM stars ORDER BY RAND() LIMIT 1);\\nSELECT r.name AS repo, COUNT(*) AS stars\\nFROM stars s\\nJOIN repos r\\nON s.repo_id = r.id\\nGROUP BY r.id\\nORDER BY stars DESC;\",\n      \"username\": \"mariadb\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"User\",\n    \"metadata\": {\n      \"name\": \"user\"\n    },\n    \"spec\": {\n      \"host\": \"%\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"maxUserConnections\": 20,\n      \"passwordSecretKeyRef\": {\n        \"key\": \"password\",\n        \"name\": \"mariadb\"\n      },\n      \"retryInterval\": \"5s\"\n    }\n  }\n]",
        "capabilities": "Deep Insights",
        "categories": "Database",
        "containerImage": "ghcr.io/mariadb-operator/mariadb-operator-helm:25.8.3",
        "createdAt": "2025-08-08T12:14:12Z",
        "description": "Run and operate MariaDB in a cloud native way",
        "features.operators.openshift.io/disconnected": "false",
        "features.operators.openshift.io/fips-compliant": "false",
        "features.operators.openshift.io/proxy-aware": "false",
        "features.operators.openshift.io/tls-profiles": "false",
        "features.operators.openshift.io/token-auth-aws": "false",
        "features.operators.openshift.io/token-auth-azure": "false",
        "features.operators.openshift.io/token-auth-gcp": "false",
        "olm.operatorGroup": "global-operators",
        "olm.operatorNamespace": "operators",
        "operatorframework.io/properties": "{\"properties\":[{\"type\":\"olm.gvk\",\"value\":{\"group\":\"helm.mariadb.mmontes.io\",\"kind\":\"MariadbOperator\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Backup\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Connection\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Database\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Grant\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"MariaDB\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"MaxScale\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"PhysicalBackup\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Restore\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"SqlJob\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"User\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.package\",\"value\":{\"packageName\":\"mariadb-operator\",\"version\":\"25.8.3\"}}]}",
        "operators.operatorframework.io/builder": "operator-sdk-v1.26.0",
        "operators.operatorframework.io/project_layout": "helm.sdk.operatorframework.io/v1",
        "repository": "https://github.com/mariadb-operator/mariadb-operator",
        "support": "mariadb-operator"
      },
      "owned_crds": [
        "backups.k8s.mariadb.com",
        "connections.k8s.mariadb.com",
        "databases.k8s.mariadb.com",
        "grants.k8s.mariadb.com",
        "mariadboperators.helm.mariadb.mmontes.io",
        "mariadbs.k8s.mariadb.com",
        "maxscales.k8s.mariadb.com",
        "physicalbackups.k8s.mariadb.com",
        "restores.k8s.mariadb.com",
        "sqljobs.k8s.mariadb.com",
        "users.k8s.mariadb.com"
      ],
      "required_crds": [],
      "permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps"
              ],
              "verbs": [
                "get",
                "list",
                "watch",
                "create",
                "update",
                "patch",
                "delete"
              ]
            },
            {
              "apiGroups": [
                "coordination.k8s.io"
              ],
              "resources": [
                "leases"
              ],
              "verbs": [
                "get",
                "list",
                "watch",
                "create",
                "update",
                "patch",
                "delete"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "events"
              ],
              "verbs": [
                "create",
                "patch"
              ]
            }
          ],
          "serviceAccountName": "mariadb-operator-helm-controller-manager"
        }
      ],
      "cluster_permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "namespaces"
              ],
              "verbs": [
                "get"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "secrets"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "events"
              ],
              "verbs": [
                "create"
              ]
            },
            {
              "apiGroups": [
                "helm.mariadb.mmontes.io"
              ],
              "resources": [
                "mariadboperators",
                "mariadboperators/status",
                "mariadboperators/finalizers"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "rbac.authorization.k8s.io"
              ],
              "resources": [
                "clusterrolebindings",
                "clusterroles"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "admissionregistration.k8s.io"
              ],
              "resources": [
                "validatingwebhookconfigurations",
                "mutatingwebhookconfigurations"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "rbac.authorization.k8s.io"
              ],
              "resources": [
                "rolebindings",
                "roles"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "apps"
              ],
              "resources": [
                "deployments"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "serviceaccounts",
                "services"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "apiextensions.k8s.io"
              ],
              "resources": [
                "customresourcedefinitions"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "cert-manager.io"
              ],
              "resources": [
                "certificates",
                "issuers"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "monitoring.coreos.com"
              ],
              "resources": [
                "servicemonitors"
              ],
              "verbs": [
                "*"
              ]
            }
          ],
          "serviceAccountName": "mariadb-operator-helm-controller-manager"
        }
      ],
      "replaces": "mariadb-operator.v25.8.2",
      "skips": [],
      "min_kube_version": "1.16.0"
    },
    {
      "name": "oracle-database-operator.v1.2.0",
      "namespace": "kube-system",
      "display_name": "Oracle Database Operator",
      "version": "1.2.0",
      "phase": "Installing",
      "description": "As part of Oracle's resolution to make Oracle Database Kubernetes native (that is, observable and operable by Kubernetes), Oracle released Oracle Database Operator for Kubernetes (OraOperator or the operator). OraOperator extends the Kubernetes API with custom resources and controllers for automating Oracle Database lifecycle management.\nIn this v1.2.0 production release, OraOperator supports the following database configurations and infrastructure:\n##Supported Database Configurations:\n* Oracle Cloud Infrastructure (OCI) Databases\n  * Oracle Autonomous Database Serverless (ADB-S)\n  * Oracle Autonomous Database on Dedicated on (ADB-D)\n  * Oracle Base Database Cloud Service (Base DB)\n* Containerized Database deployments on Kubernetes\n  * Oracle Kubernetes Engine (OKE) and Oracle Cloud Native Environments (OCNE)\n    * Single Instance databases (SIDB)\n    * Globally Distributed Databases (Shared)\n    * Oracle Data Guard\n    * True Cache (Preview release)\n    * Oracle Database Observability\n* On-Premises Databases\n  * Oracle Multitenant Databases (CDB/PDBs management)\n  * ORDS Services\n\nRefer to full feature list and capabilities: [https://github.com/oracle/oracle-database-operator/blob/main/README.md](https://github.com/oracle/oracle-database-operator/blob/main/README.md)\n",
      "provider": "Oracle",
      "install_strategy": "OwnNamespace",
      "creation_timestamp": "2025-09-07T09:13:39Z",
      "labels": {
        "olm.copiedFrom": "operators",
        "olm.managed": "true"
      },
      "annotations": {
        "alm-examples": "[\n  {\n    \"apiVersion\": \"database.oracle.com/v1alpha1\",\n    \"kind\": \"CDB\",\n    \"metadata\": {\n      \"name\": \"cdb-dev\",\n      \"namespace\": \"oracle-database-operator-system\"\n    },\n    \"spec\": {\n      \"cdbAdminPwd\": {\n        \"secret\": {\n          \"key\": \"cdbadmin_pwd\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"cdbAdminUser\": {\n        \"secret\": {\n          \"key\": \"cdbadmin_user\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"cdbName\": \"devcdb\",\n      \"dbPort\": 1521,\n      \"dbServer\": \"172.17.0.4\",\n      \"ordsImage\": \"\",\n      \"ordsImagePullPolicy\": \"Always\",\n      \"ordsPwd\": {\n        \"secret\": {\n          \"key\": \"ords_pwd\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"replicas\": 1,\n      \"serviceName\": \"devdb.example.com\",\n      \"sysAdminPwd\": {\n        \"secret\": {\n          \"key\": \"sysadmin_pwd\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"webServerPwd\": {\n        \"secret\": {\n          \"key\": \"webserver_pwd\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"webServerUser\": {\n        \"secret\": {\n          \"key\": \"webserver_user\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v1alpha1\",\n    \"kind\": \"DbcsSystem\",\n    \"metadata\": {\n      \"name\": \"dbcssystem-sample\"\n    },\n    \"spec\": {\n      \"foo\": \"bar\"\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v1alpha1\",\n    \"kind\": \"PDB\",\n    \"metadata\": {\n      \"labels\": {\n        \"cdb\": \"cdb-dev\"\n      },\n      \"name\": \"pdb1\",\n      \"namespace\": \"oracle-database-operator-system\"\n    },\n    \"spec\": {\n      \"action\": \"Create\",\n      \"adminName\": {\n        \"secret\": {\n          \"key\": \"sysadmin_user\",\n          \"secretName\": \"pdb1-secret\"\n        }\n      },\n      \"adminPwd\": {\n        \"secret\": {\n          \"key\": \"sysadmin_pwd\",\n          \"secretName\": \"pdb1-secret\"\n        }\n      },\n      \"cdbName\": \"devcdb\",\n      \"cdbResName\": \"cdb-dev\",\n      \"fileNameConversions\": \"NONE\",\n      \"pdbName\": \"pdbdev\",\n      \"tempSize\": \"100M\",\n      \"totalSize\": \"1G\"\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v4\",\n    \"kind\": \"AutonomousContainerDatabase\",\n    \"metadata\": {\n      \"name\": \"autonomouscontainerdatabase-sample\"\n    },\n    \"spec\": {\n      \"autonomousExadataVMClusterOCID\": \"ocid1.autonomousexainfrastructure...\",\n      \"compartmentOCID\": \"ocid1.compartment... OR ocid1.tenancy...\",\n      \"displayName\": \"newACD\",\n      \"ociConfig\": {\n        \"configMapName\": \"oci-cred\",\n        \"secretName\": \"oci-privatekey\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v4\",\n    \"kind\": \"AutonomousDatabase\",\n    \"metadata\": {\n      \"name\": \"autonomousdatabase-sample\"\n    },\n    \"spec\": {\n      \"action\": \"Create\",\n      \"details\": {\n        \"adminPassword\": {\n          \"k8sSecret\": {\n            \"name\": \"admin-password\"\n          }\n        },\n        \"compartmentId\": \"ocid1.compartment... OR ocid1.tenancy...\",\n        \"cpuCoreCount\": 1,\n        \"dataStorageSizeInTBs\": 1,\n        \"dbName\": \"NewADB\",\n        \"displayName\": \"NewADB\"\n      },\n      \"ociConfig\": {\n        \"configMapName\": \"oci-cred\",\n        \"secretName\": \"oci-privatekey\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v4\",\n    \"kind\": \"AutonomousDatabaseBackup\",\n    \"metadata\": {\n      \"name\": \"autonomousdatabasebackup-sample\"\n    },\n    \"spec\": {\n      \"displayName\": \"autonomousdatabasebackup-sample\",\n      \"isLongTermBackup\": true,\n      \"ociConfig\": {\n        \"configMapName\": \"oci-cred\",\n        \"secretName\": \"oci-privatekey\"\n      },\n      \"retentionPeriodInDays\": 90,\n      \"target\": {\n        \"k8sADB\": {\n          \"name\": \"autonomousdatabase-sample\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v4\",\n    \"kind\": \"SingleInstanceDatabase\",\n    \"metadata\": {\n      \"name\": \"sidb-sample\",\n      \"namespace\": \"default\"\n    },\n    \"spec\": {\n      \"adminPassword\": {\n        \"secretName\": \"db-admin-secret\"\n      },\n      \"archiveLog\": true,\n      \"charset\": \"AL32UTF8\",\n      \"edition\": \"enterprise\",\n      \"image\": {\n        \"pullFrom\": \"container-registry.oracle.com/database/enterprise_ru:19\",\n        \"pullSecrets\": \"oracle-container-registry-secret\"\n      },\n      \"pdbName\": \"orclpdb1\",\n      \"persistence\": {\n        \"accessMode\": \"ReadWriteOnce\",\n        \"size\": \"100Gi\",\n        \"storageClass\": \"oci-bv\"\n      },\n      \"replicas\": 1,\n      \"sid\": \"ORCL1\"\n    }\n  },\n  {\n    \"apiVersion\": \"observability.oracle.com/v1alpha1\",\n    \"kind\": \"DatabaseObserver\",\n    \"metadata\": {\n      \"name\": \"obs-sample\"\n    },\n    \"spec\": {\n      \"database\": {\n        \"dbConnectionString\": {\n          \"key\": \"connection\",\n          \"secret\": \"db-secret\"\n        },\n        \"dbPassword\": {\n          \"key\": \"password\",\n          \"secret\": \"db-secret\"\n        },\n        \"dbUser\": {\n          \"key\": \"username\",\n          \"secret\": \"db-secret\"\n        },\n        \"dbWallet\": {\n          \"secret\": \"instance-wallet\"\n        }\n      },\n      \"exporter\": {\n        \"configuration\": {\n          \"configmap\": {\n            \"configmapName\": \"devcm-oradevdb-config\",\n            \"key\": \"config.toml\"\n          }\n        },\n        \"image\": \"container-registry.oracle.com/database/observability-exporter:latest\",\n        \"service\": {\n          \"port\": 9161\n        }\n      },\n      \"ociConfig\": {\n        \"configMapName\": \"oci-cred\",\n        \"secretName\": \"oci-privatekey\"\n      },\n      \"prometheus\": {\n        \"labels\": {\n          \"app\": \"app-sample-label\"\n        },\n        \"port\": \"metrics\"\n      },\n      \"replicas\": 1\n    }\n  }\n]",
        "capabilities": "Seamless Upgrades",
        "categories": "Database",
        "containerImage": "container-registry.oracle.com/database/operator:1.2.0",
        "createdAt": "2025-04-10T20:09:48Z",
        "olm.operatorGroup": "global-operators",
        "olm.operatorNamespace": "operators",
        "operatorframework.io/properties": "{\"properties\":[{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousContainerDatabase\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousContainerDatabase\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabase\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabase\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabaseBackup\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabaseBackup\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabaseRestore\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabaseRestore\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"CDB\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"CDB\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"DataguardBroker\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"DataguardBroker\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"DbcsSystem\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"DbcsSystem\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"LREST\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"LRPDB\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"OracleRestDataService\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"OracleRestDataService\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"OrdsSrvs\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"PDB\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"PDB\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"ShardingDatabase\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"ShardingDatabase\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"SingleInstanceDatabase\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"SingleInstanceDatabase\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"observability.oracle.com\",\"kind\":\"DatabaseObserver\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"observability.oracle.com\",\"kind\":\"DatabaseObserver\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"observability.oracle.com\",\"kind\":\"DatabaseObserver\",\"version\":\"v4\"}},{\"type\":\"olm.package\",\"value\":{\"packageName\":\"oracle-database-operator\",\"version\":\"1.2.0\"}}]}",
        "operators.operatorframework.io/builder": "operator-sdk-v1.39.2",
        "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v4"
      },
      "owned_crds": [
        "autonomouscontainerdatabases.database.oracle.com",
        "autonomouscontainerdatabases.database.oracle.com",
        "autonomousdatabasebackups.database.oracle.com",
        "autonomousdatabasebackups.database.oracle.com",
        "autonomousdatabaserestores.database.oracle.com",
        "autonomousdatabaserestores.database.oracle.com",
        "autonomousdatabases.database.oracle.com",
        "autonomousdatabases.database.oracle.com",
        "cdbs.database.oracle.com",
        "cdbs.database.oracle.com",
        "databaseobservers.observability.oracle.com",
        "databaseobservers.observability.oracle.com",
        "databaseobservers.observability.oracle.com",
        "dataguardbrokers.database.oracle.com",
        "dataguardbrokers.database.oracle.com",
        "dbcssystems.database.oracle.com",
        "dbcssystems.database.oracle.com",
        "lrests.database.oracle.com",
        "lrpdbs.database.oracle.com",
        "oraclerestdataservices.database.oracle.com",
        "oraclerestdataservices.database.oracle.com",
        "ordssrvs.database.oracle.com",
        "pdbs.database.oracle.com",
        "pdbs.database.oracle.com",
        "shardingdatabases.database.oracle.com",
        "shardingdatabases.database.oracle.com",
        "singleinstancedatabases.database.oracle.com",
        "singleinstancedatabases.database.oracle.com"
      ],
      "required_crds": [],
      "permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps"
              ],
              "verbs": [
                "get",
                "list",
                "watch",
                "create",
                "update",
                "patch",
                "delete"
              ]
            },
            {
              "apiGroups": [
                "coordination.k8s.io"
              ],
              "resources": [
                "leases"
              ],
              "verbs": [
                "get",
                "list",
                "watch",
                "create",
                "update",
                "patch",
                "delete"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps/status"
              ],
              "verbs": [
                "get",
                "update",
                "patch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "events"
              ],
              "verbs": [
                "create",
                "patch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps",
                "containers",
                "deployments",
                "events",
                "namespaces",
                "persistentvolumeclaims",
                "pods",
                "pods/exec",
                "pods/log",
                "replicasets",
                "secrets",
                "services"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps/status",
                "daemonsets/status",
                "deployments/status",
                "services/status",
                "statefulsets/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "persistentvolumes"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "secrets/status"
              ],
              "verbs": [
                "get"
              ]
            },
            {
              "apiGroups": [
                "''"
              ],
              "resources": [
                "statefulsets/finalizers"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "apps"
              ],
              "resources": [
                "configmaps"
              ],
              "verbs": [
                "get",
                "list"
              ]
            },
            {
              "apiGroups": [
                "apps"
              ],
              "resources": [
                "daemonsets",
                "deployments",
                "pods",
                "replicasets",
                "services",
                "statefulsets"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "coordination.k8s.io"
              ],
              "resources": [
                "leases"
              ],
              "verbs": [
                "create",
                "get",
                "list",
                "update"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "autonomouscontainerdatabases",
                "autonomousdatabases",
                "cdbs",
                "dataguardbrokers",
                "dbcssystems",
                "events",
                "lrests",
                "lrpdbs",
                "oraclerestdataservices",
                "ordssrvs",
                "pdbs",
                "shardingdatabases",
                "singleinstancedatabases"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "autonomouscontainerdatabases/status",
                "autonomousdatabasebackups/status",
                "autonomousdatabaserestores/status",
                "cdbs/status",
                "dataguardbrokers/status",
                "dbcssystems/status",
                "lrests/status",
                "lrpdbs/status",
                "oraclerestdataservices/status",
                "ordssrvs/status",
                "pdbs/status",
                "shardingdatabases/status",
                "singleinstancedatabases/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "autonomousdatabasebackups",
                "autonomousdatabaserestores"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "autonomousdatabases/status"
              ],
              "verbs": [
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "cdbs/finalizers",
                "dataguardbrokers/finalizers",
                "lrests/finalizers",
                "oraclerestdataservices/finalizers",
                "ordssrvs/finalizers",
                "singleinstancedatabases/finalizers"
              ],
              "verbs": [
                "update"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "dbcssystems/finalizers",
                "lrpdbs/finalizers",
                "pdbs/finalizers",
                "shardingdatabases/finalizers"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "monitoring.coreos.com"
              ],
              "resources": [
                "servicemonitors"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "observability.oracle.com"
              ],
              "resources": [
                "databaseobservers"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "observability.oracle.com"
              ],
              "resources": [
                "databaseobservers/finalizers"
              ],
              "verbs": [
                "update"
              ]
            },
            {
              "apiGroups": [
                "observability.oracle.com"
              ],
              "resources": [
                "databaseobservers/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "storage.k8s.io"
              ],
              "resources": [
                "storageclasses"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            }
          ],
          "serviceAccountName": "default"
        }
      ],
      "cluster_permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                "authentication.k8s.io"
              ],
              "resources": [
                "tokenreviews"
              ],
              "verbs": [
                "create"
              ]
            },
            {
              "apiGroups": [
                "authorization.k8s.io"
              ],
              "resources": [
                "subjectaccessreviews"
              ],
              "verbs": [
                "create"
              ]
            }
          ],
          "serviceAccountName": "default"
        }
      ],
      "replaces": "oracle-database-operator.v1.1.0",
      "skips": [],
      "min_kube_version": ""
    },
    {
      "name": "cloudnative-pg.v1.27.0",
      "namespace": "kubedb",
      "display_name": "CloudNativePG",
      "version": "1.27.0",
      "phase": "Succeeded",
      "description": "Main features:\n\n- Direct integration with the Kubernetes API server for High Availability,\n  eliminating the need for external tools.\n- Self-healing capabilities, including:\n    - Automated failover by promoting the most aligned replica.\n    - Automatic recreation of failed replicas.\n- Planned switchover of the primary instance by promoting a selected replica.\n- Declarative management of key PostgreSQL configurations, including:\n    - PostgreSQL settings.\n    - Roles, users, and groups.\n    - Databases, extensions, and schemas.\n    - Tablespaces (including temporary tablespaces).\n- Flexible instance definition, supporting any number of instances (minimum 1\n  primary server).\n- Scale-up/down capabilities to dynamically adjust cluster size.\n- Read-Write and Read-Only Services, ensuring applications connect correctly:\n    - *Read-Write Service*: Routes connections to the primary server.\n    - *Read-Only Service*: Distributes connections among replicas for read workloads.\n- Support for quorum-based and priority-based PostgreSQL Synchronous\n  Replication.\n- Replica clusters enabling PostgreSQL distributed topologies across multiple\n  Kubernetes clusters (private, public, hybrid, and multi-cloud).\n- Delayed Replica clusters for point-in-time access to historical data.\n- Persistent volume management, including:\n    - Support for Local Persistent Volumes with PVC templates.\n    - Reuse of Persistent Volumes storage in Pods.\n    - Separate volumes for WAL files and tablespaces.\n- Backup and recovery options, including:\n    - Integration with the [Barman Cloud plugin](https://github.com/cloudnative-pg/plugin-barman-cloud)\n      for continuous online backup via WAL archiving to AWS S3, S3-compatible\n      services, Azure Blob Storage, and Google Cloud Storage, with support for\n      retention policies based on a configurable recovery window.\n    - Backups using volume snapshots (where supported by storage classes).\n    - Full and Point-In-Time recovery from volume snapshots or object stores (via Barman Cloud plugin).\n    - Backup from standby replicas to reduce primary workload impact.\n- Offline and online import of PostgreSQL databases, including major upgrades:\n    - *Offline Import*: Direct restore from existing databases.\n    - *Online Import*: PostgreSQL native logical replication via the `Subscription` resource.\n- Offline In-Place Major Upgrades of PostgreSQL\n- High Availability physical replication slots, including synchronization of\n  user-defined replication slots.\n- Parallel WAL archiving and restore, ensuring high-performance data\n  synchronization in high-write environments.\n- TLS support, including:\n    - Secure connections and client certificate authentication.\n    - Custom TLS certificates (integrated with `cert-manager`).\n- Startup and readiness probes, including replica probes based on desired lag\n  from the primary.\n- Declarative rolling updates for:\n    - PostgreSQL minor versions.\n    - Operator upgrades (in-place or rolling updates).\n- Standard output logging of PostgreSQL error messages in JSON format for\n  easier integration with log aggregation tools.\n- Prometheus-compatible metrics exporter (`metrics` port 9187) for custom\n  monitoring.\n- `cnpg` plugin for `kubectl` to simplify cluster operations.\n- Cluster hibernation for resource efficiency in inactive states.\n- Fencing of PostgreSQL clusters (full cluster or subset) to isolate instances\n  when needed.\n- Connection pooling with PgBouncer for improved database efficiency.\n- OLM (Operator Lifecycle Manager) installation support for streamlined\n  deployments.\n- Multi-arch container images, including Software Bill of Materials (SBOM) and\n  provenance attestations for security compliance.\n",
      "provider": "The CloudNativePG Contributors",
      "install_strategy": "OwnNamespace",
      "creation_timestamp": "2025-09-07T09:12:58Z",
      "labels": {
        "olm.copiedFrom": "operators",
        "olm.managed": "true",
        "operatorframework.io/arch.amd64": "supported"
      },
      "annotations": {
        "alm-examples": "[\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"backup-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      }\n    },\n    \"status\": {\n      \"serverName\": null\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Cluster\",\n    \"metadata\": {\n      \"name\": \"cluster-sample\"\n    },\n    \"spec\": {\n      \"instances\": 3,\n      \"logLevel\": \"info\",\n      \"primaryUpdateStrategy\": \"unsupervised\",\n      \"storage\": {\n        \"size\": \"1Gi\"\n      },\n      \"walStorage\": {\n        \"size\": \"1Gi\"\n      }\n    },\n    \"status\": {\n      \"instances\": 3\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"ClusterImageCatalog\",\n    \"metadata\": {\n      \"name\": \"postgresql\"\n    },\n    \"spec\": {\n      \"images\": [\n        {\n          \"image\": \"ghcr.io/cloudnative-pg/postgresql@sha256:1c97e0d6e94d8b335be7f258eeda2202966df5fde0c934eef4b13c760ec6a891\",\n          \"major\": 15\n        },\n        {\n          \"image\": \"ghcr.io/cloudnative-pg/postgresql@sha256:ee2e3ce7f0ea935c3f4ab245c0b3959c9f1c49816ae02222ceb6bc347f48e43b\",\n          \"major\": 16\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Database\",\n    \"metadata\": {\n      \"name\": \"database-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      },\n      \"name\": \"database-sample\",\n      \"owner\": \"app\"\n    },\n    \"status\": {\n      \"applied\": false\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"ImageCatalog\",\n    \"metadata\": {\n      \"name\": \"postgresql\",\n      \"namespace\": \"default\"\n    },\n    \"spec\": {\n      \"images\": [\n        {\n          \"image\": \"ghcr.io/cloudnative-pg/postgresql@sha256:1c97e0d6e94d8b335be7f258eeda2202966df5fde0c934eef4b13c760ec6a891\",\n          \"major\": 15\n        },\n        {\n          \"image\": \"ghcr.io/cloudnative-pg/postgresql@sha256:ee2e3ce7f0ea935c3f4ab245c0b3959c9f1c49816ae02222ceb6bc347f48e43b\",\n          \"major\": 16\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Pooler\",\n    \"metadata\": {\n      \"name\": \"pooler-sample-rw\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      },\n      \"instances\": 1,\n      \"pgbouncer\": {\n        \"poolMode\": \"session\"\n      },\n      \"type\": \"rw\"\n    },\n    \"status\": {\n      \"instances\": 1\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Publication\",\n    \"metadata\": {\n      \"name\": \"publication-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      },\n      \"dbname\": \"app\",\n      \"name\": \"pub\",\n      \"target\": {\n        \"allTables\": true\n      }\n    },\n    \"status\": {\n      \"applied\": false\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"ScheduledBackup\",\n    \"metadata\": {\n      \"name\": \"scheduledbackup-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      },\n      \"schedule\": \"0 0 0 * * *\"\n    },\n    \"status\": {\n      \"lastCheckTime\": null\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Subscription\",\n    \"metadata\": {\n      \"name\": \"subscription-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample-dest\"\n      },\n      \"dbname\": \"app\",\n      \"externalClusterName\": \"cluster-sample\",\n      \"name\": \"sub\",\n      \"publicationName\": \"pub\"\n    },\n    \"status\": {\n      \"applied\": false\n    }\n  }\n]",
        "capabilities": "Auto Pilot",
        "categories": "Database",
        "certified": "true",
        "containerImage": "ghcr.io/cloudnative-pg/cloudnative-pg@sha256:53995e9d6a7760c77d77e5298f78b49029427494f4dd933d5fa7a74f7af3bb44",
        "createdAt": "2025-08-12T14:08:35Z",
        "description": "CloudNativePG is an open source operator designed to manage highly available PostgreSQL databases with a primary/standby architecture on any supported Kubernetes cluster.",
        "features.operators.openshift.io/disconnected": "true",
        "features.operators.openshift.io/fips-compliant": "false",
        "features.operators.openshift.io/proxy-aware": "false",
        "features.operators.openshift.io/tls-profiles": "false",
        "features.operators.openshift.io/token-auth-aws": "false",
        "features.operators.openshift.io/token-auth-azure": "false",
        "features.operators.openshift.io/token-auth-gcp": "false",
        "olm.operatorGroup": "global-operators",
        "olm.operatorNamespace": "operators",
        "operatorframework.io/properties": "{\"properties\":[{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Backup\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Cluster\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"ClusterImageCatalog\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Database\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"FailoverQuorum\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"ImageCatalog\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Pooler\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Publication\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"ScheduledBackup\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Subscription\",\"version\":\"v1\"}},{\"type\":\"olm.package\",\"value\":{\"packageName\":\"cloudnative-pg\",\"version\":\"1.27.0\"}}]}",
        "operators.operatorframework.io/builder": "operator-sdk-v1.41.1",
        "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v4",
        "repository": "https://github.com/cloudnative-pg/cloudnative-pg",
        "support": "Community"
      },
      "owned_crds": [
        "backups.postgresql.cnpg.io",
        "clusterimagecatalogs.postgresql.cnpg.io",
        "clusters.postgresql.cnpg.io",
        "databases.postgresql.cnpg.io",
        "failoverquorums.postgresql.cnpg.io",
        "imagecatalogs.postgresql.cnpg.io",
        "poolers.postgresql.cnpg.io",
        "publications.postgresql.cnpg.io",
        "scheduledbackups.postgresql.cnpg.io",
        "subscriptions.postgresql.cnpg.io"
      ],
      "required_crds": [],
      "permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps",
                "secrets",
                "services"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps/status",
                "secrets/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "events"
              ],
              "verbs": [
                "create",
                "patch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "nodes"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "persistentvolumeclaims",
                "pods",
                "pods/exec"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "pods/status"
              ],
              "verbs": [
                "get"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "serviceaccounts"
              ],
              "verbs": [
                "create",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "admissionregistration.k8s.io"
              ],
              "resources": [
                "mutatingwebhookconfigurations",
                "validatingwebhookconfigurations"
              ],
              "verbs": [
                "get",
                "patch"
              ]
            },
            {
              "apiGroups": [
                "apps"
              ],
              "resources": [
                "deployments"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "batch"
              ],
              "resources": [
                "jobs"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "coordination.k8s.io"
              ],
              "resources": [
                "leases"
              ],
              "verbs": [
                "create",
                "get",
                "update"
              ]
            },
            {
              "apiGroups": [
                "monitoring.coreos.com"
              ],
              "resources": [
                "podmonitors"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "policy"
              ],
              "resources": [
                "poddisruptionbudgets"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "backups",
                "clusters",
                "databases",
                "poolers",
                "publications",
                "scheduledbackups",
                "subscriptions"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "backups/status",
                "databases/status",
                "publications/status",
                "scheduledbackups/status",
                "subscriptions/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "clusterimagecatalogs",
                "imagecatalogs"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "clusters/finalizers",
                "poolers/finalizers"
              ],
              "verbs": [
                "update"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "clusters/status",
                "failoverquorums/status",
                "poolers/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "failoverquorums"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "rbac.authorization.k8s.io"
              ],
              "resources": [
                "rolebindings",
                "roles"
              ],
              "verbs": [
                "create",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "snapshot.storage.k8s.io"
              ],
              "resources": [
                "volumesnapshots"
              ],
              "verbs": [
                "create",
                "get",
                "list",
                "patch",
                "watch"
              ]
            }
          ],
          "serviceAccountName": "cnpg-manager"
        }
      ],
      "cluster_permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "nodes"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "clusterimagecatalogs"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            }
          ],
          "serviceAccountName": "cnpg-manager"
        }
      ],
      "replaces": "cloudnative-pg.v1.26.1",
      "skips": [],
      "min_kube_version": "1.23.0"
    },
    {
      "name": "mariadb-operator.v25.8.3",
      "namespace": "kubedb",
      "display_name": "MariaDB Operator",
      "version": "25.8.3",
      "phase": "Succeeded",
      "description": "Install [`mariadb-operator`](https://github.com/mariadb-operator/mariadb-operator) via [OLM](https://olm.operatorframework.io/) using the [helm chart](https://artifacthub.io/packages/helm/mariadb-operator/mariadb-operator).\n\nThis helm operator provides provides a 1:1 mapping between the official helm chart and the [`MariadbOperator`](https://github.com/mariadb-operator/mariadb-operator-helm/blob/main/config/samples/helm_v1alpha1_mariadboperator.yaml) CRD, allowing to install [`mariadb-operator`](https://github.com/mariadb-operator/mariadb-operator) via OLM without having to do any change in the helm chart.\n\nNormally, you would install [`mariadb-operator`](https://github.com/mariadb-operator/mariadb-operator) providing this `values.yaml` to the helm chart:\n```yaml\nimage:\n  repository: ghcr.io/mariadb-operator/mariadb-operator\n  pullPolicy: IfNotPresent\nlogLevel: INFO\nha:\n  enabled: true\nmetrics:\n  enabled: true\n  serviceMonitor:\n    enabled: true\nwebhook:\n  cert:\n    certManager:\n      enabled: true\n```\n\nThis helm chart installation is abstracted in the [`MariadbOperator`](https://github.com/mariadb-operator/mariadb-operator-helm/blob/main/config/samples/helm_v1alpha1_mariadboperator.yaml) CRD, which will be reconciled by the helm operator:\n```yaml\napiVersion: helm.k8s.mariadb.com/v1alpha1\nkind: MariadbOperator\nmetadata:\n  name: mariadb-operator\nspec:\n  image:\n    repository: ghcr.io/mariadb-operator/mariadb-operator\n    pullPolicy: IfNotPresent\n  logLevel: INFO\n  ha:\n    enabled: true\n  metrics:\n    enabled: true\n    serviceMonitor:\n      enabled: true\n  webhook:\n    cert:\n      certManager:\n        enabled: true\n```\n\nOnce you have installed the operator, you will able to install a [`MariaDB`](https://github.com/mariadb-operator/mariadb-operator/blob/main/examples/manifests/mariadb_v1alpha1_mariadb.yaml) instance. Refer to the main [`mariadb-operator`](https://github.com/mariadb-operator/mariadb-operator) documentation for getting started with the rest of CRDs.\n\n## Documentation\n* [mariadb-operator](https://github.com/mariadb-operator/mariadb-operator/blob/main/README.md)\n* [mariadb-operator-helm](https://github.com/mariadb-operator/mariadb-operator-helm/blob/main/README.md)\n\n## Releases\nThis operator is automatically published in the following repositories whenever a new version of the [helm chart](https://artifacthub.io/packages/helm/mariadb-operator/mariadb-operator) is released:\n- [k8s-operatorhub/community-operators](https://github.com/k8s-operatorhub/community-operators)\n- [redhat-openshift-ecosystem/community-operators-prod](https://github.com/redhat-openshift-ecosystem/community-operators-prod)\n\n## Roadmap\nTake a look at our [roadmap](https://github.com/mariadb-operator/mariadb-operator/blob/main/ROADMAP.md) and feel free to open an issue to suggest new features.\n\n## Contributing\nWe welcome and encourage contributions to this project! Please check our [contributing](https://github.com/mariadb-operator/mariadb-operator/blob/main/CONTRIBUTING.md) and [development](https://github.com/mariadb-operator/mariadb-operator/blob/main/docs/DEVELOPMENT.md) guides. PRs welcome!\n\n## Get in touch\nJoin us on Slack: **[MariaDB Community Slack](https://r.mariadb.com/join-community-slack)**.\n",
      "provider": "mariadb-operator",
      "install_strategy": "OwnNamespace",
      "creation_timestamp": "2025-09-07T09:15:57Z",
      "labels": {
        "olm.copiedFrom": "operators",
        "olm.managed": "true"
      },
      "annotations": {
        "alm-examples": "[\n  {\n    \"apiVersion\": \"helm.mariadb.mmontes.io/v1alpha1\",\n    \"kind\": \"MariadbOperator\",\n    \"metadata\": {\n      \"name\": \"mariadb-operator\"\n    },\n    \"spec\": {\n      \"affinity\": {},\n      \"certController\": {\n        \"affinity\": {},\n        \"caValidity\": \"35064h\",\n        \"certValidity\": \"8766h\",\n        \"enabled\": true,\n        \"extrArgs\": [],\n        \"extraVolumeMounts\": [],\n        \"extraVolumes\": [],\n        \"ha\": {\n          \"enabled\": false,\n          \"replicas\": 3\n        },\n        \"image\": {\n          \"pullPolicy\": \"IfNotPresent\",\n          \"repository\": \"ghcr.io/mariadb-operator/mariadb-operator\",\n          \"tag\": \"\"\n        },\n        \"imagePullSecrets\": [],\n        \"lookaheadValidity\": \"2160h\",\n        \"nodeSelector\": {},\n        \"podAnnotations\": {},\n        \"podSecurityContext\": {},\n        \"requeueDuration\": \"5m\",\n        \"resources\": {},\n        \"securityContext\": {},\n        \"serviceAccount\": {\n          \"annotations\": {},\n          \"automount\": true,\n          \"enabled\": true,\n          \"extraLabels\": {},\n          \"name\": \"\"\n        },\n        \"serviceMonitor\": {\n          \"additionalLabels\": {},\n          \"enabled\": true,\n          \"interval\": \"30s\",\n          \"scrapeTimeout\": \"25s\"\n        },\n        \"tolerations\": []\n      },\n      \"clusterName\": \"cluster.local\",\n      \"extrArgs\": [],\n      \"extraVolumeMounts\": [],\n      \"extraVolumes\": [],\n      \"fullnameOverride\": \"\",\n      \"ha\": {\n        \"enabled\": false,\n        \"replicas\": 3\n      },\n      \"image\": {\n        \"pullPolicy\": \"IfNotPresent\",\n        \"repository\": \"ghcr.io/mariadb-operator/mariadb-operator\",\n        \"tag\": \"\"\n      },\n      \"imagePullSecrets\": [],\n      \"logLevel\": \"INFO\",\n      \"metrics\": {\n        \"enabled\": false,\n        \"serviceMonitor\": {\n          \"additionalLabels\": {},\n          \"enabled\": true,\n          \"interval\": \"30s\",\n          \"scrapeTimeout\": \"25s\"\n        }\n      },\n      \"nameOverride\": \"\",\n      \"nodeSelector\": {},\n      \"podAnnotations\": {},\n      \"podSecurityContext\": {},\n      \"rbac\": {\n        \"enabled\": true\n      },\n      \"resources\": {},\n      \"securityContext\": {},\n      \"serviceAccount\": {\n        \"annotations\": {},\n        \"automount\": true,\n        \"enabled\": true,\n        \"extraLabels\": {},\n        \"name\": \"\"\n      },\n      \"tolerations\": [],\n      \"webhook\": {\n        \"affinity\": {},\n        \"annotations\": {},\n        \"cert\": {\n          \"caPath\": \"/tmp/k8s-webhook-server/certificate-authority\",\n          \"certManager\": {\n            \"duration\": \"\",\n            \"enabled\": false,\n            \"issuerRef\": {},\n            \"renewBefore\": \"\"\n          },\n          \"path\": \"/tmp/k8s-webhook-server/serving-certs\",\n          \"secretAnnotations\": {}\n        },\n        \"extrArgs\": [],\n        \"extraVolumeMounts\": [],\n        \"extraVolumes\": [],\n        \"ha\": {\n          \"enabled\": false,\n          \"replicas\": 3\n        },\n        \"hostNetwork\": false,\n        \"image\": {\n          \"pullPolicy\": \"IfNotPresent\",\n          \"repository\": \"ghcr.io/mariadb-operator/mariadb-operator\",\n          \"tag\": \"\"\n        },\n        \"imagePullSecrets\": [],\n        \"nodeSelector\": {},\n        \"podAnnotations\": {},\n        \"podSecurityContext\": {},\n        \"port\": 10250,\n        \"resources\": {},\n        \"securityContext\": {},\n        \"serviceAccount\": {\n          \"annotations\": {},\n          \"automount\": true,\n          \"enabled\": true,\n          \"extraLabels\": {},\n          \"name\": \"\"\n        },\n        \"serviceMonitor\": {\n          \"additionalLabels\": {},\n          \"enabled\": true,\n          \"interval\": \"30s\",\n          \"scrapeTimeout\": \"25s\"\n        },\n        \"tolerations\": []\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"backup\"\n    },\n    \"spec\": {\n      \"args\": [\n        \"--single-transaction\",\n        \"--all-databases\"\n      ],\n      \"logLevel\": \"info\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"maxRetention\": \"720h\",\n      \"resources\": {\n        \"limits\": {\n          \"cpu\": \"300m\",\n          \"memory\": \"512Mi\"\n        },\n        \"requests\": {\n          \"cpu\": \"100m\",\n          \"memory\": \"128Mi\"\n        }\n      },\n      \"schedule\": {\n        \"cron\": \"*/1 * * * *\",\n        \"suspend\": false\n      },\n      \"storage\": {\n        \"s3\": {\n          \"accessKeyIdSecretKeyRef\": {\n            \"key\": \"access-key-id\",\n            \"name\": \"minio\"\n          },\n          \"bucket\": \"backups\",\n          \"endpoint\": \"minio.minio.svc.cluster.local:9000\",\n          \"prefix\": \"mariadb\",\n          \"secretAccessKeySecretKeyRef\": {\n            \"key\": \"secret-access-key\",\n            \"name\": \"minio\"\n          },\n          \"tls\": {\n            \"caSecretKeyRef\": {\n              \"key\": \"ca.crt\",\n              \"name\": \"minio-ca\"\n            },\n            \"enabled\": true\n          }\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Connection\",\n    \"metadata\": {\n      \"name\": \"connection\"\n    },\n    \"spec\": {\n      \"database\": \"mariadb\",\n      \"healthCheck\": {\n        \"interval\": \"10s\",\n        \"retryInterval\": \"3s\"\n      },\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"params\": {\n        \"parseTime\": \"true\"\n      },\n      \"passwordSecretKeyRef\": {\n        \"key\": \"password\",\n        \"name\": \"mariadb\"\n      },\n      \"secretName\": \"connection\",\n      \"secretTemplate\": {\n        \"annotations\": {\n          \"k8s.mariadb.com/connection\": \"sample\"\n        },\n        \"databaseKey\": \"database\",\n        \"hostKey\": \"host\",\n        \"key\": \"dsn\",\n        \"labels\": {\n          \"k8s.mariadb.com/connection\": \"sample\"\n        },\n        \"passwordKey\": \"password\",\n        \"portKey\": \"port\",\n        \"usernameKey\": \"username\"\n      },\n      \"serviceName\": \"mariadb\",\n      \"username\": \"mariadb\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Database\",\n    \"metadata\": {\n      \"name\": \"data-test\"\n    },\n    \"spec\": {\n      \"characterSet\": \"utf8\",\n      \"collate\": \"utf8_general_ci\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"retryInterval\": \"5s\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Grant\",\n    \"metadata\": {\n      \"name\": \"grant\"\n    },\n    \"spec\": {\n      \"database\": \"*\",\n      \"grantOption\": true,\n      \"host\": \"%\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"privileges\": [\n        \"SELECT\",\n        \"INSERT\",\n        \"UPDATE\"\n      ],\n      \"requeueInterval\": \"30s\",\n      \"retryInterval\": \"5s\",\n      \"table\": \"*\",\n      \"username\": \"user\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"MariaDB\",\n    \"metadata\": {\n      \"name\": \"mariadb\"\n    },\n    \"spec\": {\n      \"connection\": {\n        \"secretName\": \"mariadb-conn\",\n        \"secretTemplate\": {\n          \"key\": \"dsn\"\n        }\n      },\n      \"database\": \"mariadb\",\n      \"galera\": {\n        \"enabled\": true\n      },\n      \"metrics\": {\n        \"enabled\": true,\n        \"passwordSecretKeyRef\": {\n          \"generate\": true,\n          \"key\": \"password\",\n          \"name\": \"mariadb-metrics\"\n        }\n      },\n      \"myCnf\": \"[mariadb]\\nbind-address=*\\ndefault_storage_engine=InnoDB\\nbinlog_format=row\\ninnodb_autoinc_lock_mode=2\\ninnodb_buffer_pool_size=1024M\\nmax_allowed_packet=256M\\n\",\n      \"passwordSecretKeyRef\": {\n        \"generate\": true,\n        \"key\": \"password\",\n        \"name\": \"mariadb-password\"\n      },\n      \"primaryConnection\": {\n        \"secretName\": \"mariadb-conn-primary\",\n        \"secretTemplate\": {\n          \"key\": \"dsn\"\n        }\n      },\n      \"primaryService\": {\n        \"type\": \"ClusterIP\"\n      },\n      \"replicas\": 3,\n      \"rootPasswordSecretKeyRef\": {\n        \"generate\": true,\n        \"key\": \"password\",\n        \"name\": \"mariadb-root\"\n      },\n      \"secondaryConnection\": {\n        \"secretName\": \"mariadb-conn-secondary\",\n        \"secretTemplate\": {\n          \"key\": \"dsn\"\n        }\n      },\n      \"secondaryService\": {\n        \"type\": \"ClusterIP\"\n      },\n      \"service\": {\n        \"type\": \"ClusterIP\"\n      },\n      \"storage\": {\n        \"size\": \"1Gi\"\n      },\n      \"updateStrategy\": {\n        \"type\": \"ReplicasFirstPrimaryLast\"\n      },\n      \"username\": \"mariadb\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"MaxScale\",\n    \"metadata\": {\n      \"name\": \"maxscale-galera\"\n    },\n    \"spec\": {\n      \"admin\": {\n        \"guiEnabled\": true,\n        \"port\": 8989\n      },\n      \"auth\": {\n        \"generate\": true\n      },\n      \"config\": {\n        \"sync\": {\n          \"database\": \"mysql\",\n          \"interval\": \"5s\",\n          \"timeout\": \"10s\"\n        }\n      },\n      \"connection\": {\n        \"port\": 3306,\n        \"secretName\": \"mxs-galera-conn\"\n      },\n      \"guiKubernetesService\": {\n        \"metadata\": {\n          \"annotations\": {\n            \"metallb.universe.tf/loadBalancerIPs\": \"172.18.0.231\"\n          }\n        },\n        \"type\": \"LoadBalancer\"\n      },\n      \"kubernetesService\": {\n        \"annotations\": {\n          \"metallb.universe.tf/loadBalancerIPs\": \"172.18.0.224\"\n        },\n        \"type\": \"LoadBalancer\"\n      },\n      \"mariaDbRef\": {\n        \"name\": \"mariadb-galera\"\n      },\n      \"monitor\": {\n        \"cooperativeMonitoring\": \"majority_of_all\",\n        \"interval\": \"2s\",\n        \"params\": {\n          \"available_when_donor\": \"false\",\n          \"disable_master_failback\": \"false\",\n          \"disable_master_role_setting\": \"false\"\n        }\n      },\n      \"replicas\": 3,\n      \"requeueInterval\": \"10s\",\n      \"services\": [\n        {\n          \"listener\": {\n            \"params\": {\n              \"connection_metadata\": \"tx_isolation=auto\"\n            },\n            \"port\": 3306,\n            \"protocol\": \"MariaDBProtocol\"\n          },\n          \"name\": \"rw-router\",\n          \"params\": {\n            \"master_accept_reads\": \"true\",\n            \"max_replication_lag\": \"3s\",\n            \"max_slave_connections\": \"255\",\n            \"transaction_replay\": \"true\",\n            \"transaction_replay_attempts\": \"10\",\n            \"transaction_replay_timeout\": \"5s\"\n          },\n          \"router\": \"readwritesplit\"\n        },\n        {\n          \"listener\": {\n            \"port\": 3307\n          },\n          \"name\": \"rconn-master-router\",\n          \"params\": {\n            \"master_accept_reads\": \"true\",\n            \"max_replication_lag\": \"3s\",\n            \"router_options\": \"master\"\n          },\n          \"router\": \"readconnroute\"\n        },\n        {\n          \"listener\": {\n            \"port\": 3308\n          },\n          \"name\": \"rconn-slave-router\",\n          \"params\": {\n            \"max_replication_lag\": \"3s\",\n            \"router_options\": \"slave\"\n          },\n          \"router\": \"readconnroute\"\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"PhysicalBackup\",\n    \"metadata\": {\n      \"name\": \"physicalbackup\"\n    },\n    \"spec\": {\n      \"compression\": \"bzip2\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"maxRetention\": \"720h\",\n      \"podAffinity\": true,\n      \"resources\": {\n        \"limits\": {\n          \"cpu\": \"300m\",\n          \"memory\": \"512Mi\"\n        },\n        \"requests\": {\n          \"cpu\": \"100m\",\n          \"memory\": \"128Mi\"\n        }\n      },\n      \"schedule\": {\n        \"cron\": \"*/1 * * * *\",\n        \"immediate\": true,\n        \"suspend\": false\n      },\n      \"serviceAccountName\": \"backup\",\n      \"stagingStorage\": {\n        \"persistentVolumeClaim\": {\n          \"accessModes\": [\n            \"ReadWriteOnce\"\n          ],\n          \"resources\": {\n            \"requests\": {\n              \"storage\": \"1Gi\"\n            }\n          }\n        }\n      },\n      \"storage\": {\n        \"s3\": {\n          \"accessKeyIdSecretKeyRef\": {\n            \"key\": \"access-key-id\",\n            \"name\": \"minio\"\n          },\n          \"bucket\": \"physicalbackups\",\n          \"endpoint\": \"minio.minio.svc.cluster.local:9000\",\n          \"prefix\": \"mariadb\",\n          \"region\": \"us-east-1\",\n          \"secretAccessKeySecretKeyRef\": {\n            \"key\": \"secret-access-key\",\n            \"name\": \"minio\"\n          },\n          \"tls\": {\n            \"caSecretKeyRef\": {\n              \"key\": \"ca.crt\",\n              \"name\": \"minio-ca\"\n            },\n            \"enabled\": true\n          }\n        }\n      },\n      \"timeout\": \"1h\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Restore\",\n    \"metadata\": {\n      \"name\": \"restore\"\n    },\n    \"spec\": {\n      \"backupRef\": {\n        \"name\": \"backup\"\n      },\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"resources\": {\n        \"limits\": {\n          \"cpu\": \"300m\",\n          \"memory\": \"512Mi\"\n        },\n        \"requests\": {\n          \"cpu\": \"100m\",\n          \"memory\": \"128Mi\"\n        }\n      },\n      \"targetRecoveryTime\": \"2023-12-19T09:00:00Z\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"SqlJob\",\n    \"metadata\": {\n      \"name\": \"03-stars\"\n    },\n    \"spec\": {\n      \"database\": \"mariadb\",\n      \"dependsOn\": [\n        {\n          \"name\": \"01-users\"\n        },\n        {\n          \"name\": \"02-repos\"\n        }\n      ],\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"passwordSecretKeyRef\": {\n        \"key\": \"password\",\n        \"name\": \"mariadb\"\n      },\n      \"schedule\": {\n        \"cron\": \"*/1 * * * *\",\n        \"suspend\": false\n      },\n      \"sql\": \"CREATE TABLE IF NOT EXISTS stars (\\n  id bigint PRIMARY KEY AUTO_INCREMENT,\\n  user_id bigint NOT NULL,\\n  repo_id bigint NOT NULL,\\n  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,\\n  FOREIGN KEY (repo_id) REFERENCES repos(id) ON DELETE CASCADE,\\n  UNIQUE KEY (user_id, repo_id)\\n);\\nINSERT INTO stars(user_id, repo_id) \\n  VALUES((SELECT id FROM users ORDER BY RAND() LIMIT 1), (SELECT id FROM repos ORDER BY RAND() LIMIT 1))\\n  ON DUPLICATE KEY UPDATE id=id;\\nDELETE FROM stars WHERE id = (SELECT id FROM stars ORDER BY RAND() LIMIT 1);\\nSELECT r.name AS repo, COUNT(*) AS stars\\nFROM stars s\\nJOIN repos r\\nON s.repo_id = r.id\\nGROUP BY r.id\\nORDER BY stars DESC;\",\n      \"username\": \"mariadb\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"User\",\n    \"metadata\": {\n      \"name\": \"user\"\n    },\n    \"spec\": {\n      \"host\": \"%\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"maxUserConnections\": 20,\n      \"passwordSecretKeyRef\": {\n        \"key\": \"password\",\n        \"name\": \"mariadb\"\n      },\n      \"retryInterval\": \"5s\"\n    }\n  }\n]",
        "capabilities": "Deep Insights",
        "categories": "Database",
        "containerImage": "ghcr.io/mariadb-operator/mariadb-operator-helm:25.8.3",
        "createdAt": "2025-08-08T12:14:12Z",
        "description": "Run and operate MariaDB in a cloud native way",
        "features.operators.openshift.io/disconnected": "false",
        "features.operators.openshift.io/fips-compliant": "false",
        "features.operators.openshift.io/proxy-aware": "false",
        "features.operators.openshift.io/tls-profiles": "false",
        "features.operators.openshift.io/token-auth-aws": "false",
        "features.operators.openshift.io/token-auth-azure": "false",
        "features.operators.openshift.io/token-auth-gcp": "false",
        "olm.operatorGroup": "global-operators",
        "olm.operatorNamespace": "operators",
        "operatorframework.io/properties": "{\"properties\":[{\"type\":\"olm.gvk\",\"value\":{\"group\":\"helm.mariadb.mmontes.io\",\"kind\":\"MariadbOperator\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Backup\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Connection\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Database\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Grant\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"MariaDB\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"MaxScale\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"PhysicalBackup\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Restore\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"SqlJob\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"User\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.package\",\"value\":{\"packageName\":\"mariadb-operator\",\"version\":\"25.8.3\"}}]}",
        "operators.operatorframework.io/builder": "operator-sdk-v1.26.0",
        "operators.operatorframework.io/project_layout": "helm.sdk.operatorframework.io/v1",
        "repository": "https://github.com/mariadb-operator/mariadb-operator",
        "support": "mariadb-operator"
      },
      "owned_crds": [
        "backups.k8s.mariadb.com",
        "connections.k8s.mariadb.com",
        "databases.k8s.mariadb.com",
        "grants.k8s.mariadb.com",
        "mariadboperators.helm.mariadb.mmontes.io",
        "mariadbs.k8s.mariadb.com",
        "maxscales.k8s.mariadb.com",
        "physicalbackups.k8s.mariadb.com",
        "restores.k8s.mariadb.com",
        "sqljobs.k8s.mariadb.com",
        "users.k8s.mariadb.com"
      ],
      "required_crds": [],
      "permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps"
              ],
              "verbs": [
                "get",
                "list",
                "watch",
                "create",
                "update",
                "patch",
                "delete"
              ]
            },
            {
              "apiGroups": [
                "coordination.k8s.io"
              ],
              "resources": [
                "leases"
              ],
              "verbs": [
                "get",
                "list",
                "watch",
                "create",
                "update",
                "patch",
                "delete"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "events"
              ],
              "verbs": [
                "create",
                "patch"
              ]
            }
          ],
          "serviceAccountName": "mariadb-operator-helm-controller-manager"
        }
      ],
      "cluster_permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "namespaces"
              ],
              "verbs": [
                "get"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "secrets"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "events"
              ],
              "verbs": [
                "create"
              ]
            },
            {
              "apiGroups": [
                "helm.mariadb.mmontes.io"
              ],
              "resources": [
                "mariadboperators",
                "mariadboperators/status",
                "mariadboperators/finalizers"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "rbac.authorization.k8s.io"
              ],
              "resources": [
                "clusterrolebindings",
                "clusterroles"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "admissionregistration.k8s.io"
              ],
              "resources": [
                "validatingwebhookconfigurations",
                "mutatingwebhookconfigurations"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "rbac.authorization.k8s.io"
              ],
              "resources": [
                "rolebindings",
                "roles"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "apps"
              ],
              "resources": [
                "deployments"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "serviceaccounts",
                "services"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "apiextensions.k8s.io"
              ],
              "resources": [
                "customresourcedefinitions"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "cert-manager.io"
              ],
              "resources": [
                "certificates",
                "issuers"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "monitoring.coreos.com"
              ],
              "resources": [
                "servicemonitors"
              ],
              "verbs": [
                "*"
              ]
            }
          ],
          "serviceAccountName": "mariadb-operator-helm-controller-manager"
        }
      ],
      "replaces": "mariadb-operator.v25.8.2",
      "skips": [],
      "min_kube_version": "1.16.0"
    },
    {
      "name": "oracle-database-operator.v1.2.0",
      "namespace": "kubedb",
      "display_name": "Oracle Database Operator",
      "version": "1.2.0",
      "phase": "Installing",
      "description": "As part of Oracle's resolution to make Oracle Database Kubernetes native (that is, observable and operable by Kubernetes), Oracle released Oracle Database Operator for Kubernetes (OraOperator or the operator). OraOperator extends the Kubernetes API with custom resources and controllers for automating Oracle Database lifecycle management.\nIn this v1.2.0 production release, OraOperator supports the following database configurations and infrastructure:\n##Supported Database Configurations:\n* Oracle Cloud Infrastructure (OCI) Databases\n  * Oracle Autonomous Database Serverless (ADB-S)\n  * Oracle Autonomous Database on Dedicated on (ADB-D)\n  * Oracle Base Database Cloud Service (Base DB)\n* Containerized Database deployments on Kubernetes\n  * Oracle Kubernetes Engine (OKE) and Oracle Cloud Native Environments (OCNE)\n    * Single Instance databases (SIDB)\n    * Globally Distributed Databases (Shared)\n    * Oracle Data Guard\n    * True Cache (Preview release)\n    * Oracle Database Observability\n* On-Premises Databases\n  * Oracle Multitenant Databases (CDB/PDBs management)\n  * ORDS Services\n\nRefer to full feature list and capabilities: [https://github.com/oracle/oracle-database-operator/blob/main/README.md](https://github.com/oracle/oracle-database-operator/blob/main/README.md)\n",
      "provider": "Oracle",
      "install_strategy": "OwnNamespace",
      "creation_timestamp": "2025-09-07T09:13:36Z",
      "labels": {
        "olm.copiedFrom": "operators",
        "olm.managed": "true"
      },
      "annotations": {
        "alm-examples": "[\n  {\n    \"apiVersion\": \"database.oracle.com/v1alpha1\",\n    \"kind\": \"CDB\",\n    \"metadata\": {\n      \"name\": \"cdb-dev\",\n      \"namespace\": \"oracle-database-operator-system\"\n    },\n    \"spec\": {\n      \"cdbAdminPwd\": {\n        \"secret\": {\n          \"key\": \"cdbadmin_pwd\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"cdbAdminUser\": {\n        \"secret\": {\n          \"key\": \"cdbadmin_user\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"cdbName\": \"devcdb\",\n      \"dbPort\": 1521,\n      \"dbServer\": \"172.17.0.4\",\n      \"ordsImage\": \"\",\n      \"ordsImagePullPolicy\": \"Always\",\n      \"ordsPwd\": {\n        \"secret\": {\n          \"key\": \"ords_pwd\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"replicas\": 1,\n      \"serviceName\": \"devdb.example.com\",\n      \"sysAdminPwd\": {\n        \"secret\": {\n          \"key\": \"sysadmin_pwd\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"webServerPwd\": {\n        \"secret\": {\n          \"key\": \"webserver_pwd\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"webServerUser\": {\n        \"secret\": {\n          \"key\": \"webserver_user\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v1alpha1\",\n    \"kind\": \"DbcsSystem\",\n    \"metadata\": {\n      \"name\": \"dbcssystem-sample\"\n    },\n    \"spec\": {\n      \"foo\": \"bar\"\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v1alpha1\",\n    \"kind\": \"PDB\",\n    \"metadata\": {\n      \"labels\": {\n        \"cdb\": \"cdb-dev\"\n      },\n      \"name\": \"pdb1\",\n      \"namespace\": \"oracle-database-operator-system\"\n    },\n    \"spec\": {\n      \"action\": \"Create\",\n      \"adminName\": {\n        \"secret\": {\n          \"key\": \"sysadmin_user\",\n          \"secretName\": \"pdb1-secret\"\n        }\n      },\n      \"adminPwd\": {\n        \"secret\": {\n          \"key\": \"sysadmin_pwd\",\n          \"secretName\": \"pdb1-secret\"\n        }\n      },\n      \"cdbName\": \"devcdb\",\n      \"cdbResName\": \"cdb-dev\",\n      \"fileNameConversions\": \"NONE\",\n      \"pdbName\": \"pdbdev\",\n      \"tempSize\": \"100M\",\n      \"totalSize\": \"1G\"\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v4\",\n    \"kind\": \"AutonomousContainerDatabase\",\n    \"metadata\": {\n      \"name\": \"autonomouscontainerdatabase-sample\"\n    },\n    \"spec\": {\n      \"autonomousExadataVMClusterOCID\": \"ocid1.autonomousexainfrastructure...\",\n      \"compartmentOCID\": \"ocid1.compartment... OR ocid1.tenancy...\",\n      \"displayName\": \"newACD\",\n      \"ociConfig\": {\n        \"configMapName\": \"oci-cred\",\n        \"secretName\": \"oci-privatekey\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v4\",\n    \"kind\": \"AutonomousDatabase\",\n    \"metadata\": {\n      \"name\": \"autonomousdatabase-sample\"\n    },\n    \"spec\": {\n      \"action\": \"Create\",\n      \"details\": {\n        \"adminPassword\": {\n          \"k8sSecret\": {\n            \"name\": \"admin-password\"\n          }\n        },\n        \"compartmentId\": \"ocid1.compartment... OR ocid1.tenancy...\",\n        \"cpuCoreCount\": 1,\n        \"dataStorageSizeInTBs\": 1,\n        \"dbName\": \"NewADB\",\n        \"displayName\": \"NewADB\"\n      },\n      \"ociConfig\": {\n        \"configMapName\": \"oci-cred\",\n        \"secretName\": \"oci-privatekey\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v4\",\n    \"kind\": \"AutonomousDatabaseBackup\",\n    \"metadata\": {\n      \"name\": \"autonomousdatabasebackup-sample\"\n    },\n    \"spec\": {\n      \"displayName\": \"autonomousdatabasebackup-sample\",\n      \"isLongTermBackup\": true,\n      \"ociConfig\": {\n        \"configMapName\": \"oci-cred\",\n        \"secretName\": \"oci-privatekey\"\n      },\n      \"retentionPeriodInDays\": 90,\n      \"target\": {\n        \"k8sADB\": {\n          \"name\": \"autonomousdatabase-sample\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v4\",\n    \"kind\": \"SingleInstanceDatabase\",\n    \"metadata\": {\n      \"name\": \"sidb-sample\",\n      \"namespace\": \"default\"\n    },\n    \"spec\": {\n      \"adminPassword\": {\n        \"secretName\": \"db-admin-secret\"\n      },\n      \"archiveLog\": true,\n      \"charset\": \"AL32UTF8\",\n      \"edition\": \"enterprise\",\n      \"image\": {\n        \"pullFrom\": \"container-registry.oracle.com/database/enterprise_ru:19\",\n        \"pullSecrets\": \"oracle-container-registry-secret\"\n      },\n      \"pdbName\": \"orclpdb1\",\n      \"persistence\": {\n        \"accessMode\": \"ReadWriteOnce\",\n        \"size\": \"100Gi\",\n        \"storageClass\": \"oci-bv\"\n      },\n      \"replicas\": 1,\n      \"sid\": \"ORCL1\"\n    }\n  },\n  {\n    \"apiVersion\": \"observability.oracle.com/v1alpha1\",\n    \"kind\": \"DatabaseObserver\",\n    \"metadata\": {\n      \"name\": \"obs-sample\"\n    },\n    \"spec\": {\n      \"database\": {\n        \"dbConnectionString\": {\n          \"key\": \"connection\",\n          \"secret\": \"db-secret\"\n        },\n        \"dbPassword\": {\n          \"key\": \"password\",\n          \"secret\": \"db-secret\"\n        },\n        \"dbUser\": {\n          \"key\": \"username\",\n          \"secret\": \"db-secret\"\n        },\n        \"dbWallet\": {\n          \"secret\": \"instance-wallet\"\n        }\n      },\n      \"exporter\": {\n        \"configuration\": {\n          \"configmap\": {\n            \"configmapName\": \"devcm-oradevdb-config\",\n            \"key\": \"config.toml\"\n          }\n        },\n        \"image\": \"container-registry.oracle.com/database/observability-exporter:latest\",\n        \"service\": {\n          \"port\": 9161\n        }\n      },\n      \"ociConfig\": {\n        \"configMapName\": \"oci-cred\",\n        \"secretName\": \"oci-privatekey\"\n      },\n      \"prometheus\": {\n        \"labels\": {\n          \"app\": \"app-sample-label\"\n        },\n        \"port\": \"metrics\"\n      },\n      \"replicas\": 1\n    }\n  }\n]",
        "capabilities": "Seamless Upgrades",
        "categories": "Database",
        "containerImage": "container-registry.oracle.com/database/operator:1.2.0",
        "createdAt": "2025-04-10T20:09:48Z",
        "olm.operatorGroup": "global-operators",
        "olm.operatorNamespace": "operators",
        "operatorframework.io/properties": "{\"properties\":[{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousContainerDatabase\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousContainerDatabase\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabase\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabase\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabaseBackup\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabaseBackup\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabaseRestore\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabaseRestore\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"CDB\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"CDB\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"DataguardBroker\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"DataguardBroker\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"DbcsSystem\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"DbcsSystem\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"LREST\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"LRPDB\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"OracleRestDataService\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"OracleRestDataService\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"OrdsSrvs\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"PDB\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"PDB\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"ShardingDatabase\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"ShardingDatabase\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"SingleInstanceDatabase\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"SingleInstanceDatabase\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"observability.oracle.com\",\"kind\":\"DatabaseObserver\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"observability.oracle.com\",\"kind\":\"DatabaseObserver\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"observability.oracle.com\",\"kind\":\"DatabaseObserver\",\"version\":\"v4\"}},{\"type\":\"olm.package\",\"value\":{\"packageName\":\"oracle-database-operator\",\"version\":\"1.2.0\"}}]}",
        "operators.operatorframework.io/builder": "operator-sdk-v1.39.2",
        "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v4"
      },
      "owned_crds": [
        "autonomouscontainerdatabases.database.oracle.com",
        "autonomouscontainerdatabases.database.oracle.com",
        "autonomousdatabasebackups.database.oracle.com",
        "autonomousdatabasebackups.database.oracle.com",
        "autonomousdatabaserestores.database.oracle.com",
        "autonomousdatabaserestores.database.oracle.com",
        "autonomousdatabases.database.oracle.com",
        "autonomousdatabases.database.oracle.com",
        "cdbs.database.oracle.com",
        "cdbs.database.oracle.com",
        "databaseobservers.observability.oracle.com",
        "databaseobservers.observability.oracle.com",
        "databaseobservers.observability.oracle.com",
        "dataguardbrokers.database.oracle.com",
        "dataguardbrokers.database.oracle.com",
        "dbcssystems.database.oracle.com",
        "dbcssystems.database.oracle.com",
        "lrests.database.oracle.com",
        "lrpdbs.database.oracle.com",
        "oraclerestdataservices.database.oracle.com",
        "oraclerestdataservices.database.oracle.com",
        "ordssrvs.database.oracle.com",
        "pdbs.database.oracle.com",
        "pdbs.database.oracle.com",
        "shardingdatabases.database.oracle.com",
        "shardingdatabases.database.oracle.com",
        "singleinstancedatabases.database.oracle.com",
        "singleinstancedatabases.database.oracle.com"
      ],
      "required_crds": [],
      "permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps"
              ],
              "verbs": [
                "get",
                "list",
                "watch",
                "create",
                "update",
                "patch",
                "delete"
              ]
            },
            {
              "apiGroups": [
                "coordination.k8s.io"
              ],
              "resources": [
                "leases"
              ],
              "verbs": [
                "get",
                "list",
                "watch",
                "create",
                "update",
                "patch",
                "delete"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps/status"
              ],
              "verbs": [
                "get",
                "update",
                "patch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "events"
              ],
              "verbs": [
                "create",
                "patch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps",
                "containers",
                "deployments",
                "events",
                "namespaces",
                "persistentvolumeclaims",
                "pods",
                "pods/exec",
                "pods/log",
                "replicasets",
                "secrets",
                "services"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps/status",
                "daemonsets/status",
                "deployments/status",
                "services/status",
                "statefulsets/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "persistentvolumes"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "secrets/status"
              ],
              "verbs": [
                "get"
              ]
            },
            {
              "apiGroups": [
                "''"
              ],
              "resources": [
                "statefulsets/finalizers"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "apps"
              ],
              "resources": [
                "configmaps"
              ],
              "verbs": [
                "get",
                "list"
              ]
            },
            {
              "apiGroups": [
                "apps"
              ],
              "resources": [
                "daemonsets",
                "deployments",
                "pods",
                "replicasets",
                "services",
                "statefulsets"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "coordination.k8s.io"
              ],
              "resources": [
                "leases"
              ],
              "verbs": [
                "create",
                "get",
                "list",
                "update"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "autonomouscontainerdatabases",
                "autonomousdatabases",
                "cdbs",
                "dataguardbrokers",
                "dbcssystems",
                "events",
                "lrests",
                "lrpdbs",
                "oraclerestdataservices",
                "ordssrvs",
                "pdbs",
                "shardingdatabases",
                "singleinstancedatabases"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "autonomouscontainerdatabases/status",
                "autonomousdatabasebackups/status",
                "autonomousdatabaserestores/status",
                "cdbs/status",
                "dataguardbrokers/status",
                "dbcssystems/status",
                "lrests/status",
                "lrpdbs/status",
                "oraclerestdataservices/status",
                "ordssrvs/status",
                "pdbs/status",
                "shardingdatabases/status",
                "singleinstancedatabases/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "autonomousdatabasebackups",
                "autonomousdatabaserestores"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "autonomousdatabases/status"
              ],
              "verbs": [
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "cdbs/finalizers",
                "dataguardbrokers/finalizers",
                "lrests/finalizers",
                "oraclerestdataservices/finalizers",
                "ordssrvs/finalizers",
                "singleinstancedatabases/finalizers"
              ],
              "verbs": [
                "update"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "dbcssystems/finalizers",
                "lrpdbs/finalizers",
                "pdbs/finalizers",
                "shardingdatabases/finalizers"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "monitoring.coreos.com"
              ],
              "resources": [
                "servicemonitors"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "observability.oracle.com"
              ],
              "resources": [
                "databaseobservers"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "observability.oracle.com"
              ],
              "resources": [
                "databaseobservers/finalizers"
              ],
              "verbs": [
                "update"
              ]
            },
            {
              "apiGroups": [
                "observability.oracle.com"
              ],
              "resources": [
                "databaseobservers/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "storage.k8s.io"
              ],
              "resources": [
                "storageclasses"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            }
          ],
          "serviceAccountName": "default"
        }
      ],
      "cluster_permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                "authentication.k8s.io"
              ],
              "resources": [
                "tokenreviews"
              ],
              "verbs": [
                "create"
              ]
            },
            {
              "apiGroups": [
                "authorization.k8s.io"
              ],
              "resources": [
                "subjectaccessreviews"
              ],
              "verbs": [
                "create"
              ]
            }
          ],
          "serviceAccountName": "default"
        }
      ],
      "replaces": "oracle-database-operator.v1.1.0",
      "skips": [],
      "min_kube_version": ""
    },
    {
      "name": "cloudnative-pg.v1.27.0",
      "namespace": "kubevirt-hyperconverged",
      "display_name": "CloudNativePG",
      "version": "1.27.0",
      "phase": "Succeeded",
      "description": "Main features:\n\n- Direct integration with the Kubernetes API server for High Availability,\n  eliminating the need for external tools.\n- Self-healing capabilities, including:\n    - Automated failover by promoting the most aligned replica.\n    - Automatic recreation of failed replicas.\n- Planned switchover of the primary instance by promoting a selected replica.\n- Declarative management of key PostgreSQL configurations, including:\n    - PostgreSQL settings.\n    - Roles, users, and groups.\n    - Databases, extensions, and schemas.\n    - Tablespaces (including temporary tablespaces).\n- Flexible instance definition, supporting any number of instances (minimum 1\n  primary server).\n- Scale-up/down capabilities to dynamically adjust cluster size.\n- Read-Write and Read-Only Services, ensuring applications connect correctly:\n    - *Read-Write Service*: Routes connections to the primary server.\n    - *Read-Only Service*: Distributes connections among replicas for read workloads.\n- Support for quorum-based and priority-based PostgreSQL Synchronous\n  Replication.\n- Replica clusters enabling PostgreSQL distributed topologies across multiple\n  Kubernetes clusters (private, public, hybrid, and multi-cloud).\n- Delayed Replica clusters for point-in-time access to historical data.\n- Persistent volume management, including:\n    - Support for Local Persistent Volumes with PVC templates.\n    - Reuse of Persistent Volumes storage in Pods.\n    - Separate volumes for WAL files and tablespaces.\n- Backup and recovery options, including:\n    - Integration with the [Barman Cloud plugin](https://github.com/cloudnative-pg/plugin-barman-cloud)\n      for continuous online backup via WAL archiving to AWS S3, S3-compatible\n      services, Azure Blob Storage, and Google Cloud Storage, with support for\n      retention policies based on a configurable recovery window.\n    - Backups using volume snapshots (where supported by storage classes).\n    - Full and Point-In-Time recovery from volume snapshots or object stores (via Barman Cloud plugin).\n    - Backup from standby replicas to reduce primary workload impact.\n- Offline and online import of PostgreSQL databases, including major upgrades:\n    - *Offline Import*: Direct restore from existing databases.\n    - *Online Import*: PostgreSQL native logical replication via the `Subscription` resource.\n- Offline In-Place Major Upgrades of PostgreSQL\n- High Availability physical replication slots, including synchronization of\n  user-defined replication slots.\n- Parallel WAL archiving and restore, ensuring high-performance data\n  synchronization in high-write environments.\n- TLS support, including:\n    - Secure connections and client certificate authentication.\n    - Custom TLS certificates (integrated with `cert-manager`).\n- Startup and readiness probes, including replica probes based on desired lag\n  from the primary.\n- Declarative rolling updates for:\n    - PostgreSQL minor versions.\n    - Operator upgrades (in-place or rolling updates).\n- Standard output logging of PostgreSQL error messages in JSON format for\n  easier integration with log aggregation tools.\n- Prometheus-compatible metrics exporter (`metrics` port 9187) for custom\n  monitoring.\n- `cnpg` plugin for `kubectl` to simplify cluster operations.\n- Cluster hibernation for resource efficiency in inactive states.\n- Fencing of PostgreSQL clusters (full cluster or subset) to isolate instances\n  when needed.\n- Connection pooling with PgBouncer for improved database efficiency.\n- OLM (Operator Lifecycle Manager) installation support for streamlined\n  deployments.\n- Multi-arch container images, including Software Bill of Materials (SBOM) and\n  provenance attestations for security compliance.\n",
      "provider": "The CloudNativePG Contributors",
      "install_strategy": "OwnNamespace",
      "creation_timestamp": "2025-09-07T09:12:57Z",
      "labels": {
        "olm.copiedFrom": "operators",
        "olm.managed": "true",
        "operatorframework.io/arch.amd64": "supported"
      },
      "annotations": {
        "alm-examples": "[\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"backup-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      }\n    },\n    \"status\": {\n      \"serverName\": null\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Cluster\",\n    \"metadata\": {\n      \"name\": \"cluster-sample\"\n    },\n    \"spec\": {\n      \"instances\": 3,\n      \"logLevel\": \"info\",\n      \"primaryUpdateStrategy\": \"unsupervised\",\n      \"storage\": {\n        \"size\": \"1Gi\"\n      },\n      \"walStorage\": {\n        \"size\": \"1Gi\"\n      }\n    },\n    \"status\": {\n      \"instances\": 3\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"ClusterImageCatalog\",\n    \"metadata\": {\n      \"name\": \"postgresql\"\n    },\n    \"spec\": {\n      \"images\": [\n        {\n          \"image\": \"ghcr.io/cloudnative-pg/postgresql@sha256:1c97e0d6e94d8b335be7f258eeda2202966df5fde0c934eef4b13c760ec6a891\",\n          \"major\": 15\n        },\n        {\n          \"image\": \"ghcr.io/cloudnative-pg/postgresql@sha256:ee2e3ce7f0ea935c3f4ab245c0b3959c9f1c49816ae02222ceb6bc347f48e43b\",\n          \"major\": 16\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Database\",\n    \"metadata\": {\n      \"name\": \"database-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      },\n      \"name\": \"database-sample\",\n      \"owner\": \"app\"\n    },\n    \"status\": {\n      \"applied\": false\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"ImageCatalog\",\n    \"metadata\": {\n      \"name\": \"postgresql\",\n      \"namespace\": \"default\"\n    },\n    \"spec\": {\n      \"images\": [\n        {\n          \"image\": \"ghcr.io/cloudnative-pg/postgresql@sha256:1c97e0d6e94d8b335be7f258eeda2202966df5fde0c934eef4b13c760ec6a891\",\n          \"major\": 15\n        },\n        {\n          \"image\": \"ghcr.io/cloudnative-pg/postgresql@sha256:ee2e3ce7f0ea935c3f4ab245c0b3959c9f1c49816ae02222ceb6bc347f48e43b\",\n          \"major\": 16\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Pooler\",\n    \"metadata\": {\n      \"name\": \"pooler-sample-rw\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      },\n      \"instances\": 1,\n      \"pgbouncer\": {\n        \"poolMode\": \"session\"\n      },\n      \"type\": \"rw\"\n    },\n    \"status\": {\n      \"instances\": 1\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Publication\",\n    \"metadata\": {\n      \"name\": \"publication-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      },\n      \"dbname\": \"app\",\n      \"name\": \"pub\",\n      \"target\": {\n        \"allTables\": true\n      }\n    },\n    \"status\": {\n      \"applied\": false\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"ScheduledBackup\",\n    \"metadata\": {\n      \"name\": \"scheduledbackup-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      },\n      \"schedule\": \"0 0 0 * * *\"\n    },\n    \"status\": {\n      \"lastCheckTime\": null\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Subscription\",\n    \"metadata\": {\n      \"name\": \"subscription-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample-dest\"\n      },\n      \"dbname\": \"app\",\n      \"externalClusterName\": \"cluster-sample\",\n      \"name\": \"sub\",\n      \"publicationName\": \"pub\"\n    },\n    \"status\": {\n      \"applied\": false\n    }\n  }\n]",
        "capabilities": "Auto Pilot",
        "categories": "Database",
        "certified": "true",
        "containerImage": "ghcr.io/cloudnative-pg/cloudnative-pg@sha256:53995e9d6a7760c77d77e5298f78b49029427494f4dd933d5fa7a74f7af3bb44",
        "createdAt": "2025-08-12T14:08:35Z",
        "description": "CloudNativePG is an open source operator designed to manage highly available PostgreSQL databases with a primary/standby architecture on any supported Kubernetes cluster.",
        "features.operators.openshift.io/disconnected": "true",
        "features.operators.openshift.io/fips-compliant": "false",
        "features.operators.openshift.io/proxy-aware": "false",
        "features.operators.openshift.io/tls-profiles": "false",
        "features.operators.openshift.io/token-auth-aws": "false",
        "features.operators.openshift.io/token-auth-azure": "false",
        "features.operators.openshift.io/token-auth-gcp": "false",
        "olm.operatorGroup": "global-operators",
        "olm.operatorNamespace": "operators",
        "operatorframework.io/properties": "{\"properties\":[{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Backup\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Cluster\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"ClusterImageCatalog\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Database\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"FailoverQuorum\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"ImageCatalog\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Pooler\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Publication\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"ScheduledBackup\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Subscription\",\"version\":\"v1\"}},{\"type\":\"olm.package\",\"value\":{\"packageName\":\"cloudnative-pg\",\"version\":\"1.27.0\"}}]}",
        "operators.operatorframework.io/builder": "operator-sdk-v1.41.1",
        "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v4",
        "repository": "https://github.com/cloudnative-pg/cloudnative-pg",
        "support": "Community"
      },
      "owned_crds": [
        "backups.postgresql.cnpg.io",
        "clusterimagecatalogs.postgresql.cnpg.io",
        "clusters.postgresql.cnpg.io",
        "databases.postgresql.cnpg.io",
        "failoverquorums.postgresql.cnpg.io",
        "imagecatalogs.postgresql.cnpg.io",
        "poolers.postgresql.cnpg.io",
        "publications.postgresql.cnpg.io",
        "scheduledbackups.postgresql.cnpg.io",
        "subscriptions.postgresql.cnpg.io"
      ],
      "required_crds": [],
      "permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps",
                "secrets",
                "services"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps/status",
                "secrets/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "events"
              ],
              "verbs": [
                "create",
                "patch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "nodes"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "persistentvolumeclaims",
                "pods",
                "pods/exec"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "pods/status"
              ],
              "verbs": [
                "get"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "serviceaccounts"
              ],
              "verbs": [
                "create",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "admissionregistration.k8s.io"
              ],
              "resources": [
                "mutatingwebhookconfigurations",
                "validatingwebhookconfigurations"
              ],
              "verbs": [
                "get",
                "patch"
              ]
            },
            {
              "apiGroups": [
                "apps"
              ],
              "resources": [
                "deployments"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "batch"
              ],
              "resources": [
                "jobs"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "coordination.k8s.io"
              ],
              "resources": [
                "leases"
              ],
              "verbs": [
                "create",
                "get",
                "update"
              ]
            },
            {
              "apiGroups": [
                "monitoring.coreos.com"
              ],
              "resources": [
                "podmonitors"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "policy"
              ],
              "resources": [
                "poddisruptionbudgets"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "backups",
                "clusters",
                "databases",
                "poolers",
                "publications",
                "scheduledbackups",
                "subscriptions"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "backups/status",
                "databases/status",
                "publications/status",
                "scheduledbackups/status",
                "subscriptions/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "clusterimagecatalogs",
                "imagecatalogs"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "clusters/finalizers",
                "poolers/finalizers"
              ],
              "verbs": [
                "update"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "clusters/status",
                "failoverquorums/status",
                "poolers/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "failoverquorums"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "rbac.authorization.k8s.io"
              ],
              "resources": [
                "rolebindings",
                "roles"
              ],
              "verbs": [
                "create",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "snapshot.storage.k8s.io"
              ],
              "resources": [
                "volumesnapshots"
              ],
              "verbs": [
                "create",
                "get",
                "list",
                "patch",
                "watch"
              ]
            }
          ],
          "serviceAccountName": "cnpg-manager"
        }
      ],
      "cluster_permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "nodes"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "clusterimagecatalogs"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            }
          ],
          "serviceAccountName": "cnpg-manager"
        }
      ],
      "replaces": "cloudnative-pg.v1.26.1",
      "skips": [],
      "min_kube_version": "1.23.0"
    },
    {
      "name": "mariadb-operator.v25.8.3",
      "namespace": "kubevirt-hyperconverged",
      "display_name": "MariaDB Operator",
      "version": "25.8.3",
      "phase": "Succeeded",
      "description": "Install [`mariadb-operator`](https://github.com/mariadb-operator/mariadb-operator) via [OLM](https://olm.operatorframework.io/) using the [helm chart](https://artifacthub.io/packages/helm/mariadb-operator/mariadb-operator).\n\nThis helm operator provides provides a 1:1 mapping between the official helm chart and the [`MariadbOperator`](https://github.com/mariadb-operator/mariadb-operator-helm/blob/main/config/samples/helm_v1alpha1_mariadboperator.yaml) CRD, allowing to install [`mariadb-operator`](https://github.com/mariadb-operator/mariadb-operator) via OLM without having to do any change in the helm chart.\n\nNormally, you would install [`mariadb-operator`](https://github.com/mariadb-operator/mariadb-operator) providing this `values.yaml` to the helm chart:\n```yaml\nimage:\n  repository: ghcr.io/mariadb-operator/mariadb-operator\n  pullPolicy: IfNotPresent\nlogLevel: INFO\nha:\n  enabled: true\nmetrics:\n  enabled: true\n  serviceMonitor:\n    enabled: true\nwebhook:\n  cert:\n    certManager:\n      enabled: true\n```\n\nThis helm chart installation is abstracted in the [`MariadbOperator`](https://github.com/mariadb-operator/mariadb-operator-helm/blob/main/config/samples/helm_v1alpha1_mariadboperator.yaml) CRD, which will be reconciled by the helm operator:\n```yaml\napiVersion: helm.k8s.mariadb.com/v1alpha1\nkind: MariadbOperator\nmetadata:\n  name: mariadb-operator\nspec:\n  image:\n    repository: ghcr.io/mariadb-operator/mariadb-operator\n    pullPolicy: IfNotPresent\n  logLevel: INFO\n  ha:\n    enabled: true\n  metrics:\n    enabled: true\n    serviceMonitor:\n      enabled: true\n  webhook:\n    cert:\n      certManager:\n        enabled: true\n```\n\nOnce you have installed the operator, you will able to install a [`MariaDB`](https://github.com/mariadb-operator/mariadb-operator/blob/main/examples/manifests/mariadb_v1alpha1_mariadb.yaml) instance. Refer to the main [`mariadb-operator`](https://github.com/mariadb-operator/mariadb-operator) documentation for getting started with the rest of CRDs.\n\n## Documentation\n* [mariadb-operator](https://github.com/mariadb-operator/mariadb-operator/blob/main/README.md)\n* [mariadb-operator-helm](https://github.com/mariadb-operator/mariadb-operator-helm/blob/main/README.md)\n\n## Releases\nThis operator is automatically published in the following repositories whenever a new version of the [helm chart](https://artifacthub.io/packages/helm/mariadb-operator/mariadb-operator) is released:\n- [k8s-operatorhub/community-operators](https://github.com/k8s-operatorhub/community-operators)\n- [redhat-openshift-ecosystem/community-operators-prod](https://github.com/redhat-openshift-ecosystem/community-operators-prod)\n\n## Roadmap\nTake a look at our [roadmap](https://github.com/mariadb-operator/mariadb-operator/blob/main/ROADMAP.md) and feel free to open an issue to suggest new features.\n\n## Contributing\nWe welcome and encourage contributions to this project! Please check our [contributing](https://github.com/mariadb-operator/mariadb-operator/blob/main/CONTRIBUTING.md) and [development](https://github.com/mariadb-operator/mariadb-operator/blob/main/docs/DEVELOPMENT.md) guides. PRs welcome!\n\n## Get in touch\nJoin us on Slack: **[MariaDB Community Slack](https://r.mariadb.com/join-community-slack)**.\n",
      "provider": "mariadb-operator",
      "install_strategy": "OwnNamespace",
      "creation_timestamp": "2025-09-07T09:15:59Z",
      "labels": {
        "olm.copiedFrom": "operators",
        "olm.managed": "true"
      },
      "annotations": {
        "alm-examples": "[\n  {\n    \"apiVersion\": \"helm.mariadb.mmontes.io/v1alpha1\",\n    \"kind\": \"MariadbOperator\",\n    \"metadata\": {\n      \"name\": \"mariadb-operator\"\n    },\n    \"spec\": {\n      \"affinity\": {},\n      \"certController\": {\n        \"affinity\": {},\n        \"caValidity\": \"35064h\",\n        \"certValidity\": \"8766h\",\n        \"enabled\": true,\n        \"extrArgs\": [],\n        \"extraVolumeMounts\": [],\n        \"extraVolumes\": [],\n        \"ha\": {\n          \"enabled\": false,\n          \"replicas\": 3\n        },\n        \"image\": {\n          \"pullPolicy\": \"IfNotPresent\",\n          \"repository\": \"ghcr.io/mariadb-operator/mariadb-operator\",\n          \"tag\": \"\"\n        },\n        \"imagePullSecrets\": [],\n        \"lookaheadValidity\": \"2160h\",\n        \"nodeSelector\": {},\n        \"podAnnotations\": {},\n        \"podSecurityContext\": {},\n        \"requeueDuration\": \"5m\",\n        \"resources\": {},\n        \"securityContext\": {},\n        \"serviceAccount\": {\n          \"annotations\": {},\n          \"automount\": true,\n          \"enabled\": true,\n          \"extraLabels\": {},\n          \"name\": \"\"\n        },\n        \"serviceMonitor\": {\n          \"additionalLabels\": {},\n          \"enabled\": true,\n          \"interval\": \"30s\",\n          \"scrapeTimeout\": \"25s\"\n        },\n        \"tolerations\": []\n      },\n      \"clusterName\": \"cluster.local\",\n      \"extrArgs\": [],\n      \"extraVolumeMounts\": [],\n      \"extraVolumes\": [],\n      \"fullnameOverride\": \"\",\n      \"ha\": {\n        \"enabled\": false,\n        \"replicas\": 3\n      },\n      \"image\": {\n        \"pullPolicy\": \"IfNotPresent\",\n        \"repository\": \"ghcr.io/mariadb-operator/mariadb-operator\",\n        \"tag\": \"\"\n      },\n      \"imagePullSecrets\": [],\n      \"logLevel\": \"INFO\",\n      \"metrics\": {\n        \"enabled\": false,\n        \"serviceMonitor\": {\n          \"additionalLabels\": {},\n          \"enabled\": true,\n          \"interval\": \"30s\",\n          \"scrapeTimeout\": \"25s\"\n        }\n      },\n      \"nameOverride\": \"\",\n      \"nodeSelector\": {},\n      \"podAnnotations\": {},\n      \"podSecurityContext\": {},\n      \"rbac\": {\n        \"enabled\": true\n      },\n      \"resources\": {},\n      \"securityContext\": {},\n      \"serviceAccount\": {\n        \"annotations\": {},\n        \"automount\": true,\n        \"enabled\": true,\n        \"extraLabels\": {},\n        \"name\": \"\"\n      },\n      \"tolerations\": [],\n      \"webhook\": {\n        \"affinity\": {},\n        \"annotations\": {},\n        \"cert\": {\n          \"caPath\": \"/tmp/k8s-webhook-server/certificate-authority\",\n          \"certManager\": {\n            \"duration\": \"\",\n            \"enabled\": false,\n            \"issuerRef\": {},\n            \"renewBefore\": \"\"\n          },\n          \"path\": \"/tmp/k8s-webhook-server/serving-certs\",\n          \"secretAnnotations\": {}\n        },\n        \"extrArgs\": [],\n        \"extraVolumeMounts\": [],\n        \"extraVolumes\": [],\n        \"ha\": {\n          \"enabled\": false,\n          \"replicas\": 3\n        },\n        \"hostNetwork\": false,\n        \"image\": {\n          \"pullPolicy\": \"IfNotPresent\",\n          \"repository\": \"ghcr.io/mariadb-operator/mariadb-operator\",\n          \"tag\": \"\"\n        },\n        \"imagePullSecrets\": [],\n        \"nodeSelector\": {},\n        \"podAnnotations\": {},\n        \"podSecurityContext\": {},\n        \"port\": 10250,\n        \"resources\": {},\n        \"securityContext\": {},\n        \"serviceAccount\": {\n          \"annotations\": {},\n          \"automount\": true,\n          \"enabled\": true,\n          \"extraLabels\": {},\n          \"name\": \"\"\n        },\n        \"serviceMonitor\": {\n          \"additionalLabels\": {},\n          \"enabled\": true,\n          \"interval\": \"30s\",\n          \"scrapeTimeout\": \"25s\"\n        },\n        \"tolerations\": []\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"backup\"\n    },\n    \"spec\": {\n      \"args\": [\n        \"--single-transaction\",\n        \"--all-databases\"\n      ],\n      \"logLevel\": \"info\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"maxRetention\": \"720h\",\n      \"resources\": {\n        \"limits\": {\n          \"cpu\": \"300m\",\n          \"memory\": \"512Mi\"\n        },\n        \"requests\": {\n          \"cpu\": \"100m\",\n          \"memory\": \"128Mi\"\n        }\n      },\n      \"schedule\": {\n        \"cron\": \"*/1 * * * *\",\n        \"suspend\": false\n      },\n      \"storage\": {\n        \"s3\": {\n          \"accessKeyIdSecretKeyRef\": {\n            \"key\": \"access-key-id\",\n            \"name\": \"minio\"\n          },\n          \"bucket\": \"backups\",\n          \"endpoint\": \"minio.minio.svc.cluster.local:9000\",\n          \"prefix\": \"mariadb\",\n          \"secretAccessKeySecretKeyRef\": {\n            \"key\": \"secret-access-key\",\n            \"name\": \"minio\"\n          },\n          \"tls\": {\n            \"caSecretKeyRef\": {\n              \"key\": \"ca.crt\",\n              \"name\": \"minio-ca\"\n            },\n            \"enabled\": true\n          }\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Connection\",\n    \"metadata\": {\n      \"name\": \"connection\"\n    },\n    \"spec\": {\n      \"database\": \"mariadb\",\n      \"healthCheck\": {\n        \"interval\": \"10s\",\n        \"retryInterval\": \"3s\"\n      },\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"params\": {\n        \"parseTime\": \"true\"\n      },\n      \"passwordSecretKeyRef\": {\n        \"key\": \"password\",\n        \"name\": \"mariadb\"\n      },\n      \"secretName\": \"connection\",\n      \"secretTemplate\": {\n        \"annotations\": {\n          \"k8s.mariadb.com/connection\": \"sample\"\n        },\n        \"databaseKey\": \"database\",\n        \"hostKey\": \"host\",\n        \"key\": \"dsn\",\n        \"labels\": {\n          \"k8s.mariadb.com/connection\": \"sample\"\n        },\n        \"passwordKey\": \"password\",\n        \"portKey\": \"port\",\n        \"usernameKey\": \"username\"\n      },\n      \"serviceName\": \"mariadb\",\n      \"username\": \"mariadb\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Database\",\n    \"metadata\": {\n      \"name\": \"data-test\"\n    },\n    \"spec\": {\n      \"characterSet\": \"utf8\",\n      \"collate\": \"utf8_general_ci\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"retryInterval\": \"5s\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Grant\",\n    \"metadata\": {\n      \"name\": \"grant\"\n    },\n    \"spec\": {\n      \"database\": \"*\",\n      \"grantOption\": true,\n      \"host\": \"%\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"privileges\": [\n        \"SELECT\",\n        \"INSERT\",\n        \"UPDATE\"\n      ],\n      \"requeueInterval\": \"30s\",\n      \"retryInterval\": \"5s\",\n      \"table\": \"*\",\n      \"username\": \"user\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"MariaDB\",\n    \"metadata\": {\n      \"name\": \"mariadb\"\n    },\n    \"spec\": {\n      \"connection\": {\n        \"secretName\": \"mariadb-conn\",\n        \"secretTemplate\": {\n          \"key\": \"dsn\"\n        }\n      },\n      \"database\": \"mariadb\",\n      \"galera\": {\n        \"enabled\": true\n      },\n      \"metrics\": {\n        \"enabled\": true,\n        \"passwordSecretKeyRef\": {\n          \"generate\": true,\n          \"key\": \"password\",\n          \"name\": \"mariadb-metrics\"\n        }\n      },\n      \"myCnf\": \"[mariadb]\\nbind-address=*\\ndefault_storage_engine=InnoDB\\nbinlog_format=row\\ninnodb_autoinc_lock_mode=2\\ninnodb_buffer_pool_size=1024M\\nmax_allowed_packet=256M\\n\",\n      \"passwordSecretKeyRef\": {\n        \"generate\": true,\n        \"key\": \"password\",\n        \"name\": \"mariadb-password\"\n      },\n      \"primaryConnection\": {\n        \"secretName\": \"mariadb-conn-primary\",\n        \"secretTemplate\": {\n          \"key\": \"dsn\"\n        }\n      },\n      \"primaryService\": {\n        \"type\": \"ClusterIP\"\n      },\n      \"replicas\": 3,\n      \"rootPasswordSecretKeyRef\": {\n        \"generate\": true,\n        \"key\": \"password\",\n        \"name\": \"mariadb-root\"\n      },\n      \"secondaryConnection\": {\n        \"secretName\": \"mariadb-conn-secondary\",\n        \"secretTemplate\": {\n          \"key\": \"dsn\"\n        }\n      },\n      \"secondaryService\": {\n        \"type\": \"ClusterIP\"\n      },\n      \"service\": {\n        \"type\": \"ClusterIP\"\n      },\n      \"storage\": {\n        \"size\": \"1Gi\"\n      },\n      \"updateStrategy\": {\n        \"type\": \"ReplicasFirstPrimaryLast\"\n      },\n      \"username\": \"mariadb\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"MaxScale\",\n    \"metadata\": {\n      \"name\": \"maxscale-galera\"\n    },\n    \"spec\": {\n      \"admin\": {\n        \"guiEnabled\": true,\n        \"port\": 8989\n      },\n      \"auth\": {\n        \"generate\": true\n      },\n      \"config\": {\n        \"sync\": {\n          \"database\": \"mysql\",\n          \"interval\": \"5s\",\n          \"timeout\": \"10s\"\n        }\n      },\n      \"connection\": {\n        \"port\": 3306,\n        \"secretName\": \"mxs-galera-conn\"\n      },\n      \"guiKubernetesService\": {\n        \"metadata\": {\n          \"annotations\": {\n            \"metallb.universe.tf/loadBalancerIPs\": \"172.18.0.231\"\n          }\n        },\n        \"type\": \"LoadBalancer\"\n      },\n      \"kubernetesService\": {\n        \"annotations\": {\n          \"metallb.universe.tf/loadBalancerIPs\": \"172.18.0.224\"\n        },\n        \"type\": \"LoadBalancer\"\n      },\n      \"mariaDbRef\": {\n        \"name\": \"mariadb-galera\"\n      },\n      \"monitor\": {\n        \"cooperativeMonitoring\": \"majority_of_all\",\n        \"interval\": \"2s\",\n        \"params\": {\n          \"available_when_donor\": \"false\",\n          \"disable_master_failback\": \"false\",\n          \"disable_master_role_setting\": \"false\"\n        }\n      },\n      \"replicas\": 3,\n      \"requeueInterval\": \"10s\",\n      \"services\": [\n        {\n          \"listener\": {\n            \"params\": {\n              \"connection_metadata\": \"tx_isolation=auto\"\n            },\n            \"port\": 3306,\n            \"protocol\": \"MariaDBProtocol\"\n          },\n          \"name\": \"rw-router\",\n          \"params\": {\n            \"master_accept_reads\": \"true\",\n            \"max_replication_lag\": \"3s\",\n            \"max_slave_connections\": \"255\",\n            \"transaction_replay\": \"true\",\n            \"transaction_replay_attempts\": \"10\",\n            \"transaction_replay_timeout\": \"5s\"\n          },\n          \"router\": \"readwritesplit\"\n        },\n        {\n          \"listener\": {\n            \"port\": 3307\n          },\n          \"name\": \"rconn-master-router\",\n          \"params\": {\n            \"master_accept_reads\": \"true\",\n            \"max_replication_lag\": \"3s\",\n            \"router_options\": \"master\"\n          },\n          \"router\": \"readconnroute\"\n        },\n        {\n          \"listener\": {\n            \"port\": 3308\n          },\n          \"name\": \"rconn-slave-router\",\n          \"params\": {\n            \"max_replication_lag\": \"3s\",\n            \"router_options\": \"slave\"\n          },\n          \"router\": \"readconnroute\"\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"PhysicalBackup\",\n    \"metadata\": {\n      \"name\": \"physicalbackup\"\n    },\n    \"spec\": {\n      \"compression\": \"bzip2\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"maxRetention\": \"720h\",\n      \"podAffinity\": true,\n      \"resources\": {\n        \"limits\": {\n          \"cpu\": \"300m\",\n          \"memory\": \"512Mi\"\n        },\n        \"requests\": {\n          \"cpu\": \"100m\",\n          \"memory\": \"128Mi\"\n        }\n      },\n      \"schedule\": {\n        \"cron\": \"*/1 * * * *\",\n        \"immediate\": true,\n        \"suspend\": false\n      },\n      \"serviceAccountName\": \"backup\",\n      \"stagingStorage\": {\n        \"persistentVolumeClaim\": {\n          \"accessModes\": [\n            \"ReadWriteOnce\"\n          ],\n          \"resources\": {\n            \"requests\": {\n              \"storage\": \"1Gi\"\n            }\n          }\n        }\n      },\n      \"storage\": {\n        \"s3\": {\n          \"accessKeyIdSecretKeyRef\": {\n            \"key\": \"access-key-id\",\n            \"name\": \"minio\"\n          },\n          \"bucket\": \"physicalbackups\",\n          \"endpoint\": \"minio.minio.svc.cluster.local:9000\",\n          \"prefix\": \"mariadb\",\n          \"region\": \"us-east-1\",\n          \"secretAccessKeySecretKeyRef\": {\n            \"key\": \"secret-access-key\",\n            \"name\": \"minio\"\n          },\n          \"tls\": {\n            \"caSecretKeyRef\": {\n              \"key\": \"ca.crt\",\n              \"name\": \"minio-ca\"\n            },\n            \"enabled\": true\n          }\n        }\n      },\n      \"timeout\": \"1h\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Restore\",\n    \"metadata\": {\n      \"name\": \"restore\"\n    },\n    \"spec\": {\n      \"backupRef\": {\n        \"name\": \"backup\"\n      },\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"resources\": {\n        \"limits\": {\n          \"cpu\": \"300m\",\n          \"memory\": \"512Mi\"\n        },\n        \"requests\": {\n          \"cpu\": \"100m\",\n          \"memory\": \"128Mi\"\n        }\n      },\n      \"targetRecoveryTime\": \"2023-12-19T09:00:00Z\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"SqlJob\",\n    \"metadata\": {\n      \"name\": \"03-stars\"\n    },\n    \"spec\": {\n      \"database\": \"mariadb\",\n      \"dependsOn\": [\n        {\n          \"name\": \"01-users\"\n        },\n        {\n          \"name\": \"02-repos\"\n        }\n      ],\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"passwordSecretKeyRef\": {\n        \"key\": \"password\",\n        \"name\": \"mariadb\"\n      },\n      \"schedule\": {\n        \"cron\": \"*/1 * * * *\",\n        \"suspend\": false\n      },\n      \"sql\": \"CREATE TABLE IF NOT EXISTS stars (\\n  id bigint PRIMARY KEY AUTO_INCREMENT,\\n  user_id bigint NOT NULL,\\n  repo_id bigint NOT NULL,\\n  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,\\n  FOREIGN KEY (repo_id) REFERENCES repos(id) ON DELETE CASCADE,\\n  UNIQUE KEY (user_id, repo_id)\\n);\\nINSERT INTO stars(user_id, repo_id) \\n  VALUES((SELECT id FROM users ORDER BY RAND() LIMIT 1), (SELECT id FROM repos ORDER BY RAND() LIMIT 1))\\n  ON DUPLICATE KEY UPDATE id=id;\\nDELETE FROM stars WHERE id = (SELECT id FROM stars ORDER BY RAND() LIMIT 1);\\nSELECT r.name AS repo, COUNT(*) AS stars\\nFROM stars s\\nJOIN repos r\\nON s.repo_id = r.id\\nGROUP BY r.id\\nORDER BY stars DESC;\",\n      \"username\": \"mariadb\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"User\",\n    \"metadata\": {\n      \"name\": \"user\"\n    },\n    \"spec\": {\n      \"host\": \"%\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"maxUserConnections\": 20,\n      \"passwordSecretKeyRef\": {\n        \"key\": \"password\",\n        \"name\": \"mariadb\"\n      },\n      \"retryInterval\": \"5s\"\n    }\n  }\n]",
        "capabilities": "Deep Insights",
        "categories": "Database",
        "containerImage": "ghcr.io/mariadb-operator/mariadb-operator-helm:25.8.3",
        "createdAt": "2025-08-08T12:14:12Z",
        "description": "Run and operate MariaDB in a cloud native way",
        "features.operators.openshift.io/disconnected": "false",
        "features.operators.openshift.io/fips-compliant": "false",
        "features.operators.openshift.io/proxy-aware": "false",
        "features.operators.openshift.io/tls-profiles": "false",
        "features.operators.openshift.io/token-auth-aws": "false",
        "features.operators.openshift.io/token-auth-azure": "false",
        "features.operators.openshift.io/token-auth-gcp": "false",
        "olm.operatorGroup": "global-operators",
        "olm.operatorNamespace": "operators",
        "operatorframework.io/properties": "{\"properties\":[{\"type\":\"olm.gvk\",\"value\":{\"group\":\"helm.mariadb.mmontes.io\",\"kind\":\"MariadbOperator\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Backup\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Connection\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Database\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Grant\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"MariaDB\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"MaxScale\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"PhysicalBackup\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Restore\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"SqlJob\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"User\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.package\",\"value\":{\"packageName\":\"mariadb-operator\",\"version\":\"25.8.3\"}}]}",
        "operators.operatorframework.io/builder": "operator-sdk-v1.26.0",
        "operators.operatorframework.io/project_layout": "helm.sdk.operatorframework.io/v1",
        "repository": "https://github.com/mariadb-operator/mariadb-operator",
        "support": "mariadb-operator"
      },
      "owned_crds": [
        "backups.k8s.mariadb.com",
        "connections.k8s.mariadb.com",
        "databases.k8s.mariadb.com",
        "grants.k8s.mariadb.com",
        "mariadboperators.helm.mariadb.mmontes.io",
        "mariadbs.k8s.mariadb.com",
        "maxscales.k8s.mariadb.com",
        "physicalbackups.k8s.mariadb.com",
        "restores.k8s.mariadb.com",
        "sqljobs.k8s.mariadb.com",
        "users.k8s.mariadb.com"
      ],
      "required_crds": [],
      "permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps"
              ],
              "verbs": [
                "get",
                "list",
                "watch",
                "create",
                "update",
                "patch",
                "delete"
              ]
            },
            {
              "apiGroups": [
                "coordination.k8s.io"
              ],
              "resources": [
                "leases"
              ],
              "verbs": [
                "get",
                "list",
                "watch",
                "create",
                "update",
                "patch",
                "delete"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "events"
              ],
              "verbs": [
                "create",
                "patch"
              ]
            }
          ],
          "serviceAccountName": "mariadb-operator-helm-controller-manager"
        }
      ],
      "cluster_permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "namespaces"
              ],
              "verbs": [
                "get"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "secrets"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "events"
              ],
              "verbs": [
                "create"
              ]
            },
            {
              "apiGroups": [
                "helm.mariadb.mmontes.io"
              ],
              "resources": [
                "mariadboperators",
                "mariadboperators/status",
                "mariadboperators/finalizers"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "rbac.authorization.k8s.io"
              ],
              "resources": [
                "clusterrolebindings",
                "clusterroles"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "admissionregistration.k8s.io"
              ],
              "resources": [
                "validatingwebhookconfigurations",
                "mutatingwebhookconfigurations"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "rbac.authorization.k8s.io"
              ],
              "resources": [
                "rolebindings",
                "roles"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "apps"
              ],
              "resources": [
                "deployments"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "serviceaccounts",
                "services"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "apiextensions.k8s.io"
              ],
              "resources": [
                "customresourcedefinitions"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "cert-manager.io"
              ],
              "resources": [
                "certificates",
                "issuers"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "monitoring.coreos.com"
              ],
              "resources": [
                "servicemonitors"
              ],
              "verbs": [
                "*"
              ]
            }
          ],
          "serviceAccountName": "mariadb-operator-helm-controller-manager"
        }
      ],
      "replaces": "mariadb-operator.v25.8.2",
      "skips": [],
      "min_kube_version": "1.16.0"
    },
    {
      "name": "oracle-database-operator.v1.2.0",
      "namespace": "kubevirt-hyperconverged",
      "display_name": "Oracle Database Operator",
      "version": "1.2.0",
      "phase": "Installing",
      "description": "As part of Oracle's resolution to make Oracle Database Kubernetes native (that is, observable and operable by Kubernetes), Oracle released Oracle Database Operator for Kubernetes (OraOperator or the operator). OraOperator extends the Kubernetes API with custom resources and controllers for automating Oracle Database lifecycle management.\nIn this v1.2.0 production release, OraOperator supports the following database configurations and infrastructure:\n##Supported Database Configurations:\n* Oracle Cloud Infrastructure (OCI) Databases\n  * Oracle Autonomous Database Serverless (ADB-S)\n  * Oracle Autonomous Database on Dedicated on (ADB-D)\n  * Oracle Base Database Cloud Service (Base DB)\n* Containerized Database deployments on Kubernetes\n  * Oracle Kubernetes Engine (OKE) and Oracle Cloud Native Environments (OCNE)\n    * Single Instance databases (SIDB)\n    * Globally Distributed Databases (Shared)\n    * Oracle Data Guard\n    * True Cache (Preview release)\n    * Oracle Database Observability\n* On-Premises Databases\n  * Oracle Multitenant Databases (CDB/PDBs management)\n  * ORDS Services\n\nRefer to full feature list and capabilities: [https://github.com/oracle/oracle-database-operator/blob/main/README.md](https://github.com/oracle/oracle-database-operator/blob/main/README.md)\n",
      "provider": "Oracle",
      "install_strategy": "OwnNamespace",
      "creation_timestamp": "2025-09-07T09:13:38Z",
      "labels": {
        "olm.copiedFrom": "operators",
        "olm.managed": "true"
      },
      "annotations": {
        "alm-examples": "[\n  {\n    \"apiVersion\": \"database.oracle.com/v1alpha1\",\n    \"kind\": \"CDB\",\n    \"metadata\": {\n      \"name\": \"cdb-dev\",\n      \"namespace\": \"oracle-database-operator-system\"\n    },\n    \"spec\": {\n      \"cdbAdminPwd\": {\n        \"secret\": {\n          \"key\": \"cdbadmin_pwd\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"cdbAdminUser\": {\n        \"secret\": {\n          \"key\": \"cdbadmin_user\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"cdbName\": \"devcdb\",\n      \"dbPort\": 1521,\n      \"dbServer\": \"172.17.0.4\",\n      \"ordsImage\": \"\",\n      \"ordsImagePullPolicy\": \"Always\",\n      \"ordsPwd\": {\n        \"secret\": {\n          \"key\": \"ords_pwd\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"replicas\": 1,\n      \"serviceName\": \"devdb.example.com\",\n      \"sysAdminPwd\": {\n        \"secret\": {\n          \"key\": \"sysadmin_pwd\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"webServerPwd\": {\n        \"secret\": {\n          \"key\": \"webserver_pwd\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"webServerUser\": {\n        \"secret\": {\n          \"key\": \"webserver_user\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v1alpha1\",\n    \"kind\": \"DbcsSystem\",\n    \"metadata\": {\n      \"name\": \"dbcssystem-sample\"\n    },\n    \"spec\": {\n      \"foo\": \"bar\"\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v1alpha1\",\n    \"kind\": \"PDB\",\n    \"metadata\": {\n      \"labels\": {\n        \"cdb\": \"cdb-dev\"\n      },\n      \"name\": \"pdb1\",\n      \"namespace\": \"oracle-database-operator-system\"\n    },\n    \"spec\": {\n      \"action\": \"Create\",\n      \"adminName\": {\n        \"secret\": {\n          \"key\": \"sysadmin_user\",\n          \"secretName\": \"pdb1-secret\"\n        }\n      },\n      \"adminPwd\": {\n        \"secret\": {\n          \"key\": \"sysadmin_pwd\",\n          \"secretName\": \"pdb1-secret\"\n        }\n      },\n      \"cdbName\": \"devcdb\",\n      \"cdbResName\": \"cdb-dev\",\n      \"fileNameConversions\": \"NONE\",\n      \"pdbName\": \"pdbdev\",\n      \"tempSize\": \"100M\",\n      \"totalSize\": \"1G\"\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v4\",\n    \"kind\": \"AutonomousContainerDatabase\",\n    \"metadata\": {\n      \"name\": \"autonomouscontainerdatabase-sample\"\n    },\n    \"spec\": {\n      \"autonomousExadataVMClusterOCID\": \"ocid1.autonomousexainfrastructure...\",\n      \"compartmentOCID\": \"ocid1.compartment... OR ocid1.tenancy...\",\n      \"displayName\": \"newACD\",\n      \"ociConfig\": {\n        \"configMapName\": \"oci-cred\",\n        \"secretName\": \"oci-privatekey\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v4\",\n    \"kind\": \"AutonomousDatabase\",\n    \"metadata\": {\n      \"name\": \"autonomousdatabase-sample\"\n    },\n    \"spec\": {\n      \"action\": \"Create\",\n      \"details\": {\n        \"adminPassword\": {\n          \"k8sSecret\": {\n            \"name\": \"admin-password\"\n          }\n        },\n        \"compartmentId\": \"ocid1.compartment... OR ocid1.tenancy...\",\n        \"cpuCoreCount\": 1,\n        \"dataStorageSizeInTBs\": 1,\n        \"dbName\": \"NewADB\",\n        \"displayName\": \"NewADB\"\n      },\n      \"ociConfig\": {\n        \"configMapName\": \"oci-cred\",\n        \"secretName\": \"oci-privatekey\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v4\",\n    \"kind\": \"AutonomousDatabaseBackup\",\n    \"metadata\": {\n      \"name\": \"autonomousdatabasebackup-sample\"\n    },\n    \"spec\": {\n      \"displayName\": \"autonomousdatabasebackup-sample\",\n      \"isLongTermBackup\": true,\n      \"ociConfig\": {\n        \"configMapName\": \"oci-cred\",\n        \"secretName\": \"oci-privatekey\"\n      },\n      \"retentionPeriodInDays\": 90,\n      \"target\": {\n        \"k8sADB\": {\n          \"name\": \"autonomousdatabase-sample\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v4\",\n    \"kind\": \"SingleInstanceDatabase\",\n    \"metadata\": {\n      \"name\": \"sidb-sample\",\n      \"namespace\": \"default\"\n    },\n    \"spec\": {\n      \"adminPassword\": {\n        \"secretName\": \"db-admin-secret\"\n      },\n      \"archiveLog\": true,\n      \"charset\": \"AL32UTF8\",\n      \"edition\": \"enterprise\",\n      \"image\": {\n        \"pullFrom\": \"container-registry.oracle.com/database/enterprise_ru:19\",\n        \"pullSecrets\": \"oracle-container-registry-secret\"\n      },\n      \"pdbName\": \"orclpdb1\",\n      \"persistence\": {\n        \"accessMode\": \"ReadWriteOnce\",\n        \"size\": \"100Gi\",\n        \"storageClass\": \"oci-bv\"\n      },\n      \"replicas\": 1,\n      \"sid\": \"ORCL1\"\n    }\n  },\n  {\n    \"apiVersion\": \"observability.oracle.com/v1alpha1\",\n    \"kind\": \"DatabaseObserver\",\n    \"metadata\": {\n      \"name\": \"obs-sample\"\n    },\n    \"spec\": {\n      \"database\": {\n        \"dbConnectionString\": {\n          \"key\": \"connection\",\n          \"secret\": \"db-secret\"\n        },\n        \"dbPassword\": {\n          \"key\": \"password\",\n          \"secret\": \"db-secret\"\n        },\n        \"dbUser\": {\n          \"key\": \"username\",\n          \"secret\": \"db-secret\"\n        },\n        \"dbWallet\": {\n          \"secret\": \"instance-wallet\"\n        }\n      },\n      \"exporter\": {\n        \"configuration\": {\n          \"configmap\": {\n            \"configmapName\": \"devcm-oradevdb-config\",\n            \"key\": \"config.toml\"\n          }\n        },\n        \"image\": \"container-registry.oracle.com/database/observability-exporter:latest\",\n        \"service\": {\n          \"port\": 9161\n        }\n      },\n      \"ociConfig\": {\n        \"configMapName\": \"oci-cred\",\n        \"secretName\": \"oci-privatekey\"\n      },\n      \"prometheus\": {\n        \"labels\": {\n          \"app\": \"app-sample-label\"\n        },\n        \"port\": \"metrics\"\n      },\n      \"replicas\": 1\n    }\n  }\n]",
        "capabilities": "Seamless Upgrades",
        "categories": "Database",
        "containerImage": "container-registry.oracle.com/database/operator:1.2.0",
        "createdAt": "2025-04-10T20:09:48Z",
        "olm.operatorGroup": "global-operators",
        "olm.operatorNamespace": "operators",
        "operatorframework.io/properties": "{\"properties\":[{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousContainerDatabase\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousContainerDatabase\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabase\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabase\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabaseBackup\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabaseBackup\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabaseRestore\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabaseRestore\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"CDB\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"CDB\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"DataguardBroker\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"DataguardBroker\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"DbcsSystem\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"DbcsSystem\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"LREST\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"LRPDB\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"OracleRestDataService\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"OracleRestDataService\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"OrdsSrvs\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"PDB\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"PDB\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"ShardingDatabase\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"ShardingDatabase\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"SingleInstanceDatabase\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"SingleInstanceDatabase\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"observability.oracle.com\",\"kind\":\"DatabaseObserver\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"observability.oracle.com\",\"kind\":\"DatabaseObserver\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"observability.oracle.com\",\"kind\":\"DatabaseObserver\",\"version\":\"v4\"}},{\"type\":\"olm.package\",\"value\":{\"packageName\":\"oracle-database-operator\",\"version\":\"1.2.0\"}}]}",
        "operators.operatorframework.io/builder": "operator-sdk-v1.39.2",
        "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v4"
      },
      "owned_crds": [
        "autonomouscontainerdatabases.database.oracle.com",
        "autonomouscontainerdatabases.database.oracle.com",
        "autonomousdatabasebackups.database.oracle.com",
        "autonomousdatabasebackups.database.oracle.com",
        "autonomousdatabaserestores.database.oracle.com",
        "autonomousdatabaserestores.database.oracle.com",
        "autonomousdatabases.database.oracle.com",
        "autonomousdatabases.database.oracle.com",
        "cdbs.database.oracle.com",
        "cdbs.database.oracle.com",
        "databaseobservers.observability.oracle.com",
        "databaseobservers.observability.oracle.com",
        "databaseobservers.observability.oracle.com",
        "dataguardbrokers.database.oracle.com",
        "dataguardbrokers.database.oracle.com",
        "dbcssystems.database.oracle.com",
        "dbcssystems.database.oracle.com",
        "lrests.database.oracle.com",
        "lrpdbs.database.oracle.com",
        "oraclerestdataservices.database.oracle.com",
        "oraclerestdataservices.database.oracle.com",
        "ordssrvs.database.oracle.com",
        "pdbs.database.oracle.com",
        "pdbs.database.oracle.com",
        "shardingdatabases.database.oracle.com",
        "shardingdatabases.database.oracle.com",
        "singleinstancedatabases.database.oracle.com",
        "singleinstancedatabases.database.oracle.com"
      ],
      "required_crds": [],
      "permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps"
              ],
              "verbs": [
                "get",
                "list",
                "watch",
                "create",
                "update",
                "patch",
                "delete"
              ]
            },
            {
              "apiGroups": [
                "coordination.k8s.io"
              ],
              "resources": [
                "leases"
              ],
              "verbs": [
                "get",
                "list",
                "watch",
                "create",
                "update",
                "patch",
                "delete"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps/status"
              ],
              "verbs": [
                "get",
                "update",
                "patch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "events"
              ],
              "verbs": [
                "create",
                "patch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps",
                "containers",
                "deployments",
                "events",
                "namespaces",
                "persistentvolumeclaims",
                "pods",
                "pods/exec",
                "pods/log",
                "replicasets",
                "secrets",
                "services"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps/status",
                "daemonsets/status",
                "deployments/status",
                "services/status",
                "statefulsets/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "persistentvolumes"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "secrets/status"
              ],
              "verbs": [
                "get"
              ]
            },
            {
              "apiGroups": [
                "''"
              ],
              "resources": [
                "statefulsets/finalizers"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "apps"
              ],
              "resources": [
                "configmaps"
              ],
              "verbs": [
                "get",
                "list"
              ]
            },
            {
              "apiGroups": [
                "apps"
              ],
              "resources": [
                "daemonsets",
                "deployments",
                "pods",
                "replicasets",
                "services",
                "statefulsets"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "coordination.k8s.io"
              ],
              "resources": [
                "leases"
              ],
              "verbs": [
                "create",
                "get",
                "list",
                "update"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "autonomouscontainerdatabases",
                "autonomousdatabases",
                "cdbs",
                "dataguardbrokers",
                "dbcssystems",
                "events",
                "lrests",
                "lrpdbs",
                "oraclerestdataservices",
                "ordssrvs",
                "pdbs",
                "shardingdatabases",
                "singleinstancedatabases"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "autonomouscontainerdatabases/status",
                "autonomousdatabasebackups/status",
                "autonomousdatabaserestores/status",
                "cdbs/status",
                "dataguardbrokers/status",
                "dbcssystems/status",
                "lrests/status",
                "lrpdbs/status",
                "oraclerestdataservices/status",
                "ordssrvs/status",
                "pdbs/status",
                "shardingdatabases/status",
                "singleinstancedatabases/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "autonomousdatabasebackups",
                "autonomousdatabaserestores"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "autonomousdatabases/status"
              ],
              "verbs": [
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "cdbs/finalizers",
                "dataguardbrokers/finalizers",
                "lrests/finalizers",
                "oraclerestdataservices/finalizers",
                "ordssrvs/finalizers",
                "singleinstancedatabases/finalizers"
              ],
              "verbs": [
                "update"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "dbcssystems/finalizers",
                "lrpdbs/finalizers",
                "pdbs/finalizers",
                "shardingdatabases/finalizers"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "monitoring.coreos.com"
              ],
              "resources": [
                "servicemonitors"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "observability.oracle.com"
              ],
              "resources": [
                "databaseobservers"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "observability.oracle.com"
              ],
              "resources": [
                "databaseobservers/finalizers"
              ],
              "verbs": [
                "update"
              ]
            },
            {
              "apiGroups": [
                "observability.oracle.com"
              ],
              "resources": [
                "databaseobservers/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "storage.k8s.io"
              ],
              "resources": [
                "storageclasses"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            }
          ],
          "serviceAccountName": "default"
        }
      ],
      "cluster_permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                "authentication.k8s.io"
              ],
              "resources": [
                "tokenreviews"
              ],
              "verbs": [
                "create"
              ]
            },
            {
              "apiGroups": [
                "authorization.k8s.io"
              ],
              "resources": [
                "subjectaccessreviews"
              ],
              "verbs": [
                "create"
              ]
            }
          ],
          "serviceAccountName": "default"
        }
      ],
      "replaces": "oracle-database-operator.v1.1.0",
      "skips": [],
      "min_kube_version": ""
    },
    {
      "name": "cloudnative-pg.v1.27.0",
      "namespace": "olm",
      "display_name": "CloudNativePG",
      "version": "1.27.0",
      "phase": "Succeeded",
      "description": "Main features:\n\n- Direct integration with the Kubernetes API server for High Availability,\n  eliminating the need for external tools.\n- Self-healing capabilities, including:\n    - Automated failover by promoting the most aligned replica.\n    - Automatic recreation of failed replicas.\n- Planned switchover of the primary instance by promoting a selected replica.\n- Declarative management of key PostgreSQL configurations, including:\n    - PostgreSQL settings.\n    - Roles, users, and groups.\n    - Databases, extensions, and schemas.\n    - Tablespaces (including temporary tablespaces).\n- Flexible instance definition, supporting any number of instances (minimum 1\n  primary server).\n- Scale-up/down capabilities to dynamically adjust cluster size.\n- Read-Write and Read-Only Services, ensuring applications connect correctly:\n    - *Read-Write Service*: Routes connections to the primary server.\n    - *Read-Only Service*: Distributes connections among replicas for read workloads.\n- Support for quorum-based and priority-based PostgreSQL Synchronous\n  Replication.\n- Replica clusters enabling PostgreSQL distributed topologies across multiple\n  Kubernetes clusters (private, public, hybrid, and multi-cloud).\n- Delayed Replica clusters for point-in-time access to historical data.\n- Persistent volume management, including:\n    - Support for Local Persistent Volumes with PVC templates.\n    - Reuse of Persistent Volumes storage in Pods.\n    - Separate volumes for WAL files and tablespaces.\n- Backup and recovery options, including:\n    - Integration with the [Barman Cloud plugin](https://github.com/cloudnative-pg/plugin-barman-cloud)\n      for continuous online backup via WAL archiving to AWS S3, S3-compatible\n      services, Azure Blob Storage, and Google Cloud Storage, with support for\n      retention policies based on a configurable recovery window.\n    - Backups using volume snapshots (where supported by storage classes).\n    - Full and Point-In-Time recovery from volume snapshots or object stores (via Barman Cloud plugin).\n    - Backup from standby replicas to reduce primary workload impact.\n- Offline and online import of PostgreSQL databases, including major upgrades:\n    - *Offline Import*: Direct restore from existing databases.\n    - *Online Import*: PostgreSQL native logical replication via the `Subscription` resource.\n- Offline In-Place Major Upgrades of PostgreSQL\n- High Availability physical replication slots, including synchronization of\n  user-defined replication slots.\n- Parallel WAL archiving and restore, ensuring high-performance data\n  synchronization in high-write environments.\n- TLS support, including:\n    - Secure connections and client certificate authentication.\n    - Custom TLS certificates (integrated with `cert-manager`).\n- Startup and readiness probes, including replica probes based on desired lag\n  from the primary.\n- Declarative rolling updates for:\n    - PostgreSQL minor versions.\n    - Operator upgrades (in-place or rolling updates).\n- Standard output logging of PostgreSQL error messages in JSON format for\n  easier integration with log aggregation tools.\n- Prometheus-compatible metrics exporter (`metrics` port 9187) for custom\n  monitoring.\n- `cnpg` plugin for `kubectl` to simplify cluster operations.\n- Cluster hibernation for resource efficiency in inactive states.\n- Fencing of PostgreSQL clusters (full cluster or subset) to isolate instances\n  when needed.\n- Connection pooling with PgBouncer for improved database efficiency.\n- OLM (Operator Lifecycle Manager) installation support for streamlined\n  deployments.\n- Multi-arch container images, including Software Bill of Materials (SBOM) and\n  provenance attestations for security compliance.\n",
      "provider": "The CloudNativePG Contributors",
      "install_strategy": "OwnNamespace",
      "creation_timestamp": "2025-09-07T09:12:57Z",
      "labels": {
        "olm.copiedFrom": "operators",
        "olm.managed": "true",
        "operatorframework.io/arch.amd64": "supported"
      },
      "annotations": {
        "alm-examples": "[\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"backup-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      }\n    },\n    \"status\": {\n      \"serverName\": null\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Cluster\",\n    \"metadata\": {\n      \"name\": \"cluster-sample\"\n    },\n    \"spec\": {\n      \"instances\": 3,\n      \"logLevel\": \"info\",\n      \"primaryUpdateStrategy\": \"unsupervised\",\n      \"storage\": {\n        \"size\": \"1Gi\"\n      },\n      \"walStorage\": {\n        \"size\": \"1Gi\"\n      }\n    },\n    \"status\": {\n      \"instances\": 3\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"ClusterImageCatalog\",\n    \"metadata\": {\n      \"name\": \"postgresql\"\n    },\n    \"spec\": {\n      \"images\": [\n        {\n          \"image\": \"ghcr.io/cloudnative-pg/postgresql@sha256:1c97e0d6e94d8b335be7f258eeda2202966df5fde0c934eef4b13c760ec6a891\",\n          \"major\": 15\n        },\n        {\n          \"image\": \"ghcr.io/cloudnative-pg/postgresql@sha256:ee2e3ce7f0ea935c3f4ab245c0b3959c9f1c49816ae02222ceb6bc347f48e43b\",\n          \"major\": 16\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Database\",\n    \"metadata\": {\n      \"name\": \"database-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      },\n      \"name\": \"database-sample\",\n      \"owner\": \"app\"\n    },\n    \"status\": {\n      \"applied\": false\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"ImageCatalog\",\n    \"metadata\": {\n      \"name\": \"postgresql\",\n      \"namespace\": \"default\"\n    },\n    \"spec\": {\n      \"images\": [\n        {\n          \"image\": \"ghcr.io/cloudnative-pg/postgresql@sha256:1c97e0d6e94d8b335be7f258eeda2202966df5fde0c934eef4b13c760ec6a891\",\n          \"major\": 15\n        },\n        {\n          \"image\": \"ghcr.io/cloudnative-pg/postgresql@sha256:ee2e3ce7f0ea935c3f4ab245c0b3959c9f1c49816ae02222ceb6bc347f48e43b\",\n          \"major\": 16\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Pooler\",\n    \"metadata\": {\n      \"name\": \"pooler-sample-rw\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      },\n      \"instances\": 1,\n      \"pgbouncer\": {\n        \"poolMode\": \"session\"\n      },\n      \"type\": \"rw\"\n    },\n    \"status\": {\n      \"instances\": 1\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Publication\",\n    \"metadata\": {\n      \"name\": \"publication-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      },\n      \"dbname\": \"app\",\n      \"name\": \"pub\",\n      \"target\": {\n        \"allTables\": true\n      }\n    },\n    \"status\": {\n      \"applied\": false\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"ScheduledBackup\",\n    \"metadata\": {\n      \"name\": \"scheduledbackup-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      },\n      \"schedule\": \"0 0 0 * * *\"\n    },\n    \"status\": {\n      \"lastCheckTime\": null\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Subscription\",\n    \"metadata\": {\n      \"name\": \"subscription-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample-dest\"\n      },\n      \"dbname\": \"app\",\n      \"externalClusterName\": \"cluster-sample\",\n      \"name\": \"sub\",\n      \"publicationName\": \"pub\"\n    },\n    \"status\": {\n      \"applied\": false\n    }\n  }\n]",
        "capabilities": "Auto Pilot",
        "categories": "Database",
        "certified": "true",
        "containerImage": "ghcr.io/cloudnative-pg/cloudnative-pg@sha256:53995e9d6a7760c77d77e5298f78b49029427494f4dd933d5fa7a74f7af3bb44",
        "createdAt": "2025-08-12T14:08:35Z",
        "description": "CloudNativePG is an open source operator designed to manage highly available PostgreSQL databases with a primary/standby architecture on any supported Kubernetes cluster.",
        "features.operators.openshift.io/disconnected": "true",
        "features.operators.openshift.io/fips-compliant": "false",
        "features.operators.openshift.io/proxy-aware": "false",
        "features.operators.openshift.io/tls-profiles": "false",
        "features.operators.openshift.io/token-auth-aws": "false",
        "features.operators.openshift.io/token-auth-azure": "false",
        "features.operators.openshift.io/token-auth-gcp": "false",
        "olm.operatorGroup": "global-operators",
        "olm.operatorNamespace": "operators",
        "operatorframework.io/properties": "{\"properties\":[{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Backup\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Cluster\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"ClusterImageCatalog\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Database\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"FailoverQuorum\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"ImageCatalog\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Pooler\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Publication\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"ScheduledBackup\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Subscription\",\"version\":\"v1\"}},{\"type\":\"olm.package\",\"value\":{\"packageName\":\"cloudnative-pg\",\"version\":\"1.27.0\"}}]}",
        "operators.operatorframework.io/builder": "operator-sdk-v1.41.1",
        "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v4",
        "repository": "https://github.com/cloudnative-pg/cloudnative-pg",
        "support": "Community"
      },
      "owned_crds": [
        "backups.postgresql.cnpg.io",
        "clusterimagecatalogs.postgresql.cnpg.io",
        "clusters.postgresql.cnpg.io",
        "databases.postgresql.cnpg.io",
        "failoverquorums.postgresql.cnpg.io",
        "imagecatalogs.postgresql.cnpg.io",
        "poolers.postgresql.cnpg.io",
        "publications.postgresql.cnpg.io",
        "scheduledbackups.postgresql.cnpg.io",
        "subscriptions.postgresql.cnpg.io"
      ],
      "required_crds": [],
      "permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps",
                "secrets",
                "services"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps/status",
                "secrets/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "events"
              ],
              "verbs": [
                "create",
                "patch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "nodes"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "persistentvolumeclaims",
                "pods",
                "pods/exec"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "pods/status"
              ],
              "verbs": [
                "get"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "serviceaccounts"
              ],
              "verbs": [
                "create",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "admissionregistration.k8s.io"
              ],
              "resources": [
                "mutatingwebhookconfigurations",
                "validatingwebhookconfigurations"
              ],
              "verbs": [
                "get",
                "patch"
              ]
            },
            {
              "apiGroups": [
                "apps"
              ],
              "resources": [
                "deployments"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "batch"
              ],
              "resources": [
                "jobs"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "coordination.k8s.io"
              ],
              "resources": [
                "leases"
              ],
              "verbs": [
                "create",
                "get",
                "update"
              ]
            },
            {
              "apiGroups": [
                "monitoring.coreos.com"
              ],
              "resources": [
                "podmonitors"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "policy"
              ],
              "resources": [
                "poddisruptionbudgets"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "backups",
                "clusters",
                "databases",
                "poolers",
                "publications",
                "scheduledbackups",
                "subscriptions"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "backups/status",
                "databases/status",
                "publications/status",
                "scheduledbackups/status",
                "subscriptions/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "clusterimagecatalogs",
                "imagecatalogs"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "clusters/finalizers",
                "poolers/finalizers"
              ],
              "verbs": [
                "update"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "clusters/status",
                "failoverquorums/status",
                "poolers/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "failoverquorums"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "rbac.authorization.k8s.io"
              ],
              "resources": [
                "rolebindings",
                "roles"
              ],
              "verbs": [
                "create",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "snapshot.storage.k8s.io"
              ],
              "resources": [
                "volumesnapshots"
              ],
              "verbs": [
                "create",
                "get",
                "list",
                "patch",
                "watch"
              ]
            }
          ],
          "serviceAccountName": "cnpg-manager"
        }
      ],
      "cluster_permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "nodes"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "clusterimagecatalogs"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            }
          ],
          "serviceAccountName": "cnpg-manager"
        }
      ],
      "replaces": "cloudnative-pg.v1.26.1",
      "skips": [],
      "min_kube_version": "1.23.0"
    },
    {
      "name": "mariadb-operator.v25.8.3",
      "namespace": "olm",
      "display_name": "MariaDB Operator",
      "version": "25.8.3",
      "phase": "Succeeded",
      "description": "Install [`mariadb-operator`](https://github.com/mariadb-operator/mariadb-operator) via [OLM](https://olm.operatorframework.io/) using the [helm chart](https://artifacthub.io/packages/helm/mariadb-operator/mariadb-operator).\n\nThis helm operator provides provides a 1:1 mapping between the official helm chart and the [`MariadbOperator`](https://github.com/mariadb-operator/mariadb-operator-helm/blob/main/config/samples/helm_v1alpha1_mariadboperator.yaml) CRD, allowing to install [`mariadb-operator`](https://github.com/mariadb-operator/mariadb-operator) via OLM without having to do any change in the helm chart.\n\nNormally, you would install [`mariadb-operator`](https://github.com/mariadb-operator/mariadb-operator) providing this `values.yaml` to the helm chart:\n```yaml\nimage:\n  repository: ghcr.io/mariadb-operator/mariadb-operator\n  pullPolicy: IfNotPresent\nlogLevel: INFO\nha:\n  enabled: true\nmetrics:\n  enabled: true\n  serviceMonitor:\n    enabled: true\nwebhook:\n  cert:\n    certManager:\n      enabled: true\n```\n\nThis helm chart installation is abstracted in the [`MariadbOperator`](https://github.com/mariadb-operator/mariadb-operator-helm/blob/main/config/samples/helm_v1alpha1_mariadboperator.yaml) CRD, which will be reconciled by the helm operator:\n```yaml\napiVersion: helm.k8s.mariadb.com/v1alpha1\nkind: MariadbOperator\nmetadata:\n  name: mariadb-operator\nspec:\n  image:\n    repository: ghcr.io/mariadb-operator/mariadb-operator\n    pullPolicy: IfNotPresent\n  logLevel: INFO\n  ha:\n    enabled: true\n  metrics:\n    enabled: true\n    serviceMonitor:\n      enabled: true\n  webhook:\n    cert:\n      certManager:\n        enabled: true\n```\n\nOnce you have installed the operator, you will able to install a [`MariaDB`](https://github.com/mariadb-operator/mariadb-operator/blob/main/examples/manifests/mariadb_v1alpha1_mariadb.yaml) instance. Refer to the main [`mariadb-operator`](https://github.com/mariadb-operator/mariadb-operator) documentation for getting started with the rest of CRDs.\n\n## Documentation\n* [mariadb-operator](https://github.com/mariadb-operator/mariadb-operator/blob/main/README.md)\n* [mariadb-operator-helm](https://github.com/mariadb-operator/mariadb-operator-helm/blob/main/README.md)\n\n## Releases\nThis operator is automatically published in the following repositories whenever a new version of the [helm chart](https://artifacthub.io/packages/helm/mariadb-operator/mariadb-operator) is released:\n- [k8s-operatorhub/community-operators](https://github.com/k8s-operatorhub/community-operators)\n- [redhat-openshift-ecosystem/community-operators-prod](https://github.com/redhat-openshift-ecosystem/community-operators-prod)\n\n## Roadmap\nTake a look at our [roadmap](https://github.com/mariadb-operator/mariadb-operator/blob/main/ROADMAP.md) and feel free to open an issue to suggest new features.\n\n## Contributing\nWe welcome and encourage contributions to this project! Please check our [contributing](https://github.com/mariadb-operator/mariadb-operator/blob/main/CONTRIBUTING.md) and [development](https://github.com/mariadb-operator/mariadb-operator/blob/main/docs/DEVELOPMENT.md) guides. PRs welcome!\n\n## Get in touch\nJoin us on Slack: **[MariaDB Community Slack](https://r.mariadb.com/join-community-slack)**.\n",
      "provider": "mariadb-operator",
      "install_strategy": "OwnNamespace",
      "creation_timestamp": "2025-09-07T09:15:59Z",
      "labels": {
        "olm.copiedFrom": "operators",
        "olm.managed": "true"
      },
      "annotations": {
        "alm-examples": "[\n  {\n    \"apiVersion\": \"helm.mariadb.mmontes.io/v1alpha1\",\n    \"kind\": \"MariadbOperator\",\n    \"metadata\": {\n      \"name\": \"mariadb-operator\"\n    },\n    \"spec\": {\n      \"affinity\": {},\n      \"certController\": {\n        \"affinity\": {},\n        \"caValidity\": \"35064h\",\n        \"certValidity\": \"8766h\",\n        \"enabled\": true,\n        \"extrArgs\": [],\n        \"extraVolumeMounts\": [],\n        \"extraVolumes\": [],\n        \"ha\": {\n          \"enabled\": false,\n          \"replicas\": 3\n        },\n        \"image\": {\n          \"pullPolicy\": \"IfNotPresent\",\n          \"repository\": \"ghcr.io/mariadb-operator/mariadb-operator\",\n          \"tag\": \"\"\n        },\n        \"imagePullSecrets\": [],\n        \"lookaheadValidity\": \"2160h\",\n        \"nodeSelector\": {},\n        \"podAnnotations\": {},\n        \"podSecurityContext\": {},\n        \"requeueDuration\": \"5m\",\n        \"resources\": {},\n        \"securityContext\": {},\n        \"serviceAccount\": {\n          \"annotations\": {},\n          \"automount\": true,\n          \"enabled\": true,\n          \"extraLabels\": {},\n          \"name\": \"\"\n        },\n        \"serviceMonitor\": {\n          \"additionalLabels\": {},\n          \"enabled\": true,\n          \"interval\": \"30s\",\n          \"scrapeTimeout\": \"25s\"\n        },\n        \"tolerations\": []\n      },\n      \"clusterName\": \"cluster.local\",\n      \"extrArgs\": [],\n      \"extraVolumeMounts\": [],\n      \"extraVolumes\": [],\n      \"fullnameOverride\": \"\",\n      \"ha\": {\n        \"enabled\": false,\n        \"replicas\": 3\n      },\n      \"image\": {\n        \"pullPolicy\": \"IfNotPresent\",\n        \"repository\": \"ghcr.io/mariadb-operator/mariadb-operator\",\n        \"tag\": \"\"\n      },\n      \"imagePullSecrets\": [],\n      \"logLevel\": \"INFO\",\n      \"metrics\": {\n        \"enabled\": false,\n        \"serviceMonitor\": {\n          \"additionalLabels\": {},\n          \"enabled\": true,\n          \"interval\": \"30s\",\n          \"scrapeTimeout\": \"25s\"\n        }\n      },\n      \"nameOverride\": \"\",\n      \"nodeSelector\": {},\n      \"podAnnotations\": {},\n      \"podSecurityContext\": {},\n      \"rbac\": {\n        \"enabled\": true\n      },\n      \"resources\": {},\n      \"securityContext\": {},\n      \"serviceAccount\": {\n        \"annotations\": {},\n        \"automount\": true,\n        \"enabled\": true,\n        \"extraLabels\": {},\n        \"name\": \"\"\n      },\n      \"tolerations\": [],\n      \"webhook\": {\n        \"affinity\": {},\n        \"annotations\": {},\n        \"cert\": {\n          \"caPath\": \"/tmp/k8s-webhook-server/certificate-authority\",\n          \"certManager\": {\n            \"duration\": \"\",\n            \"enabled\": false,\n            \"issuerRef\": {},\n            \"renewBefore\": \"\"\n          },\n          \"path\": \"/tmp/k8s-webhook-server/serving-certs\",\n          \"secretAnnotations\": {}\n        },\n        \"extrArgs\": [],\n        \"extraVolumeMounts\": [],\n        \"extraVolumes\": [],\n        \"ha\": {\n          \"enabled\": false,\n          \"replicas\": 3\n        },\n        \"hostNetwork\": false,\n        \"image\": {\n          \"pullPolicy\": \"IfNotPresent\",\n          \"repository\": \"ghcr.io/mariadb-operator/mariadb-operator\",\n          \"tag\": \"\"\n        },\n        \"imagePullSecrets\": [],\n        \"nodeSelector\": {},\n        \"podAnnotations\": {},\n        \"podSecurityContext\": {},\n        \"port\": 10250,\n        \"resources\": {},\n        \"securityContext\": {},\n        \"serviceAccount\": {\n          \"annotations\": {},\n          \"automount\": true,\n          \"enabled\": true,\n          \"extraLabels\": {},\n          \"name\": \"\"\n        },\n        \"serviceMonitor\": {\n          \"additionalLabels\": {},\n          \"enabled\": true,\n          \"interval\": \"30s\",\n          \"scrapeTimeout\": \"25s\"\n        },\n        \"tolerations\": []\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"backup\"\n    },\n    \"spec\": {\n      \"args\": [\n        \"--single-transaction\",\n        \"--all-databases\"\n      ],\n      \"logLevel\": \"info\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"maxRetention\": \"720h\",\n      \"resources\": {\n        \"limits\": {\n          \"cpu\": \"300m\",\n          \"memory\": \"512Mi\"\n        },\n        \"requests\": {\n          \"cpu\": \"100m\",\n          \"memory\": \"128Mi\"\n        }\n      },\n      \"schedule\": {\n        \"cron\": \"*/1 * * * *\",\n        \"suspend\": false\n      },\n      \"storage\": {\n        \"s3\": {\n          \"accessKeyIdSecretKeyRef\": {\n            \"key\": \"access-key-id\",\n            \"name\": \"minio\"\n          },\n          \"bucket\": \"backups\",\n          \"endpoint\": \"minio.minio.svc.cluster.local:9000\",\n          \"prefix\": \"mariadb\",\n          \"secretAccessKeySecretKeyRef\": {\n            \"key\": \"secret-access-key\",\n            \"name\": \"minio\"\n          },\n          \"tls\": {\n            \"caSecretKeyRef\": {\n              \"key\": \"ca.crt\",\n              \"name\": \"minio-ca\"\n            },\n            \"enabled\": true\n          }\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Connection\",\n    \"metadata\": {\n      \"name\": \"connection\"\n    },\n    \"spec\": {\n      \"database\": \"mariadb\",\n      \"healthCheck\": {\n        \"interval\": \"10s\",\n        \"retryInterval\": \"3s\"\n      },\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"params\": {\n        \"parseTime\": \"true\"\n      },\n      \"passwordSecretKeyRef\": {\n        \"key\": \"password\",\n        \"name\": \"mariadb\"\n      },\n      \"secretName\": \"connection\",\n      \"secretTemplate\": {\n        \"annotations\": {\n          \"k8s.mariadb.com/connection\": \"sample\"\n        },\n        \"databaseKey\": \"database\",\n        \"hostKey\": \"host\",\n        \"key\": \"dsn\",\n        \"labels\": {\n          \"k8s.mariadb.com/connection\": \"sample\"\n        },\n        \"passwordKey\": \"password\",\n        \"portKey\": \"port\",\n        \"usernameKey\": \"username\"\n      },\n      \"serviceName\": \"mariadb\",\n      \"username\": \"mariadb\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Database\",\n    \"metadata\": {\n      \"name\": \"data-test\"\n    },\n    \"spec\": {\n      \"characterSet\": \"utf8\",\n      \"collate\": \"utf8_general_ci\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"retryInterval\": \"5s\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Grant\",\n    \"metadata\": {\n      \"name\": \"grant\"\n    },\n    \"spec\": {\n      \"database\": \"*\",\n      \"grantOption\": true,\n      \"host\": \"%\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"privileges\": [\n        \"SELECT\",\n        \"INSERT\",\n        \"UPDATE\"\n      ],\n      \"requeueInterval\": \"30s\",\n      \"retryInterval\": \"5s\",\n      \"table\": \"*\",\n      \"username\": \"user\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"MariaDB\",\n    \"metadata\": {\n      \"name\": \"mariadb\"\n    },\n    \"spec\": {\n      \"connection\": {\n        \"secretName\": \"mariadb-conn\",\n        \"secretTemplate\": {\n          \"key\": \"dsn\"\n        }\n      },\n      \"database\": \"mariadb\",\n      \"galera\": {\n        \"enabled\": true\n      },\n      \"metrics\": {\n        \"enabled\": true,\n        \"passwordSecretKeyRef\": {\n          \"generate\": true,\n          \"key\": \"password\",\n          \"name\": \"mariadb-metrics\"\n        }\n      },\n      \"myCnf\": \"[mariadb]\\nbind-address=*\\ndefault_storage_engine=InnoDB\\nbinlog_format=row\\ninnodb_autoinc_lock_mode=2\\ninnodb_buffer_pool_size=1024M\\nmax_allowed_packet=256M\\n\",\n      \"passwordSecretKeyRef\": {\n        \"generate\": true,\n        \"key\": \"password\",\n        \"name\": \"mariadb-password\"\n      },\n      \"primaryConnection\": {\n        \"secretName\": \"mariadb-conn-primary\",\n        \"secretTemplate\": {\n          \"key\": \"dsn\"\n        }\n      },\n      \"primaryService\": {\n        \"type\": \"ClusterIP\"\n      },\n      \"replicas\": 3,\n      \"rootPasswordSecretKeyRef\": {\n        \"generate\": true,\n        \"key\": \"password\",\n        \"name\": \"mariadb-root\"\n      },\n      \"secondaryConnection\": {\n        \"secretName\": \"mariadb-conn-secondary\",\n        \"secretTemplate\": {\n          \"key\": \"dsn\"\n        }\n      },\n      \"secondaryService\": {\n        \"type\": \"ClusterIP\"\n      },\n      \"service\": {\n        \"type\": \"ClusterIP\"\n      },\n      \"storage\": {\n        \"size\": \"1Gi\"\n      },\n      \"updateStrategy\": {\n        \"type\": \"ReplicasFirstPrimaryLast\"\n      },\n      \"username\": \"mariadb\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"MaxScale\",\n    \"metadata\": {\n      \"name\": \"maxscale-galera\"\n    },\n    \"spec\": {\n      \"admin\": {\n        \"guiEnabled\": true,\n        \"port\": 8989\n      },\n      \"auth\": {\n        \"generate\": true\n      },\n      \"config\": {\n        \"sync\": {\n          \"database\": \"mysql\",\n          \"interval\": \"5s\",\n          \"timeout\": \"10s\"\n        }\n      },\n      \"connection\": {\n        \"port\": 3306,\n        \"secretName\": \"mxs-galera-conn\"\n      },\n      \"guiKubernetesService\": {\n        \"metadata\": {\n          \"annotations\": {\n            \"metallb.universe.tf/loadBalancerIPs\": \"172.18.0.231\"\n          }\n        },\n        \"type\": \"LoadBalancer\"\n      },\n      \"kubernetesService\": {\n        \"annotations\": {\n          \"metallb.universe.tf/loadBalancerIPs\": \"172.18.0.224\"\n        },\n        \"type\": \"LoadBalancer\"\n      },\n      \"mariaDbRef\": {\n        \"name\": \"mariadb-galera\"\n      },\n      \"monitor\": {\n        \"cooperativeMonitoring\": \"majority_of_all\",\n        \"interval\": \"2s\",\n        \"params\": {\n          \"available_when_donor\": \"false\",\n          \"disable_master_failback\": \"false\",\n          \"disable_master_role_setting\": \"false\"\n        }\n      },\n      \"replicas\": 3,\n      \"requeueInterval\": \"10s\",\n      \"services\": [\n        {\n          \"listener\": {\n            \"params\": {\n              \"connection_metadata\": \"tx_isolation=auto\"\n            },\n            \"port\": 3306,\n            \"protocol\": \"MariaDBProtocol\"\n          },\n          \"name\": \"rw-router\",\n          \"params\": {\n            \"master_accept_reads\": \"true\",\n            \"max_replication_lag\": \"3s\",\n            \"max_slave_connections\": \"255\",\n            \"transaction_replay\": \"true\",\n            \"transaction_replay_attempts\": \"10\",\n            \"transaction_replay_timeout\": \"5s\"\n          },\n          \"router\": \"readwritesplit\"\n        },\n        {\n          \"listener\": {\n            \"port\": 3307\n          },\n          \"name\": \"rconn-master-router\",\n          \"params\": {\n            \"master_accept_reads\": \"true\",\n            \"max_replication_lag\": \"3s\",\n            \"router_options\": \"master\"\n          },\n          \"router\": \"readconnroute\"\n        },\n        {\n          \"listener\": {\n            \"port\": 3308\n          },\n          \"name\": \"rconn-slave-router\",\n          \"params\": {\n            \"max_replication_lag\": \"3s\",\n            \"router_options\": \"slave\"\n          },\n          \"router\": \"readconnroute\"\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"PhysicalBackup\",\n    \"metadata\": {\n      \"name\": \"physicalbackup\"\n    },\n    \"spec\": {\n      \"compression\": \"bzip2\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"maxRetention\": \"720h\",\n      \"podAffinity\": true,\n      \"resources\": {\n        \"limits\": {\n          \"cpu\": \"300m\",\n          \"memory\": \"512Mi\"\n        },\n        \"requests\": {\n          \"cpu\": \"100m\",\n          \"memory\": \"128Mi\"\n        }\n      },\n      \"schedule\": {\n        \"cron\": \"*/1 * * * *\",\n        \"immediate\": true,\n        \"suspend\": false\n      },\n      \"serviceAccountName\": \"backup\",\n      \"stagingStorage\": {\n        \"persistentVolumeClaim\": {\n          \"accessModes\": [\n            \"ReadWriteOnce\"\n          ],\n          \"resources\": {\n            \"requests\": {\n              \"storage\": \"1Gi\"\n            }\n          }\n        }\n      },\n      \"storage\": {\n        \"s3\": {\n          \"accessKeyIdSecretKeyRef\": {\n            \"key\": \"access-key-id\",\n            \"name\": \"minio\"\n          },\n          \"bucket\": \"physicalbackups\",\n          \"endpoint\": \"minio.minio.svc.cluster.local:9000\",\n          \"prefix\": \"mariadb\",\n          \"region\": \"us-east-1\",\n          \"secretAccessKeySecretKeyRef\": {\n            \"key\": \"secret-access-key\",\n            \"name\": \"minio\"\n          },\n          \"tls\": {\n            \"caSecretKeyRef\": {\n              \"key\": \"ca.crt\",\n              \"name\": \"minio-ca\"\n            },\n            \"enabled\": true\n          }\n        }\n      },\n      \"timeout\": \"1h\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Restore\",\n    \"metadata\": {\n      \"name\": \"restore\"\n    },\n    \"spec\": {\n      \"backupRef\": {\n        \"name\": \"backup\"\n      },\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"resources\": {\n        \"limits\": {\n          \"cpu\": \"300m\",\n          \"memory\": \"512Mi\"\n        },\n        \"requests\": {\n          \"cpu\": \"100m\",\n          \"memory\": \"128Mi\"\n        }\n      },\n      \"targetRecoveryTime\": \"2023-12-19T09:00:00Z\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"SqlJob\",\n    \"metadata\": {\n      \"name\": \"03-stars\"\n    },\n    \"spec\": {\n      \"database\": \"mariadb\",\n      \"dependsOn\": [\n        {\n          \"name\": \"01-users\"\n        },\n        {\n          \"name\": \"02-repos\"\n        }\n      ],\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"passwordSecretKeyRef\": {\n        \"key\": \"password\",\n        \"name\": \"mariadb\"\n      },\n      \"schedule\": {\n        \"cron\": \"*/1 * * * *\",\n        \"suspend\": false\n      },\n      \"sql\": \"CREATE TABLE IF NOT EXISTS stars (\\n  id bigint PRIMARY KEY AUTO_INCREMENT,\\n  user_id bigint NOT NULL,\\n  repo_id bigint NOT NULL,\\n  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,\\n  FOREIGN KEY (repo_id) REFERENCES repos(id) ON DELETE CASCADE,\\n  UNIQUE KEY (user_id, repo_id)\\n);\\nINSERT INTO stars(user_id, repo_id) \\n  VALUES((SELECT id FROM users ORDER BY RAND() LIMIT 1), (SELECT id FROM repos ORDER BY RAND() LIMIT 1))\\n  ON DUPLICATE KEY UPDATE id=id;\\nDELETE FROM stars WHERE id = (SELECT id FROM stars ORDER BY RAND() LIMIT 1);\\nSELECT r.name AS repo, COUNT(*) AS stars\\nFROM stars s\\nJOIN repos r\\nON s.repo_id = r.id\\nGROUP BY r.id\\nORDER BY stars DESC;\",\n      \"username\": \"mariadb\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"User\",\n    \"metadata\": {\n      \"name\": \"user\"\n    },\n    \"spec\": {\n      \"host\": \"%\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"maxUserConnections\": 20,\n      \"passwordSecretKeyRef\": {\n        \"key\": \"password\",\n        \"name\": \"mariadb\"\n      },\n      \"retryInterval\": \"5s\"\n    }\n  }\n]",
        "capabilities": "Deep Insights",
        "categories": "Database",
        "containerImage": "ghcr.io/mariadb-operator/mariadb-operator-helm:25.8.3",
        "createdAt": "2025-08-08T12:14:12Z",
        "description": "Run and operate MariaDB in a cloud native way",
        "features.operators.openshift.io/disconnected": "false",
        "features.operators.openshift.io/fips-compliant": "false",
        "features.operators.openshift.io/proxy-aware": "false",
        "features.operators.openshift.io/tls-profiles": "false",
        "features.operators.openshift.io/token-auth-aws": "false",
        "features.operators.openshift.io/token-auth-azure": "false",
        "features.operators.openshift.io/token-auth-gcp": "false",
        "olm.operatorGroup": "global-operators",
        "olm.operatorNamespace": "operators",
        "operatorframework.io/properties": "{\"properties\":[{\"type\":\"olm.gvk\",\"value\":{\"group\":\"helm.mariadb.mmontes.io\",\"kind\":\"MariadbOperator\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Backup\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Connection\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Database\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Grant\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"MariaDB\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"MaxScale\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"PhysicalBackup\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Restore\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"SqlJob\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"User\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.package\",\"value\":{\"packageName\":\"mariadb-operator\",\"version\":\"25.8.3\"}}]}",
        "operators.operatorframework.io/builder": "operator-sdk-v1.26.0",
        "operators.operatorframework.io/project_layout": "helm.sdk.operatorframework.io/v1",
        "repository": "https://github.com/mariadb-operator/mariadb-operator",
        "support": "mariadb-operator"
      },
      "owned_crds": [
        "backups.k8s.mariadb.com",
        "connections.k8s.mariadb.com",
        "databases.k8s.mariadb.com",
        "grants.k8s.mariadb.com",
        "mariadboperators.helm.mariadb.mmontes.io",
        "mariadbs.k8s.mariadb.com",
        "maxscales.k8s.mariadb.com",
        "physicalbackups.k8s.mariadb.com",
        "restores.k8s.mariadb.com",
        "sqljobs.k8s.mariadb.com",
        "users.k8s.mariadb.com"
      ],
      "required_crds": [],
      "permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps"
              ],
              "verbs": [
                "get",
                "list",
                "watch",
                "create",
                "update",
                "patch",
                "delete"
              ]
            },
            {
              "apiGroups": [
                "coordination.k8s.io"
              ],
              "resources": [
                "leases"
              ],
              "verbs": [
                "get",
                "list",
                "watch",
                "create",
                "update",
                "patch",
                "delete"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "events"
              ],
              "verbs": [
                "create",
                "patch"
              ]
            }
          ],
          "serviceAccountName": "mariadb-operator-helm-controller-manager"
        }
      ],
      "cluster_permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "namespaces"
              ],
              "verbs": [
                "get"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "secrets"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "events"
              ],
              "verbs": [
                "create"
              ]
            },
            {
              "apiGroups": [
                "helm.mariadb.mmontes.io"
              ],
              "resources": [
                "mariadboperators",
                "mariadboperators/status",
                "mariadboperators/finalizers"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "rbac.authorization.k8s.io"
              ],
              "resources": [
                "clusterrolebindings",
                "clusterroles"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "admissionregistration.k8s.io"
              ],
              "resources": [
                "validatingwebhookconfigurations",
                "mutatingwebhookconfigurations"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "rbac.authorization.k8s.io"
              ],
              "resources": [
                "rolebindings",
                "roles"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "apps"
              ],
              "resources": [
                "deployments"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "serviceaccounts",
                "services"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "apiextensions.k8s.io"
              ],
              "resources": [
                "customresourcedefinitions"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "cert-manager.io"
              ],
              "resources": [
                "certificates",
                "issuers"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "monitoring.coreos.com"
              ],
              "resources": [
                "servicemonitors"
              ],
              "verbs": [
                "*"
              ]
            }
          ],
          "serviceAccountName": "mariadb-operator-helm-controller-manager"
        }
      ],
      "replaces": "mariadb-operator.v25.8.2",
      "skips": [],
      "min_kube_version": "1.16.0"
    },
    {
      "name": "oracle-database-operator.v1.2.0",
      "namespace": "olm",
      "display_name": "Oracle Database Operator",
      "version": "1.2.0",
      "phase": "Installing",
      "description": "As part of Oracle's resolution to make Oracle Database Kubernetes native (that is, observable and operable by Kubernetes), Oracle released Oracle Database Operator for Kubernetes (OraOperator or the operator). OraOperator extends the Kubernetes API with custom resources and controllers for automating Oracle Database lifecycle management.\nIn this v1.2.0 production release, OraOperator supports the following database configurations and infrastructure:\n##Supported Database Configurations:\n* Oracle Cloud Infrastructure (OCI) Databases\n  * Oracle Autonomous Database Serverless (ADB-S)\n  * Oracle Autonomous Database on Dedicated on (ADB-D)\n  * Oracle Base Database Cloud Service (Base DB)\n* Containerized Database deployments on Kubernetes\n  * Oracle Kubernetes Engine (OKE) and Oracle Cloud Native Environments (OCNE)\n    * Single Instance databases (SIDB)\n    * Globally Distributed Databases (Shared)\n    * Oracle Data Guard\n    * True Cache (Preview release)\n    * Oracle Database Observability\n* On-Premises Databases\n  * Oracle Multitenant Databases (CDB/PDBs management)\n  * ORDS Services\n\nRefer to full feature list and capabilities: [https://github.com/oracle/oracle-database-operator/blob/main/README.md](https://github.com/oracle/oracle-database-operator/blob/main/README.md)\n",
      "provider": "Oracle",
      "install_strategy": "OwnNamespace",
      "creation_timestamp": "2025-09-07T09:13:38Z",
      "labels": {
        "olm.copiedFrom": "operators",
        "olm.managed": "true"
      },
      "annotations": {
        "alm-examples": "[\n  {\n    \"apiVersion\": \"database.oracle.com/v1alpha1\",\n    \"kind\": \"CDB\",\n    \"metadata\": {\n      \"name\": \"cdb-dev\",\n      \"namespace\": \"oracle-database-operator-system\"\n    },\n    \"spec\": {\n      \"cdbAdminPwd\": {\n        \"secret\": {\n          \"key\": \"cdbadmin_pwd\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"cdbAdminUser\": {\n        \"secret\": {\n          \"key\": \"cdbadmin_user\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"cdbName\": \"devcdb\",\n      \"dbPort\": 1521,\n      \"dbServer\": \"172.17.0.4\",\n      \"ordsImage\": \"\",\n      \"ordsImagePullPolicy\": \"Always\",\n      \"ordsPwd\": {\n        \"secret\": {\n          \"key\": \"ords_pwd\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"replicas\": 1,\n      \"serviceName\": \"devdb.example.com\",\n      \"sysAdminPwd\": {\n        \"secret\": {\n          \"key\": \"sysadmin_pwd\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"webServerPwd\": {\n        \"secret\": {\n          \"key\": \"webserver_pwd\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"webServerUser\": {\n        \"secret\": {\n          \"key\": \"webserver_user\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v1alpha1\",\n    \"kind\": \"DbcsSystem\",\n    \"metadata\": {\n      \"name\": \"dbcssystem-sample\"\n    },\n    \"spec\": {\n      \"foo\": \"bar\"\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v1alpha1\",\n    \"kind\": \"PDB\",\n    \"metadata\": {\n      \"labels\": {\n        \"cdb\": \"cdb-dev\"\n      },\n      \"name\": \"pdb1\",\n      \"namespace\": \"oracle-database-operator-system\"\n    },\n    \"spec\": {\n      \"action\": \"Create\",\n      \"adminName\": {\n        \"secret\": {\n          \"key\": \"sysadmin_user\",\n          \"secretName\": \"pdb1-secret\"\n        }\n      },\n      \"adminPwd\": {\n        \"secret\": {\n          \"key\": \"sysadmin_pwd\",\n          \"secretName\": \"pdb1-secret\"\n        }\n      },\n      \"cdbName\": \"devcdb\",\n      \"cdbResName\": \"cdb-dev\",\n      \"fileNameConversions\": \"NONE\",\n      \"pdbName\": \"pdbdev\",\n      \"tempSize\": \"100M\",\n      \"totalSize\": \"1G\"\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v4\",\n    \"kind\": \"AutonomousContainerDatabase\",\n    \"metadata\": {\n      \"name\": \"autonomouscontainerdatabase-sample\"\n    },\n    \"spec\": {\n      \"autonomousExadataVMClusterOCID\": \"ocid1.autonomousexainfrastructure...\",\n      \"compartmentOCID\": \"ocid1.compartment... OR ocid1.tenancy...\",\n      \"displayName\": \"newACD\",\n      \"ociConfig\": {\n        \"configMapName\": \"oci-cred\",\n        \"secretName\": \"oci-privatekey\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v4\",\n    \"kind\": \"AutonomousDatabase\",\n    \"metadata\": {\n      \"name\": \"autonomousdatabase-sample\"\n    },\n    \"spec\": {\n      \"action\": \"Create\",\n      \"details\": {\n        \"adminPassword\": {\n          \"k8sSecret\": {\n            \"name\": \"admin-password\"\n          }\n        },\n        \"compartmentId\": \"ocid1.compartment... OR ocid1.tenancy...\",\n        \"cpuCoreCount\": 1,\n        \"dataStorageSizeInTBs\": 1,\n        \"dbName\": \"NewADB\",\n        \"displayName\": \"NewADB\"\n      },\n      \"ociConfig\": {\n        \"configMapName\": \"oci-cred\",\n        \"secretName\": \"oci-privatekey\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v4\",\n    \"kind\": \"AutonomousDatabaseBackup\",\n    \"metadata\": {\n      \"name\": \"autonomousdatabasebackup-sample\"\n    },\n    \"spec\": {\n      \"displayName\": \"autonomousdatabasebackup-sample\",\n      \"isLongTermBackup\": true,\n      \"ociConfig\": {\n        \"configMapName\": \"oci-cred\",\n        \"secretName\": \"oci-privatekey\"\n      },\n      \"retentionPeriodInDays\": 90,\n      \"target\": {\n        \"k8sADB\": {\n          \"name\": \"autonomousdatabase-sample\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v4\",\n    \"kind\": \"SingleInstanceDatabase\",\n    \"metadata\": {\n      \"name\": \"sidb-sample\",\n      \"namespace\": \"default\"\n    },\n    \"spec\": {\n      \"adminPassword\": {\n        \"secretName\": \"db-admin-secret\"\n      },\n      \"archiveLog\": true,\n      \"charset\": \"AL32UTF8\",\n      \"edition\": \"enterprise\",\n      \"image\": {\n        \"pullFrom\": \"container-registry.oracle.com/database/enterprise_ru:19\",\n        \"pullSecrets\": \"oracle-container-registry-secret\"\n      },\n      \"pdbName\": \"orclpdb1\",\n      \"persistence\": {\n        \"accessMode\": \"ReadWriteOnce\",\n        \"size\": \"100Gi\",\n        \"storageClass\": \"oci-bv\"\n      },\n      \"replicas\": 1,\n      \"sid\": \"ORCL1\"\n    }\n  },\n  {\n    \"apiVersion\": \"observability.oracle.com/v1alpha1\",\n    \"kind\": \"DatabaseObserver\",\n    \"metadata\": {\n      \"name\": \"obs-sample\"\n    },\n    \"spec\": {\n      \"database\": {\n        \"dbConnectionString\": {\n          \"key\": \"connection\",\n          \"secret\": \"db-secret\"\n        },\n        \"dbPassword\": {\n          \"key\": \"password\",\n          \"secret\": \"db-secret\"\n        },\n        \"dbUser\": {\n          \"key\": \"username\",\n          \"secret\": \"db-secret\"\n        },\n        \"dbWallet\": {\n          \"secret\": \"instance-wallet\"\n        }\n      },\n      \"exporter\": {\n        \"configuration\": {\n          \"configmap\": {\n            \"configmapName\": \"devcm-oradevdb-config\",\n            \"key\": \"config.toml\"\n          }\n        },\n        \"image\": \"container-registry.oracle.com/database/observability-exporter:latest\",\n        \"service\": {\n          \"port\": 9161\n        }\n      },\n      \"ociConfig\": {\n        \"configMapName\": \"oci-cred\",\n        \"secretName\": \"oci-privatekey\"\n      },\n      \"prometheus\": {\n        \"labels\": {\n          \"app\": \"app-sample-label\"\n        },\n        \"port\": \"metrics\"\n      },\n      \"replicas\": 1\n    }\n  }\n]",
        "capabilities": "Seamless Upgrades",
        "categories": "Database",
        "containerImage": "container-registry.oracle.com/database/operator:1.2.0",
        "createdAt": "2025-04-10T20:09:48Z",
        "olm.operatorGroup": "global-operators",
        "olm.operatorNamespace": "operators",
        "operatorframework.io/properties": "{\"properties\":[{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousContainerDatabase\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousContainerDatabase\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabase\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabase\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabaseBackup\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabaseBackup\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabaseRestore\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabaseRestore\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"CDB\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"CDB\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"DataguardBroker\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"DataguardBroker\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"DbcsSystem\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"DbcsSystem\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"LREST\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"LRPDB\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"OracleRestDataService\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"OracleRestDataService\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"OrdsSrvs\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"PDB\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"PDB\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"ShardingDatabase\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"ShardingDatabase\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"SingleInstanceDatabase\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"SingleInstanceDatabase\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"observability.oracle.com\",\"kind\":\"DatabaseObserver\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"observability.oracle.com\",\"kind\":\"DatabaseObserver\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"observability.oracle.com\",\"kind\":\"DatabaseObserver\",\"version\":\"v4\"}},{\"type\":\"olm.package\",\"value\":{\"packageName\":\"oracle-database-operator\",\"version\":\"1.2.0\"}}]}",
        "operators.operatorframework.io/builder": "operator-sdk-v1.39.2",
        "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v4"
      },
      "owned_crds": [
        "autonomouscontainerdatabases.database.oracle.com",
        "autonomouscontainerdatabases.database.oracle.com",
        "autonomousdatabasebackups.database.oracle.com",
        "autonomousdatabasebackups.database.oracle.com",
        "autonomousdatabaserestores.database.oracle.com",
        "autonomousdatabaserestores.database.oracle.com",
        "autonomousdatabases.database.oracle.com",
        "autonomousdatabases.database.oracle.com",
        "cdbs.database.oracle.com",
        "cdbs.database.oracle.com",
        "databaseobservers.observability.oracle.com",
        "databaseobservers.observability.oracle.com",
        "databaseobservers.observability.oracle.com",
        "dataguardbrokers.database.oracle.com",
        "dataguardbrokers.database.oracle.com",
        "dbcssystems.database.oracle.com",
        "dbcssystems.database.oracle.com",
        "lrests.database.oracle.com",
        "lrpdbs.database.oracle.com",
        "oraclerestdataservices.database.oracle.com",
        "oraclerestdataservices.database.oracle.com",
        "ordssrvs.database.oracle.com",
        "pdbs.database.oracle.com",
        "pdbs.database.oracle.com",
        "shardingdatabases.database.oracle.com",
        "shardingdatabases.database.oracle.com",
        "singleinstancedatabases.database.oracle.com",
        "singleinstancedatabases.database.oracle.com"
      ],
      "required_crds": [],
      "permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps"
              ],
              "verbs": [
                "get",
                "list",
                "watch",
                "create",
                "update",
                "patch",
                "delete"
              ]
            },
            {
              "apiGroups": [
                "coordination.k8s.io"
              ],
              "resources": [
                "leases"
              ],
              "verbs": [
                "get",
                "list",
                "watch",
                "create",
                "update",
                "patch",
                "delete"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps/status"
              ],
              "verbs": [
                "get",
                "update",
                "patch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "events"
              ],
              "verbs": [
                "create",
                "patch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps",
                "containers",
                "deployments",
                "events",
                "namespaces",
                "persistentvolumeclaims",
                "pods",
                "pods/exec",
                "pods/log",
                "replicasets",
                "secrets",
                "services"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps/status",
                "daemonsets/status",
                "deployments/status",
                "services/status",
                "statefulsets/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "persistentvolumes"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "secrets/status"
              ],
              "verbs": [
                "get"
              ]
            },
            {
              "apiGroups": [
                "''"
              ],
              "resources": [
                "statefulsets/finalizers"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "apps"
              ],
              "resources": [
                "configmaps"
              ],
              "verbs": [
                "get",
                "list"
              ]
            },
            {
              "apiGroups": [
                "apps"
              ],
              "resources": [
                "daemonsets",
                "deployments",
                "pods",
                "replicasets",
                "services",
                "statefulsets"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "coordination.k8s.io"
              ],
              "resources": [
                "leases"
              ],
              "verbs": [
                "create",
                "get",
                "list",
                "update"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "autonomouscontainerdatabases",
                "autonomousdatabases",
                "cdbs",
                "dataguardbrokers",
                "dbcssystems",
                "events",
                "lrests",
                "lrpdbs",
                "oraclerestdataservices",
                "ordssrvs",
                "pdbs",
                "shardingdatabases",
                "singleinstancedatabases"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "autonomouscontainerdatabases/status",
                "autonomousdatabasebackups/status",
                "autonomousdatabaserestores/status",
                "cdbs/status",
                "dataguardbrokers/status",
                "dbcssystems/status",
                "lrests/status",
                "lrpdbs/status",
                "oraclerestdataservices/status",
                "ordssrvs/status",
                "pdbs/status",
                "shardingdatabases/status",
                "singleinstancedatabases/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "autonomousdatabasebackups",
                "autonomousdatabaserestores"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "autonomousdatabases/status"
              ],
              "verbs": [
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "cdbs/finalizers",
                "dataguardbrokers/finalizers",
                "lrests/finalizers",
                "oraclerestdataservices/finalizers",
                "ordssrvs/finalizers",
                "singleinstancedatabases/finalizers"
              ],
              "verbs": [
                "update"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "dbcssystems/finalizers",
                "lrpdbs/finalizers",
                "pdbs/finalizers",
                "shardingdatabases/finalizers"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "monitoring.coreos.com"
              ],
              "resources": [
                "servicemonitors"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "observability.oracle.com"
              ],
              "resources": [
                "databaseobservers"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "observability.oracle.com"
              ],
              "resources": [
                "databaseobservers/finalizers"
              ],
              "verbs": [
                "update"
              ]
            },
            {
              "apiGroups": [
                "observability.oracle.com"
              ],
              "resources": [
                "databaseobservers/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "storage.k8s.io"
              ],
              "resources": [
                "storageclasses"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            }
          ],
          "serviceAccountName": "default"
        }
      ],
      "cluster_permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                "authentication.k8s.io"
              ],
              "resources": [
                "tokenreviews"
              ],
              "verbs": [
                "create"
              ]
            },
            {
              "apiGroups": [
                "authorization.k8s.io"
              ],
              "resources": [
                "subjectaccessreviews"
              ],
              "verbs": [
                "create"
              ]
            }
          ],
          "serviceAccountName": "default"
        }
      ],
      "replaces": "oracle-database-operator.v1.1.0",
      "skips": [],
      "min_kube_version": ""
    },
    {
      "name": "packageserver",
      "namespace": "olm",
      "display_name": "Package Server",
      "version": "0.28.0",
      "phase": "Succeeded",
      "description": "Represents an Operator package that is available from a given CatalogSource which will resolve to a ClusterServiceVersion.",
      "provider": "Red Hat",
      "install_strategy": "OwnNamespace",
      "creation_timestamp": "2025-09-06T12:35:12Z",
      "labels": {
        "olm.version": "v0.28.0"
      },
      "annotations": {
        "olm.operatorGroup": "olm-operators",
        "olm.operatorNamespace": "olm",
        "olm.targetNamespaces": "olm"
      },
      "owned_crds": [],
      "required_crds": [],
      "permissions": [],
      "cluster_permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                "authorization.k8s.io"
              ],
              "resources": [
                "subjectaccessreviews"
              ],
              "verbs": [
                "create",
                "get"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "operators.coreos.com"
              ],
              "resources": [
                "catalogsources"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "packages.operators.coreos.com"
              ],
              "resources": [
                "packagemanifests"
              ],
              "verbs": [
                "get",
                "list"
              ]
            }
          ],
          "serviceAccountName": "olm-operator-serviceaccount"
        }
      ],
      "replaces": "",
      "skips": [],
      "min_kube_version": "1.11.0"
    },
    {
      "name": "cloudnative-pg.v1.27.0",
      "namespace": "openshift",
      "display_name": "CloudNativePG",
      "version": "1.27.0",
      "phase": "Succeeded",
      "description": "Main features:\n\n- Direct integration with the Kubernetes API server for High Availability,\n  eliminating the need for external tools.\n- Self-healing capabilities, including:\n    - Automated failover by promoting the most aligned replica.\n    - Automatic recreation of failed replicas.\n- Planned switchover of the primary instance by promoting a selected replica.\n- Declarative management of key PostgreSQL configurations, including:\n    - PostgreSQL settings.\n    - Roles, users, and groups.\n    - Databases, extensions, and schemas.\n    - Tablespaces (including temporary tablespaces).\n- Flexible instance definition, supporting any number of instances (minimum 1\n  primary server).\n- Scale-up/down capabilities to dynamically adjust cluster size.\n- Read-Write and Read-Only Services, ensuring applications connect correctly:\n    - *Read-Write Service*: Routes connections to the primary server.\n    - *Read-Only Service*: Distributes connections among replicas for read workloads.\n- Support for quorum-based and priority-based PostgreSQL Synchronous\n  Replication.\n- Replica clusters enabling PostgreSQL distributed topologies across multiple\n  Kubernetes clusters (private, public, hybrid, and multi-cloud).\n- Delayed Replica clusters for point-in-time access to historical data.\n- Persistent volume management, including:\n    - Support for Local Persistent Volumes with PVC templates.\n    - Reuse of Persistent Volumes storage in Pods.\n    - Separate volumes for WAL files and tablespaces.\n- Backup and recovery options, including:\n    - Integration with the [Barman Cloud plugin](https://github.com/cloudnative-pg/plugin-barman-cloud)\n      for continuous online backup via WAL archiving to AWS S3, S3-compatible\n      services, Azure Blob Storage, and Google Cloud Storage, with support for\n      retention policies based on a configurable recovery window.\n    - Backups using volume snapshots (where supported by storage classes).\n    - Full and Point-In-Time recovery from volume snapshots or object stores (via Barman Cloud plugin).\n    - Backup from standby replicas to reduce primary workload impact.\n- Offline and online import of PostgreSQL databases, including major upgrades:\n    - *Offline Import*: Direct restore from existing databases.\n    - *Online Import*: PostgreSQL native logical replication via the `Subscription` resource.\n- Offline In-Place Major Upgrades of PostgreSQL\n- High Availability physical replication slots, including synchronization of\n  user-defined replication slots.\n- Parallel WAL archiving and restore, ensuring high-performance data\n  synchronization in high-write environments.\n- TLS support, including:\n    - Secure connections and client certificate authentication.\n    - Custom TLS certificates (integrated with `cert-manager`).\n- Startup and readiness probes, including replica probes based on desired lag\n  from the primary.\n- Declarative rolling updates for:\n    - PostgreSQL minor versions.\n    - Operator upgrades (in-place or rolling updates).\n- Standard output logging of PostgreSQL error messages in JSON format for\n  easier integration with log aggregation tools.\n- Prometheus-compatible metrics exporter (`metrics` port 9187) for custom\n  monitoring.\n- `cnpg` plugin for `kubectl` to simplify cluster operations.\n- Cluster hibernation for resource efficiency in inactive states.\n- Fencing of PostgreSQL clusters (full cluster or subset) to isolate instances\n  when needed.\n- Connection pooling with PgBouncer for improved database efficiency.\n- OLM (Operator Lifecycle Manager) installation support for streamlined\n  deployments.\n- Multi-arch container images, including Software Bill of Materials (SBOM) and\n  provenance attestations for security compliance.\n",
      "provider": "The CloudNativePG Contributors",
      "install_strategy": "OwnNamespace",
      "creation_timestamp": "2025-09-07T09:12:58Z",
      "labels": {
        "olm.copiedFrom": "operators",
        "olm.managed": "true",
        "operatorframework.io/arch.amd64": "supported"
      },
      "annotations": {
        "alm-examples": "[\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"backup-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      }\n    },\n    \"status\": {\n      \"serverName\": null\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Cluster\",\n    \"metadata\": {\n      \"name\": \"cluster-sample\"\n    },\n    \"spec\": {\n      \"instances\": 3,\n      \"logLevel\": \"info\",\n      \"primaryUpdateStrategy\": \"unsupervised\",\n      \"storage\": {\n        \"size\": \"1Gi\"\n      },\n      \"walStorage\": {\n        \"size\": \"1Gi\"\n      }\n    },\n    \"status\": {\n      \"instances\": 3\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"ClusterImageCatalog\",\n    \"metadata\": {\n      \"name\": \"postgresql\"\n    },\n    \"spec\": {\n      \"images\": [\n        {\n          \"image\": \"ghcr.io/cloudnative-pg/postgresql@sha256:1c97e0d6e94d8b335be7f258eeda2202966df5fde0c934eef4b13c760ec6a891\",\n          \"major\": 15\n        },\n        {\n          \"image\": \"ghcr.io/cloudnative-pg/postgresql@sha256:ee2e3ce7f0ea935c3f4ab245c0b3959c9f1c49816ae02222ceb6bc347f48e43b\",\n          \"major\": 16\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Database\",\n    \"metadata\": {\n      \"name\": \"database-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      },\n      \"name\": \"database-sample\",\n      \"owner\": \"app\"\n    },\n    \"status\": {\n      \"applied\": false\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"ImageCatalog\",\n    \"metadata\": {\n      \"name\": \"postgresql\",\n      \"namespace\": \"default\"\n    },\n    \"spec\": {\n      \"images\": [\n        {\n          \"image\": \"ghcr.io/cloudnative-pg/postgresql@sha256:1c97e0d6e94d8b335be7f258eeda2202966df5fde0c934eef4b13c760ec6a891\",\n          \"major\": 15\n        },\n        {\n          \"image\": \"ghcr.io/cloudnative-pg/postgresql@sha256:ee2e3ce7f0ea935c3f4ab245c0b3959c9f1c49816ae02222ceb6bc347f48e43b\",\n          \"major\": 16\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Pooler\",\n    \"metadata\": {\n      \"name\": \"pooler-sample-rw\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      },\n      \"instances\": 1,\n      \"pgbouncer\": {\n        \"poolMode\": \"session\"\n      },\n      \"type\": \"rw\"\n    },\n    \"status\": {\n      \"instances\": 1\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Publication\",\n    \"metadata\": {\n      \"name\": \"publication-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      },\n      \"dbname\": \"app\",\n      \"name\": \"pub\",\n      \"target\": {\n        \"allTables\": true\n      }\n    },\n    \"status\": {\n      \"applied\": false\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"ScheduledBackup\",\n    \"metadata\": {\n      \"name\": \"scheduledbackup-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      },\n      \"schedule\": \"0 0 0 * * *\"\n    },\n    \"status\": {\n      \"lastCheckTime\": null\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Subscription\",\n    \"metadata\": {\n      \"name\": \"subscription-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample-dest\"\n      },\n      \"dbname\": \"app\",\n      \"externalClusterName\": \"cluster-sample\",\n      \"name\": \"sub\",\n      \"publicationName\": \"pub\"\n    },\n    \"status\": {\n      \"applied\": false\n    }\n  }\n]",
        "capabilities": "Auto Pilot",
        "categories": "Database",
        "certified": "true",
        "containerImage": "ghcr.io/cloudnative-pg/cloudnative-pg@sha256:53995e9d6a7760c77d77e5298f78b49029427494f4dd933d5fa7a74f7af3bb44",
        "createdAt": "2025-08-12T14:08:35Z",
        "description": "CloudNativePG is an open source operator designed to manage highly available PostgreSQL databases with a primary/standby architecture on any supported Kubernetes cluster.",
        "features.operators.openshift.io/disconnected": "true",
        "features.operators.openshift.io/fips-compliant": "false",
        "features.operators.openshift.io/proxy-aware": "false",
        "features.operators.openshift.io/tls-profiles": "false",
        "features.operators.openshift.io/token-auth-aws": "false",
        "features.operators.openshift.io/token-auth-azure": "false",
        "features.operators.openshift.io/token-auth-gcp": "false",
        "olm.operatorGroup": "global-operators",
        "olm.operatorNamespace": "operators",
        "operatorframework.io/properties": "{\"properties\":[{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Backup\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Cluster\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"ClusterImageCatalog\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Database\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"FailoverQuorum\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"ImageCatalog\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Pooler\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Publication\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"ScheduledBackup\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Subscription\",\"version\":\"v1\"}},{\"type\":\"olm.package\",\"value\":{\"packageName\":\"cloudnative-pg\",\"version\":\"1.27.0\"}}]}",
        "operators.operatorframework.io/builder": "operator-sdk-v1.41.1",
        "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v4",
        "repository": "https://github.com/cloudnative-pg/cloudnative-pg",
        "support": "Community"
      },
      "owned_crds": [
        "backups.postgresql.cnpg.io",
        "clusterimagecatalogs.postgresql.cnpg.io",
        "clusters.postgresql.cnpg.io",
        "databases.postgresql.cnpg.io",
        "failoverquorums.postgresql.cnpg.io",
        "imagecatalogs.postgresql.cnpg.io",
        "poolers.postgresql.cnpg.io",
        "publications.postgresql.cnpg.io",
        "scheduledbackups.postgresql.cnpg.io",
        "subscriptions.postgresql.cnpg.io"
      ],
      "required_crds": [],
      "permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps",
                "secrets",
                "services"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps/status",
                "secrets/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "events"
              ],
              "verbs": [
                "create",
                "patch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "nodes"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "persistentvolumeclaims",
                "pods",
                "pods/exec"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "pods/status"
              ],
              "verbs": [
                "get"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "serviceaccounts"
              ],
              "verbs": [
                "create",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "admissionregistration.k8s.io"
              ],
              "resources": [
                "mutatingwebhookconfigurations",
                "validatingwebhookconfigurations"
              ],
              "verbs": [
                "get",
                "patch"
              ]
            },
            {
              "apiGroups": [
                "apps"
              ],
              "resources": [
                "deployments"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "batch"
              ],
              "resources": [
                "jobs"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "coordination.k8s.io"
              ],
              "resources": [
                "leases"
              ],
              "verbs": [
                "create",
                "get",
                "update"
              ]
            },
            {
              "apiGroups": [
                "monitoring.coreos.com"
              ],
              "resources": [
                "podmonitors"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "policy"
              ],
              "resources": [
                "poddisruptionbudgets"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "backups",
                "clusters",
                "databases",
                "poolers",
                "publications",
                "scheduledbackups",
                "subscriptions"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "backups/status",
                "databases/status",
                "publications/status",
                "scheduledbackups/status",
                "subscriptions/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "clusterimagecatalogs",
                "imagecatalogs"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "clusters/finalizers",
                "poolers/finalizers"
              ],
              "verbs": [
                "update"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "clusters/status",
                "failoverquorums/status",
                "poolers/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "failoverquorums"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "rbac.authorization.k8s.io"
              ],
              "resources": [
                "rolebindings",
                "roles"
              ],
              "verbs": [
                "create",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "snapshot.storage.k8s.io"
              ],
              "resources": [
                "volumesnapshots"
              ],
              "verbs": [
                "create",
                "get",
                "list",
                "patch",
                "watch"
              ]
            }
          ],
          "serviceAccountName": "cnpg-manager"
        }
      ],
      "cluster_permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "nodes"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "clusterimagecatalogs"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            }
          ],
          "serviceAccountName": "cnpg-manager"
        }
      ],
      "replaces": "cloudnative-pg.v1.26.1",
      "skips": [],
      "min_kube_version": "1.23.0"
    },
    {
      "name": "mariadb-operator.v25.8.3",
      "namespace": "openshift",
      "display_name": "MariaDB Operator",
      "version": "25.8.3",
      "phase": "Succeeded",
      "description": "Install [`mariadb-operator`](https://github.com/mariadb-operator/mariadb-operator) via [OLM](https://olm.operatorframework.io/) using the [helm chart](https://artifacthub.io/packages/helm/mariadb-operator/mariadb-operator).\n\nThis helm operator provides provides a 1:1 mapping between the official helm chart and the [`MariadbOperator`](https://github.com/mariadb-operator/mariadb-operator-helm/blob/main/config/samples/helm_v1alpha1_mariadboperator.yaml) CRD, allowing to install [`mariadb-operator`](https://github.com/mariadb-operator/mariadb-operator) via OLM without having to do any change in the helm chart.\n\nNormally, you would install [`mariadb-operator`](https://github.com/mariadb-operator/mariadb-operator) providing this `values.yaml` to the helm chart:\n```yaml\nimage:\n  repository: ghcr.io/mariadb-operator/mariadb-operator\n  pullPolicy: IfNotPresent\nlogLevel: INFO\nha:\n  enabled: true\nmetrics:\n  enabled: true\n  serviceMonitor:\n    enabled: true\nwebhook:\n  cert:\n    certManager:\n      enabled: true\n```\n\nThis helm chart installation is abstracted in the [`MariadbOperator`](https://github.com/mariadb-operator/mariadb-operator-helm/blob/main/config/samples/helm_v1alpha1_mariadboperator.yaml) CRD, which will be reconciled by the helm operator:\n```yaml\napiVersion: helm.k8s.mariadb.com/v1alpha1\nkind: MariadbOperator\nmetadata:\n  name: mariadb-operator\nspec:\n  image:\n    repository: ghcr.io/mariadb-operator/mariadb-operator\n    pullPolicy: IfNotPresent\n  logLevel: INFO\n  ha:\n    enabled: true\n  metrics:\n    enabled: true\n    serviceMonitor:\n      enabled: true\n  webhook:\n    cert:\n      certManager:\n        enabled: true\n```\n\nOnce you have installed the operator, you will able to install a [`MariaDB`](https://github.com/mariadb-operator/mariadb-operator/blob/main/examples/manifests/mariadb_v1alpha1_mariadb.yaml) instance. Refer to the main [`mariadb-operator`](https://github.com/mariadb-operator/mariadb-operator) documentation for getting started with the rest of CRDs.\n\n## Documentation\n* [mariadb-operator](https://github.com/mariadb-operator/mariadb-operator/blob/main/README.md)\n* [mariadb-operator-helm](https://github.com/mariadb-operator/mariadb-operator-helm/blob/main/README.md)\n\n## Releases\nThis operator is automatically published in the following repositories whenever a new version of the [helm chart](https://artifacthub.io/packages/helm/mariadb-operator/mariadb-operator) is released:\n- [k8s-operatorhub/community-operators](https://github.com/k8s-operatorhub/community-operators)\n- [redhat-openshift-ecosystem/community-operators-prod](https://github.com/redhat-openshift-ecosystem/community-operators-prod)\n\n## Roadmap\nTake a look at our [roadmap](https://github.com/mariadb-operator/mariadb-operator/blob/main/ROADMAP.md) and feel free to open an issue to suggest new features.\n\n## Contributing\nWe welcome and encourage contributions to this project! Please check our [contributing](https://github.com/mariadb-operator/mariadb-operator/blob/main/CONTRIBUTING.md) and [development](https://github.com/mariadb-operator/mariadb-operator/blob/main/docs/DEVELOPMENT.md) guides. PRs welcome!\n\n## Get in touch\nJoin us on Slack: **[MariaDB Community Slack](https://r.mariadb.com/join-community-slack)**.\n",
      "provider": "mariadb-operator",
      "install_strategy": "OwnNamespace",
      "creation_timestamp": "2025-09-07T09:15:57Z",
      "labels": {
        "olm.copiedFrom": "operators",
        "olm.managed": "true"
      },
      "annotations": {
        "alm-examples": "[\n  {\n    \"apiVersion\": \"helm.mariadb.mmontes.io/v1alpha1\",\n    \"kind\": \"MariadbOperator\",\n    \"metadata\": {\n      \"name\": \"mariadb-operator\"\n    },\n    \"spec\": {\n      \"affinity\": {},\n      \"certController\": {\n        \"affinity\": {},\n        \"caValidity\": \"35064h\",\n        \"certValidity\": \"8766h\",\n        \"enabled\": true,\n        \"extrArgs\": [],\n        \"extraVolumeMounts\": [],\n        \"extraVolumes\": [],\n        \"ha\": {\n          \"enabled\": false,\n          \"replicas\": 3\n        },\n        \"image\": {\n          \"pullPolicy\": \"IfNotPresent\",\n          \"repository\": \"ghcr.io/mariadb-operator/mariadb-operator\",\n          \"tag\": \"\"\n        },\n        \"imagePullSecrets\": [],\n        \"lookaheadValidity\": \"2160h\",\n        \"nodeSelector\": {},\n        \"podAnnotations\": {},\n        \"podSecurityContext\": {},\n        \"requeueDuration\": \"5m\",\n        \"resources\": {},\n        \"securityContext\": {},\n        \"serviceAccount\": {\n          \"annotations\": {},\n          \"automount\": true,\n          \"enabled\": true,\n          \"extraLabels\": {},\n          \"name\": \"\"\n        },\n        \"serviceMonitor\": {\n          \"additionalLabels\": {},\n          \"enabled\": true,\n          \"interval\": \"30s\",\n          \"scrapeTimeout\": \"25s\"\n        },\n        \"tolerations\": []\n      },\n      \"clusterName\": \"cluster.local\",\n      \"extrArgs\": [],\n      \"extraVolumeMounts\": [],\n      \"extraVolumes\": [],\n      \"fullnameOverride\": \"\",\n      \"ha\": {\n        \"enabled\": false,\n        \"replicas\": 3\n      },\n      \"image\": {\n        \"pullPolicy\": \"IfNotPresent\",\n        \"repository\": \"ghcr.io/mariadb-operator/mariadb-operator\",\n        \"tag\": \"\"\n      },\n      \"imagePullSecrets\": [],\n      \"logLevel\": \"INFO\",\n      \"metrics\": {\n        \"enabled\": false,\n        \"serviceMonitor\": {\n          \"additionalLabels\": {},\n          \"enabled\": true,\n          \"interval\": \"30s\",\n          \"scrapeTimeout\": \"25s\"\n        }\n      },\n      \"nameOverride\": \"\",\n      \"nodeSelector\": {},\n      \"podAnnotations\": {},\n      \"podSecurityContext\": {},\n      \"rbac\": {\n        \"enabled\": true\n      },\n      \"resources\": {},\n      \"securityContext\": {},\n      \"serviceAccount\": {\n        \"annotations\": {},\n        \"automount\": true,\n        \"enabled\": true,\n        \"extraLabels\": {},\n        \"name\": \"\"\n      },\n      \"tolerations\": [],\n      \"webhook\": {\n        \"affinity\": {},\n        \"annotations\": {},\n        \"cert\": {\n          \"caPath\": \"/tmp/k8s-webhook-server/certificate-authority\",\n          \"certManager\": {\n            \"duration\": \"\",\n            \"enabled\": false,\n            \"issuerRef\": {},\n            \"renewBefore\": \"\"\n          },\n          \"path\": \"/tmp/k8s-webhook-server/serving-certs\",\n          \"secretAnnotations\": {}\n        },\n        \"extrArgs\": [],\n        \"extraVolumeMounts\": [],\n        \"extraVolumes\": [],\n        \"ha\": {\n          \"enabled\": false,\n          \"replicas\": 3\n        },\n        \"hostNetwork\": false,\n        \"image\": {\n          \"pullPolicy\": \"IfNotPresent\",\n          \"repository\": \"ghcr.io/mariadb-operator/mariadb-operator\",\n          \"tag\": \"\"\n        },\n        \"imagePullSecrets\": [],\n        \"nodeSelector\": {},\n        \"podAnnotations\": {},\n        \"podSecurityContext\": {},\n        \"port\": 10250,\n        \"resources\": {},\n        \"securityContext\": {},\n        \"serviceAccount\": {\n          \"annotations\": {},\n          \"automount\": true,\n          \"enabled\": true,\n          \"extraLabels\": {},\n          \"name\": \"\"\n        },\n        \"serviceMonitor\": {\n          \"additionalLabels\": {},\n          \"enabled\": true,\n          \"interval\": \"30s\",\n          \"scrapeTimeout\": \"25s\"\n        },\n        \"tolerations\": []\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"backup\"\n    },\n    \"spec\": {\n      \"args\": [\n        \"--single-transaction\",\n        \"--all-databases\"\n      ],\n      \"logLevel\": \"info\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"maxRetention\": \"720h\",\n      \"resources\": {\n        \"limits\": {\n          \"cpu\": \"300m\",\n          \"memory\": \"512Mi\"\n        },\n        \"requests\": {\n          \"cpu\": \"100m\",\n          \"memory\": \"128Mi\"\n        }\n      },\n      \"schedule\": {\n        \"cron\": \"*/1 * * * *\",\n        \"suspend\": false\n      },\n      \"storage\": {\n        \"s3\": {\n          \"accessKeyIdSecretKeyRef\": {\n            \"key\": \"access-key-id\",\n            \"name\": \"minio\"\n          },\n          \"bucket\": \"backups\",\n          \"endpoint\": \"minio.minio.svc.cluster.local:9000\",\n          \"prefix\": \"mariadb\",\n          \"secretAccessKeySecretKeyRef\": {\n            \"key\": \"secret-access-key\",\n            \"name\": \"minio\"\n          },\n          \"tls\": {\n            \"caSecretKeyRef\": {\n              \"key\": \"ca.crt\",\n              \"name\": \"minio-ca\"\n            },\n            \"enabled\": true\n          }\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Connection\",\n    \"metadata\": {\n      \"name\": \"connection\"\n    },\n    \"spec\": {\n      \"database\": \"mariadb\",\n      \"healthCheck\": {\n        \"interval\": \"10s\",\n        \"retryInterval\": \"3s\"\n      },\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"params\": {\n        \"parseTime\": \"true\"\n      },\n      \"passwordSecretKeyRef\": {\n        \"key\": \"password\",\n        \"name\": \"mariadb\"\n      },\n      \"secretName\": \"connection\",\n      \"secretTemplate\": {\n        \"annotations\": {\n          \"k8s.mariadb.com/connection\": \"sample\"\n        },\n        \"databaseKey\": \"database\",\n        \"hostKey\": \"host\",\n        \"key\": \"dsn\",\n        \"labels\": {\n          \"k8s.mariadb.com/connection\": \"sample\"\n        },\n        \"passwordKey\": \"password\",\n        \"portKey\": \"port\",\n        \"usernameKey\": \"username\"\n      },\n      \"serviceName\": \"mariadb\",\n      \"username\": \"mariadb\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Database\",\n    \"metadata\": {\n      \"name\": \"data-test\"\n    },\n    \"spec\": {\n      \"characterSet\": \"utf8\",\n      \"collate\": \"utf8_general_ci\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"retryInterval\": \"5s\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Grant\",\n    \"metadata\": {\n      \"name\": \"grant\"\n    },\n    \"spec\": {\n      \"database\": \"*\",\n      \"grantOption\": true,\n      \"host\": \"%\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"privileges\": [\n        \"SELECT\",\n        \"INSERT\",\n        \"UPDATE\"\n      ],\n      \"requeueInterval\": \"30s\",\n      \"retryInterval\": \"5s\",\n      \"table\": \"*\",\n      \"username\": \"user\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"MariaDB\",\n    \"metadata\": {\n      \"name\": \"mariadb\"\n    },\n    \"spec\": {\n      \"connection\": {\n        \"secretName\": \"mariadb-conn\",\n        \"secretTemplate\": {\n          \"key\": \"dsn\"\n        }\n      },\n      \"database\": \"mariadb\",\n      \"galera\": {\n        \"enabled\": true\n      },\n      \"metrics\": {\n        \"enabled\": true,\n        \"passwordSecretKeyRef\": {\n          \"generate\": true,\n          \"key\": \"password\",\n          \"name\": \"mariadb-metrics\"\n        }\n      },\n      \"myCnf\": \"[mariadb]\\nbind-address=*\\ndefault_storage_engine=InnoDB\\nbinlog_format=row\\ninnodb_autoinc_lock_mode=2\\ninnodb_buffer_pool_size=1024M\\nmax_allowed_packet=256M\\n\",\n      \"passwordSecretKeyRef\": {\n        \"generate\": true,\n        \"key\": \"password\",\n        \"name\": \"mariadb-password\"\n      },\n      \"primaryConnection\": {\n        \"secretName\": \"mariadb-conn-primary\",\n        \"secretTemplate\": {\n          \"key\": \"dsn\"\n        }\n      },\n      \"primaryService\": {\n        \"type\": \"ClusterIP\"\n      },\n      \"replicas\": 3,\n      \"rootPasswordSecretKeyRef\": {\n        \"generate\": true,\n        \"key\": \"password\",\n        \"name\": \"mariadb-root\"\n      },\n      \"secondaryConnection\": {\n        \"secretName\": \"mariadb-conn-secondary\",\n        \"secretTemplate\": {\n          \"key\": \"dsn\"\n        }\n      },\n      \"secondaryService\": {\n        \"type\": \"ClusterIP\"\n      },\n      \"service\": {\n        \"type\": \"ClusterIP\"\n      },\n      \"storage\": {\n        \"size\": \"1Gi\"\n      },\n      \"updateStrategy\": {\n        \"type\": \"ReplicasFirstPrimaryLast\"\n      },\n      \"username\": \"mariadb\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"MaxScale\",\n    \"metadata\": {\n      \"name\": \"maxscale-galera\"\n    },\n    \"spec\": {\n      \"admin\": {\n        \"guiEnabled\": true,\n        \"port\": 8989\n      },\n      \"auth\": {\n        \"generate\": true\n      },\n      \"config\": {\n        \"sync\": {\n          \"database\": \"mysql\",\n          \"interval\": \"5s\",\n          \"timeout\": \"10s\"\n        }\n      },\n      \"connection\": {\n        \"port\": 3306,\n        \"secretName\": \"mxs-galera-conn\"\n      },\n      \"guiKubernetesService\": {\n        \"metadata\": {\n          \"annotations\": {\n            \"metallb.universe.tf/loadBalancerIPs\": \"172.18.0.231\"\n          }\n        },\n        \"type\": \"LoadBalancer\"\n      },\n      \"kubernetesService\": {\n        \"annotations\": {\n          \"metallb.universe.tf/loadBalancerIPs\": \"172.18.0.224\"\n        },\n        \"type\": \"LoadBalancer\"\n      },\n      \"mariaDbRef\": {\n        \"name\": \"mariadb-galera\"\n      },\n      \"monitor\": {\n        \"cooperativeMonitoring\": \"majority_of_all\",\n        \"interval\": \"2s\",\n        \"params\": {\n          \"available_when_donor\": \"false\",\n          \"disable_master_failback\": \"false\",\n          \"disable_master_role_setting\": \"false\"\n        }\n      },\n      \"replicas\": 3,\n      \"requeueInterval\": \"10s\",\n      \"services\": [\n        {\n          \"listener\": {\n            \"params\": {\n              \"connection_metadata\": \"tx_isolation=auto\"\n            },\n            \"port\": 3306,\n            \"protocol\": \"MariaDBProtocol\"\n          },\n          \"name\": \"rw-router\",\n          \"params\": {\n            \"master_accept_reads\": \"true\",\n            \"max_replication_lag\": \"3s\",\n            \"max_slave_connections\": \"255\",\n            \"transaction_replay\": \"true\",\n            \"transaction_replay_attempts\": \"10\",\n            \"transaction_replay_timeout\": \"5s\"\n          },\n          \"router\": \"readwritesplit\"\n        },\n        {\n          \"listener\": {\n            \"port\": 3307\n          },\n          \"name\": \"rconn-master-router\",\n          \"params\": {\n            \"master_accept_reads\": \"true\",\n            \"max_replication_lag\": \"3s\",\n            \"router_options\": \"master\"\n          },\n          \"router\": \"readconnroute\"\n        },\n        {\n          \"listener\": {\n            \"port\": 3308\n          },\n          \"name\": \"rconn-slave-router\",\n          \"params\": {\n            \"max_replication_lag\": \"3s\",\n            \"router_options\": \"slave\"\n          },\n          \"router\": \"readconnroute\"\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"PhysicalBackup\",\n    \"metadata\": {\n      \"name\": \"physicalbackup\"\n    },\n    \"spec\": {\n      \"compression\": \"bzip2\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"maxRetention\": \"720h\",\n      \"podAffinity\": true,\n      \"resources\": {\n        \"limits\": {\n          \"cpu\": \"300m\",\n          \"memory\": \"512Mi\"\n        },\n        \"requests\": {\n          \"cpu\": \"100m\",\n          \"memory\": \"128Mi\"\n        }\n      },\n      \"schedule\": {\n        \"cron\": \"*/1 * * * *\",\n        \"immediate\": true,\n        \"suspend\": false\n      },\n      \"serviceAccountName\": \"backup\",\n      \"stagingStorage\": {\n        \"persistentVolumeClaim\": {\n          \"accessModes\": [\n            \"ReadWriteOnce\"\n          ],\n          \"resources\": {\n            \"requests\": {\n              \"storage\": \"1Gi\"\n            }\n          }\n        }\n      },\n      \"storage\": {\n        \"s3\": {\n          \"accessKeyIdSecretKeyRef\": {\n            \"key\": \"access-key-id\",\n            \"name\": \"minio\"\n          },\n          \"bucket\": \"physicalbackups\",\n          \"endpoint\": \"minio.minio.svc.cluster.local:9000\",\n          \"prefix\": \"mariadb\",\n          \"region\": \"us-east-1\",\n          \"secretAccessKeySecretKeyRef\": {\n            \"key\": \"secret-access-key\",\n            \"name\": \"minio\"\n          },\n          \"tls\": {\n            \"caSecretKeyRef\": {\n              \"key\": \"ca.crt\",\n              \"name\": \"minio-ca\"\n            },\n            \"enabled\": true\n          }\n        }\n      },\n      \"timeout\": \"1h\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Restore\",\n    \"metadata\": {\n      \"name\": \"restore\"\n    },\n    \"spec\": {\n      \"backupRef\": {\n        \"name\": \"backup\"\n      },\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"resources\": {\n        \"limits\": {\n          \"cpu\": \"300m\",\n          \"memory\": \"512Mi\"\n        },\n        \"requests\": {\n          \"cpu\": \"100m\",\n          \"memory\": \"128Mi\"\n        }\n      },\n      \"targetRecoveryTime\": \"2023-12-19T09:00:00Z\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"SqlJob\",\n    \"metadata\": {\n      \"name\": \"03-stars\"\n    },\n    \"spec\": {\n      \"database\": \"mariadb\",\n      \"dependsOn\": [\n        {\n          \"name\": \"01-users\"\n        },\n        {\n          \"name\": \"02-repos\"\n        }\n      ],\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"passwordSecretKeyRef\": {\n        \"key\": \"password\",\n        \"name\": \"mariadb\"\n      },\n      \"schedule\": {\n        \"cron\": \"*/1 * * * *\",\n        \"suspend\": false\n      },\n      \"sql\": \"CREATE TABLE IF NOT EXISTS stars (\\n  id bigint PRIMARY KEY AUTO_INCREMENT,\\n  user_id bigint NOT NULL,\\n  repo_id bigint NOT NULL,\\n  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,\\n  FOREIGN KEY (repo_id) REFERENCES repos(id) ON DELETE CASCADE,\\n  UNIQUE KEY (user_id, repo_id)\\n);\\nINSERT INTO stars(user_id, repo_id) \\n  VALUES((SELECT id FROM users ORDER BY RAND() LIMIT 1), (SELECT id FROM repos ORDER BY RAND() LIMIT 1))\\n  ON DUPLICATE KEY UPDATE id=id;\\nDELETE FROM stars WHERE id = (SELECT id FROM stars ORDER BY RAND() LIMIT 1);\\nSELECT r.name AS repo, COUNT(*) AS stars\\nFROM stars s\\nJOIN repos r\\nON s.repo_id = r.id\\nGROUP BY r.id\\nORDER BY stars DESC;\",\n      \"username\": \"mariadb\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"User\",\n    \"metadata\": {\n      \"name\": \"user\"\n    },\n    \"spec\": {\n      \"host\": \"%\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"maxUserConnections\": 20,\n      \"passwordSecretKeyRef\": {\n        \"key\": \"password\",\n        \"name\": \"mariadb\"\n      },\n      \"retryInterval\": \"5s\"\n    }\n  }\n]",
        "capabilities": "Deep Insights",
        "categories": "Database",
        "containerImage": "ghcr.io/mariadb-operator/mariadb-operator-helm:25.8.3",
        "createdAt": "2025-08-08T12:14:12Z",
        "description": "Run and operate MariaDB in a cloud native way",
        "features.operators.openshift.io/disconnected": "false",
        "features.operators.openshift.io/fips-compliant": "false",
        "features.operators.openshift.io/proxy-aware": "false",
        "features.operators.openshift.io/tls-profiles": "false",
        "features.operators.openshift.io/token-auth-aws": "false",
        "features.operators.openshift.io/token-auth-azure": "false",
        "features.operators.openshift.io/token-auth-gcp": "false",
        "olm.operatorGroup": "global-operators",
        "olm.operatorNamespace": "operators",
        "operatorframework.io/properties": "{\"properties\":[{\"type\":\"olm.gvk\",\"value\":{\"group\":\"helm.mariadb.mmontes.io\",\"kind\":\"MariadbOperator\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Backup\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Connection\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Database\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Grant\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"MariaDB\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"MaxScale\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"PhysicalBackup\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Restore\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"SqlJob\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"User\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.package\",\"value\":{\"packageName\":\"mariadb-operator\",\"version\":\"25.8.3\"}}]}",
        "operators.operatorframework.io/builder": "operator-sdk-v1.26.0",
        "operators.operatorframework.io/project_layout": "helm.sdk.operatorframework.io/v1",
        "repository": "https://github.com/mariadb-operator/mariadb-operator",
        "support": "mariadb-operator"
      },
      "owned_crds": [
        "backups.k8s.mariadb.com",
        "connections.k8s.mariadb.com",
        "databases.k8s.mariadb.com",
        "grants.k8s.mariadb.com",
        "mariadboperators.helm.mariadb.mmontes.io",
        "mariadbs.k8s.mariadb.com",
        "maxscales.k8s.mariadb.com",
        "physicalbackups.k8s.mariadb.com",
        "restores.k8s.mariadb.com",
        "sqljobs.k8s.mariadb.com",
        "users.k8s.mariadb.com"
      ],
      "required_crds": [],
      "permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps"
              ],
              "verbs": [
                "get",
                "list",
                "watch",
                "create",
                "update",
                "patch",
                "delete"
              ]
            },
            {
              "apiGroups": [
                "coordination.k8s.io"
              ],
              "resources": [
                "leases"
              ],
              "verbs": [
                "get",
                "list",
                "watch",
                "create",
                "update",
                "patch",
                "delete"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "events"
              ],
              "verbs": [
                "create",
                "patch"
              ]
            }
          ],
          "serviceAccountName": "mariadb-operator-helm-controller-manager"
        }
      ],
      "cluster_permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "namespaces"
              ],
              "verbs": [
                "get"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "secrets"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "events"
              ],
              "verbs": [
                "create"
              ]
            },
            {
              "apiGroups": [
                "helm.mariadb.mmontes.io"
              ],
              "resources": [
                "mariadboperators",
                "mariadboperators/status",
                "mariadboperators/finalizers"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "rbac.authorization.k8s.io"
              ],
              "resources": [
                "clusterrolebindings",
                "clusterroles"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "admissionregistration.k8s.io"
              ],
              "resources": [
                "validatingwebhookconfigurations",
                "mutatingwebhookconfigurations"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "rbac.authorization.k8s.io"
              ],
              "resources": [
                "rolebindings",
                "roles"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "apps"
              ],
              "resources": [
                "deployments"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "serviceaccounts",
                "services"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "apiextensions.k8s.io"
              ],
              "resources": [
                "customresourcedefinitions"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "cert-manager.io"
              ],
              "resources": [
                "certificates",
                "issuers"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "monitoring.coreos.com"
              ],
              "resources": [
                "servicemonitors"
              ],
              "verbs": [
                "*"
              ]
            }
          ],
          "serviceAccountName": "mariadb-operator-helm-controller-manager"
        }
      ],
      "replaces": "mariadb-operator.v25.8.2",
      "skips": [],
      "min_kube_version": "1.16.0"
    },
    {
      "name": "oracle-database-operator.v1.2.0",
      "namespace": "openshift",
      "display_name": "Oracle Database Operator",
      "version": "1.2.0",
      "phase": "Installing",
      "description": "As part of Oracle's resolution to make Oracle Database Kubernetes native (that is, observable and operable by Kubernetes), Oracle released Oracle Database Operator for Kubernetes (OraOperator or the operator). OraOperator extends the Kubernetes API with custom resources and controllers for automating Oracle Database lifecycle management.\nIn this v1.2.0 production release, OraOperator supports the following database configurations and infrastructure:\n##Supported Database Configurations:\n* Oracle Cloud Infrastructure (OCI) Databases\n  * Oracle Autonomous Database Serverless (ADB-S)\n  * Oracle Autonomous Database on Dedicated on (ADB-D)\n  * Oracle Base Database Cloud Service (Base DB)\n* Containerized Database deployments on Kubernetes\n  * Oracle Kubernetes Engine (OKE) and Oracle Cloud Native Environments (OCNE)\n    * Single Instance databases (SIDB)\n    * Globally Distributed Databases (Shared)\n    * Oracle Data Guard\n    * True Cache (Preview release)\n    * Oracle Database Observability\n* On-Premises Databases\n  * Oracle Multitenant Databases (CDB/PDBs management)\n  * ORDS Services\n\nRefer to full feature list and capabilities: [https://github.com/oracle/oracle-database-operator/blob/main/README.md](https://github.com/oracle/oracle-database-operator/blob/main/README.md)\n",
      "provider": "Oracle",
      "install_strategy": "OwnNamespace",
      "creation_timestamp": "2025-09-07T09:13:36Z",
      "labels": {
        "olm.copiedFrom": "operators",
        "olm.managed": "true"
      },
      "annotations": {
        "alm-examples": "[\n  {\n    \"apiVersion\": \"database.oracle.com/v1alpha1\",\n    \"kind\": \"CDB\",\n    \"metadata\": {\n      \"name\": \"cdb-dev\",\n      \"namespace\": \"oracle-database-operator-system\"\n    },\n    \"spec\": {\n      \"cdbAdminPwd\": {\n        \"secret\": {\n          \"key\": \"cdbadmin_pwd\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"cdbAdminUser\": {\n        \"secret\": {\n          \"key\": \"cdbadmin_user\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"cdbName\": \"devcdb\",\n      \"dbPort\": 1521,\n      \"dbServer\": \"172.17.0.4\",\n      \"ordsImage\": \"\",\n      \"ordsImagePullPolicy\": \"Always\",\n      \"ordsPwd\": {\n        \"secret\": {\n          \"key\": \"ords_pwd\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"replicas\": 1,\n      \"serviceName\": \"devdb.example.com\",\n      \"sysAdminPwd\": {\n        \"secret\": {\n          \"key\": \"sysadmin_pwd\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"webServerPwd\": {\n        \"secret\": {\n          \"key\": \"webserver_pwd\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"webServerUser\": {\n        \"secret\": {\n          \"key\": \"webserver_user\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v1alpha1\",\n    \"kind\": \"DbcsSystem\",\n    \"metadata\": {\n      \"name\": \"dbcssystem-sample\"\n    },\n    \"spec\": {\n      \"foo\": \"bar\"\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v1alpha1\",\n    \"kind\": \"PDB\",\n    \"metadata\": {\n      \"labels\": {\n        \"cdb\": \"cdb-dev\"\n      },\n      \"name\": \"pdb1\",\n      \"namespace\": \"oracle-database-operator-system\"\n    },\n    \"spec\": {\n      \"action\": \"Create\",\n      \"adminName\": {\n        \"secret\": {\n          \"key\": \"sysadmin_user\",\n          \"secretName\": \"pdb1-secret\"\n        }\n      },\n      \"adminPwd\": {\n        \"secret\": {\n          \"key\": \"sysadmin_pwd\",\n          \"secretName\": \"pdb1-secret\"\n        }\n      },\n      \"cdbName\": \"devcdb\",\n      \"cdbResName\": \"cdb-dev\",\n      \"fileNameConversions\": \"NONE\",\n      \"pdbName\": \"pdbdev\",\n      \"tempSize\": \"100M\",\n      \"totalSize\": \"1G\"\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v4\",\n    \"kind\": \"AutonomousContainerDatabase\",\n    \"metadata\": {\n      \"name\": \"autonomouscontainerdatabase-sample\"\n    },\n    \"spec\": {\n      \"autonomousExadataVMClusterOCID\": \"ocid1.autonomousexainfrastructure...\",\n      \"compartmentOCID\": \"ocid1.compartment... OR ocid1.tenancy...\",\n      \"displayName\": \"newACD\",\n      \"ociConfig\": {\n        \"configMapName\": \"oci-cred\",\n        \"secretName\": \"oci-privatekey\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v4\",\n    \"kind\": \"AutonomousDatabase\",\n    \"metadata\": {\n      \"name\": \"autonomousdatabase-sample\"\n    },\n    \"spec\": {\n      \"action\": \"Create\",\n      \"details\": {\n        \"adminPassword\": {\n          \"k8sSecret\": {\n            \"name\": \"admin-password\"\n          }\n        },\n        \"compartmentId\": \"ocid1.compartment... OR ocid1.tenancy...\",\n        \"cpuCoreCount\": 1,\n        \"dataStorageSizeInTBs\": 1,\n        \"dbName\": \"NewADB\",\n        \"displayName\": \"NewADB\"\n      },\n      \"ociConfig\": {\n        \"configMapName\": \"oci-cred\",\n        \"secretName\": \"oci-privatekey\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v4\",\n    \"kind\": \"AutonomousDatabaseBackup\",\n    \"metadata\": {\n      \"name\": \"autonomousdatabasebackup-sample\"\n    },\n    \"spec\": {\n      \"displayName\": \"autonomousdatabasebackup-sample\",\n      \"isLongTermBackup\": true,\n      \"ociConfig\": {\n        \"configMapName\": \"oci-cred\",\n        \"secretName\": \"oci-privatekey\"\n      },\n      \"retentionPeriodInDays\": 90,\n      \"target\": {\n        \"k8sADB\": {\n          \"name\": \"autonomousdatabase-sample\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v4\",\n    \"kind\": \"SingleInstanceDatabase\",\n    \"metadata\": {\n      \"name\": \"sidb-sample\",\n      \"namespace\": \"default\"\n    },\n    \"spec\": {\n      \"adminPassword\": {\n        \"secretName\": \"db-admin-secret\"\n      },\n      \"archiveLog\": true,\n      \"charset\": \"AL32UTF8\",\n      \"edition\": \"enterprise\",\n      \"image\": {\n        \"pullFrom\": \"container-registry.oracle.com/database/enterprise_ru:19\",\n        \"pullSecrets\": \"oracle-container-registry-secret\"\n      },\n      \"pdbName\": \"orclpdb1\",\n      \"persistence\": {\n        \"accessMode\": \"ReadWriteOnce\",\n        \"size\": \"100Gi\",\n        \"storageClass\": \"oci-bv\"\n      },\n      \"replicas\": 1,\n      \"sid\": \"ORCL1\"\n    }\n  },\n  {\n    \"apiVersion\": \"observability.oracle.com/v1alpha1\",\n    \"kind\": \"DatabaseObserver\",\n    \"metadata\": {\n      \"name\": \"obs-sample\"\n    },\n    \"spec\": {\n      \"database\": {\n        \"dbConnectionString\": {\n          \"key\": \"connection\",\n          \"secret\": \"db-secret\"\n        },\n        \"dbPassword\": {\n          \"key\": \"password\",\n          \"secret\": \"db-secret\"\n        },\n        \"dbUser\": {\n          \"key\": \"username\",\n          \"secret\": \"db-secret\"\n        },\n        \"dbWallet\": {\n          \"secret\": \"instance-wallet\"\n        }\n      },\n      \"exporter\": {\n        \"configuration\": {\n          \"configmap\": {\n            \"configmapName\": \"devcm-oradevdb-config\",\n            \"key\": \"config.toml\"\n          }\n        },\n        \"image\": \"container-registry.oracle.com/database/observability-exporter:latest\",\n        \"service\": {\n          \"port\": 9161\n        }\n      },\n      \"ociConfig\": {\n        \"configMapName\": \"oci-cred\",\n        \"secretName\": \"oci-privatekey\"\n      },\n      \"prometheus\": {\n        \"labels\": {\n          \"app\": \"app-sample-label\"\n        },\n        \"port\": \"metrics\"\n      },\n      \"replicas\": 1\n    }\n  }\n]",
        "capabilities": "Seamless Upgrades",
        "categories": "Database",
        "containerImage": "container-registry.oracle.com/database/operator:1.2.0",
        "createdAt": "2025-04-10T20:09:48Z",
        "olm.operatorGroup": "global-operators",
        "olm.operatorNamespace": "operators",
        "operatorframework.io/properties": "{\"properties\":[{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousContainerDatabase\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousContainerDatabase\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabase\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabase\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabaseBackup\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabaseBackup\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabaseRestore\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabaseRestore\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"CDB\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"CDB\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"DataguardBroker\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"DataguardBroker\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"DbcsSystem\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"DbcsSystem\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"LREST\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"LRPDB\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"OracleRestDataService\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"OracleRestDataService\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"OrdsSrvs\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"PDB\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"PDB\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"ShardingDatabase\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"ShardingDatabase\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"SingleInstanceDatabase\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"SingleInstanceDatabase\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"observability.oracle.com\",\"kind\":\"DatabaseObserver\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"observability.oracle.com\",\"kind\":\"DatabaseObserver\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"observability.oracle.com\",\"kind\":\"DatabaseObserver\",\"version\":\"v4\"}},{\"type\":\"olm.package\",\"value\":{\"packageName\":\"oracle-database-operator\",\"version\":\"1.2.0\"}}]}",
        "operators.operatorframework.io/builder": "operator-sdk-v1.39.2",
        "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v4"
      },
      "owned_crds": [
        "autonomouscontainerdatabases.database.oracle.com",
        "autonomouscontainerdatabases.database.oracle.com",
        "autonomousdatabasebackups.database.oracle.com",
        "autonomousdatabasebackups.database.oracle.com",
        "autonomousdatabaserestores.database.oracle.com",
        "autonomousdatabaserestores.database.oracle.com",
        "autonomousdatabases.database.oracle.com",
        "autonomousdatabases.database.oracle.com",
        "cdbs.database.oracle.com",
        "cdbs.database.oracle.com",
        "databaseobservers.observability.oracle.com",
        "databaseobservers.observability.oracle.com",
        "databaseobservers.observability.oracle.com",
        "dataguardbrokers.database.oracle.com",
        "dataguardbrokers.database.oracle.com",
        "dbcssystems.database.oracle.com",
        "dbcssystems.database.oracle.com",
        "lrests.database.oracle.com",
        "lrpdbs.database.oracle.com",
        "oraclerestdataservices.database.oracle.com",
        "oraclerestdataservices.database.oracle.com",
        "ordssrvs.database.oracle.com",
        "pdbs.database.oracle.com",
        "pdbs.database.oracle.com",
        "shardingdatabases.database.oracle.com",
        "shardingdatabases.database.oracle.com",
        "singleinstancedatabases.database.oracle.com",
        "singleinstancedatabases.database.oracle.com"
      ],
      "required_crds": [],
      "permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps"
              ],
              "verbs": [
                "get",
                "list",
                "watch",
                "create",
                "update",
                "patch",
                "delete"
              ]
            },
            {
              "apiGroups": [
                "coordination.k8s.io"
              ],
              "resources": [
                "leases"
              ],
              "verbs": [
                "get",
                "list",
                "watch",
                "create",
                "update",
                "patch",
                "delete"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps/status"
              ],
              "verbs": [
                "get",
                "update",
                "patch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "events"
              ],
              "verbs": [
                "create",
                "patch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps",
                "containers",
                "deployments",
                "events",
                "namespaces",
                "persistentvolumeclaims",
                "pods",
                "pods/exec",
                "pods/log",
                "replicasets",
                "secrets",
                "services"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps/status",
                "daemonsets/status",
                "deployments/status",
                "services/status",
                "statefulsets/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "persistentvolumes"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "secrets/status"
              ],
              "verbs": [
                "get"
              ]
            },
            {
              "apiGroups": [
                "''"
              ],
              "resources": [
                "statefulsets/finalizers"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "apps"
              ],
              "resources": [
                "configmaps"
              ],
              "verbs": [
                "get",
                "list"
              ]
            },
            {
              "apiGroups": [
                "apps"
              ],
              "resources": [
                "daemonsets",
                "deployments",
                "pods",
                "replicasets",
                "services",
                "statefulsets"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "coordination.k8s.io"
              ],
              "resources": [
                "leases"
              ],
              "verbs": [
                "create",
                "get",
                "list",
                "update"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "autonomouscontainerdatabases",
                "autonomousdatabases",
                "cdbs",
                "dataguardbrokers",
                "dbcssystems",
                "events",
                "lrests",
                "lrpdbs",
                "oraclerestdataservices",
                "ordssrvs",
                "pdbs",
                "shardingdatabases",
                "singleinstancedatabases"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "autonomouscontainerdatabases/status",
                "autonomousdatabasebackups/status",
                "autonomousdatabaserestores/status",
                "cdbs/status",
                "dataguardbrokers/status",
                "dbcssystems/status",
                "lrests/status",
                "lrpdbs/status",
                "oraclerestdataservices/status",
                "ordssrvs/status",
                "pdbs/status",
                "shardingdatabases/status",
                "singleinstancedatabases/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "autonomousdatabasebackups",
                "autonomousdatabaserestores"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "autonomousdatabases/status"
              ],
              "verbs": [
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "cdbs/finalizers",
                "dataguardbrokers/finalizers",
                "lrests/finalizers",
                "oraclerestdataservices/finalizers",
                "ordssrvs/finalizers",
                "singleinstancedatabases/finalizers"
              ],
              "verbs": [
                "update"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "dbcssystems/finalizers",
                "lrpdbs/finalizers",
                "pdbs/finalizers",
                "shardingdatabases/finalizers"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "monitoring.coreos.com"
              ],
              "resources": [
                "servicemonitors"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "observability.oracle.com"
              ],
              "resources": [
                "databaseobservers"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "observability.oracle.com"
              ],
              "resources": [
                "databaseobservers/finalizers"
              ],
              "verbs": [
                "update"
              ]
            },
            {
              "apiGroups": [
                "observability.oracle.com"
              ],
              "resources": [
                "databaseobservers/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "storage.k8s.io"
              ],
              "resources": [
                "storageclasses"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            }
          ],
          "serviceAccountName": "default"
        }
      ],
      "cluster_permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                "authentication.k8s.io"
              ],
              "resources": [
                "tokenreviews"
              ],
              "verbs": [
                "create"
              ]
            },
            {
              "apiGroups": [
                "authorization.k8s.io"
              ],
              "resources": [
                "subjectaccessreviews"
              ],
              "verbs": [
                "create"
              ]
            }
          ],
          "serviceAccountName": "default"
        }
      ],
      "replaces": "oracle-database-operator.v1.1.0",
      "skips": [],
      "min_kube_version": ""
    },
    {
      "name": "cloudnative-pg.v1.27.0",
      "namespace": "operators",
      "display_name": "CloudNativePG",
      "version": "1.27.0",
      "phase": "Succeeded",
      "description": "Main features:\n\n- Direct integration with the Kubernetes API server for High Availability,\n  eliminating the need for external tools.\n- Self-healing capabilities, including:\n    - Automated failover by promoting the most aligned replica.\n    - Automatic recreation of failed replicas.\n- Planned switchover of the primary instance by promoting a selected replica.\n- Declarative management of key PostgreSQL configurations, including:\n    - PostgreSQL settings.\n    - Roles, users, and groups.\n    - Databases, extensions, and schemas.\n    - Tablespaces (including temporary tablespaces).\n- Flexible instance definition, supporting any number of instances (minimum 1\n  primary server).\n- Scale-up/down capabilities to dynamically adjust cluster size.\n- Read-Write and Read-Only Services, ensuring applications connect correctly:\n    - *Read-Write Service*: Routes connections to the primary server.\n    - *Read-Only Service*: Distributes connections among replicas for read workloads.\n- Support for quorum-based and priority-based PostgreSQL Synchronous\n  Replication.\n- Replica clusters enabling PostgreSQL distributed topologies across multiple\n  Kubernetes clusters (private, public, hybrid, and multi-cloud).\n- Delayed Replica clusters for point-in-time access to historical data.\n- Persistent volume management, including:\n    - Support for Local Persistent Volumes with PVC templates.\n    - Reuse of Persistent Volumes storage in Pods.\n    - Separate volumes for WAL files and tablespaces.\n- Backup and recovery options, including:\n    - Integration with the [Barman Cloud plugin](https://github.com/cloudnative-pg/plugin-barman-cloud)\n      for continuous online backup via WAL archiving to AWS S3, S3-compatible\n      services, Azure Blob Storage, and Google Cloud Storage, with support for\n      retention policies based on a configurable recovery window.\n    - Backups using volume snapshots (where supported by storage classes).\n    - Full and Point-In-Time recovery from volume snapshots or object stores (via Barman Cloud plugin).\n    - Backup from standby replicas to reduce primary workload impact.\n- Offline and online import of PostgreSQL databases, including major upgrades:\n    - *Offline Import*: Direct restore from existing databases.\n    - *Online Import*: PostgreSQL native logical replication via the `Subscription` resource.\n- Offline In-Place Major Upgrades of PostgreSQL\n- High Availability physical replication slots, including synchronization of\n  user-defined replication slots.\n- Parallel WAL archiving and restore, ensuring high-performance data\n  synchronization in high-write environments.\n- TLS support, including:\n    - Secure connections and client certificate authentication.\n    - Custom TLS certificates (integrated with `cert-manager`).\n- Startup and readiness probes, including replica probes based on desired lag\n  from the primary.\n- Declarative rolling updates for:\n    - PostgreSQL minor versions.\n    - Operator upgrades (in-place or rolling updates).\n- Standard output logging of PostgreSQL error messages in JSON format for\n  easier integration with log aggregation tools.\n- Prometheus-compatible metrics exporter (`metrics` port 9187) for custom\n  monitoring.\n- `cnpg` plugin for `kubectl` to simplify cluster operations.\n- Cluster hibernation for resource efficiency in inactive states.\n- Fencing of PostgreSQL clusters (full cluster or subset) to isolate instances\n  when needed.\n- Connection pooling with PgBouncer for improved database efficiency.\n- OLM (Operator Lifecycle Manager) installation support for streamlined\n  deployments.\n- Multi-arch container images, including Software Bill of Materials (SBOM) and\n  provenance attestations for security compliance.\n",
      "provider": "The CloudNativePG Contributors",
      "install_strategy": "OwnNamespace",
      "creation_timestamp": "2025-09-07T09:12:53Z",
      "labels": {
        "olm.managed": "true",
        "operatorframework.io/arch.amd64": "supported",
        "operators.coreos.com/cloudnative-pg.operators": ""
      },
      "annotations": {
        "alm-examples": "[\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"backup-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      }\n    },\n    \"status\": {\n      \"serverName\": null\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Cluster\",\n    \"metadata\": {\n      \"name\": \"cluster-sample\"\n    },\n    \"spec\": {\n      \"instances\": 3,\n      \"logLevel\": \"info\",\n      \"primaryUpdateStrategy\": \"unsupervised\",\n      \"storage\": {\n        \"size\": \"1Gi\"\n      },\n      \"walStorage\": {\n        \"size\": \"1Gi\"\n      }\n    },\n    \"status\": {\n      \"instances\": 3\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"ClusterImageCatalog\",\n    \"metadata\": {\n      \"name\": \"postgresql\"\n    },\n    \"spec\": {\n      \"images\": [\n        {\n          \"image\": \"ghcr.io/cloudnative-pg/postgresql@sha256:1c97e0d6e94d8b335be7f258eeda2202966df5fde0c934eef4b13c760ec6a891\",\n          \"major\": 15\n        },\n        {\n          \"image\": \"ghcr.io/cloudnative-pg/postgresql@sha256:ee2e3ce7f0ea935c3f4ab245c0b3959c9f1c49816ae02222ceb6bc347f48e43b\",\n          \"major\": 16\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Database\",\n    \"metadata\": {\n      \"name\": \"database-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      },\n      \"name\": \"database-sample\",\n      \"owner\": \"app\"\n    },\n    \"status\": {\n      \"applied\": false\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"ImageCatalog\",\n    \"metadata\": {\n      \"name\": \"postgresql\",\n      \"namespace\": \"default\"\n    },\n    \"spec\": {\n      \"images\": [\n        {\n          \"image\": \"ghcr.io/cloudnative-pg/postgresql@sha256:1c97e0d6e94d8b335be7f258eeda2202966df5fde0c934eef4b13c760ec6a891\",\n          \"major\": 15\n        },\n        {\n          \"image\": \"ghcr.io/cloudnative-pg/postgresql@sha256:ee2e3ce7f0ea935c3f4ab245c0b3959c9f1c49816ae02222ceb6bc347f48e43b\",\n          \"major\": 16\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Pooler\",\n    \"metadata\": {\n      \"name\": \"pooler-sample-rw\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      },\n      \"instances\": 1,\n      \"pgbouncer\": {\n        \"poolMode\": \"session\"\n      },\n      \"type\": \"rw\"\n    },\n    \"status\": {\n      \"instances\": 1\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Publication\",\n    \"metadata\": {\n      \"name\": \"publication-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      },\n      \"dbname\": \"app\",\n      \"name\": \"pub\",\n      \"target\": {\n        \"allTables\": true\n      }\n    },\n    \"status\": {\n      \"applied\": false\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"ScheduledBackup\",\n    \"metadata\": {\n      \"name\": \"scheduledbackup-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      },\n      \"schedule\": \"0 0 0 * * *\"\n    },\n    \"status\": {\n      \"lastCheckTime\": null\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Subscription\",\n    \"metadata\": {\n      \"name\": \"subscription-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample-dest\"\n      },\n      \"dbname\": \"app\",\n      \"externalClusterName\": \"cluster-sample\",\n      \"name\": \"sub\",\n      \"publicationName\": \"pub\"\n    },\n    \"status\": {\n      \"applied\": false\n    }\n  }\n]",
        "capabilities": "Auto Pilot",
        "categories": "Database",
        "certified": "true",
        "containerImage": "ghcr.io/cloudnative-pg/cloudnative-pg@sha256:53995e9d6a7760c77d77e5298f78b49029427494f4dd933d5fa7a74f7af3bb44",
        "createdAt": "2025-08-12T14:08:35Z",
        "description": "CloudNativePG is an open source operator designed to manage highly available PostgreSQL databases with a primary/standby architecture on any supported Kubernetes cluster.",
        "features.operators.openshift.io/disconnected": "true",
        "features.operators.openshift.io/fips-compliant": "false",
        "features.operators.openshift.io/proxy-aware": "false",
        "features.operators.openshift.io/tls-profiles": "false",
        "features.operators.openshift.io/token-auth-aws": "false",
        "features.operators.openshift.io/token-auth-azure": "false",
        "features.operators.openshift.io/token-auth-gcp": "false",
        "olm.operatorGroup": "global-operators",
        "olm.operatorNamespace": "operators",
        "olm.targetNamespaces": "",
        "operatorframework.io/properties": "{\"properties\":[{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Backup\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Cluster\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"ClusterImageCatalog\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Database\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"FailoverQuorum\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"ImageCatalog\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Pooler\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Publication\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"ScheduledBackup\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Subscription\",\"version\":\"v1\"}},{\"type\":\"olm.package\",\"value\":{\"packageName\":\"cloudnative-pg\",\"version\":\"1.27.0\"}}]}",
        "operators.operatorframework.io/builder": "operator-sdk-v1.41.1",
        "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v4",
        "repository": "https://github.com/cloudnative-pg/cloudnative-pg",
        "support": "Community"
      },
      "owned_crds": [
        "backups.postgresql.cnpg.io",
        "clusterimagecatalogs.postgresql.cnpg.io",
        "clusters.postgresql.cnpg.io",
        "databases.postgresql.cnpg.io",
        "failoverquorums.postgresql.cnpg.io",
        "imagecatalogs.postgresql.cnpg.io",
        "poolers.postgresql.cnpg.io",
        "publications.postgresql.cnpg.io",
        "scheduledbackups.postgresql.cnpg.io",
        "subscriptions.postgresql.cnpg.io"
      ],
      "required_crds": [],
      "permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps",
                "secrets",
                "services"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps/status",
                "secrets/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "events"
              ],
              "verbs": [
                "create",
                "patch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "nodes"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "persistentvolumeclaims",
                "pods",
                "pods/exec"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "pods/status"
              ],
              "verbs": [
                "get"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "serviceaccounts"
              ],
              "verbs": [
                "create",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "admissionregistration.k8s.io"
              ],
              "resources": [
                "mutatingwebhookconfigurations",
                "validatingwebhookconfigurations"
              ],
              "verbs": [
                "get",
                "patch"
              ]
            },
            {
              "apiGroups": [
                "apps"
              ],
              "resources": [
                "deployments"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "batch"
              ],
              "resources": [
                "jobs"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "coordination.k8s.io"
              ],
              "resources": [
                "leases"
              ],
              "verbs": [
                "create",
                "get",
                "update"
              ]
            },
            {
              "apiGroups": [
                "monitoring.coreos.com"
              ],
              "resources": [
                "podmonitors"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "policy"
              ],
              "resources": [
                "poddisruptionbudgets"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "backups",
                "clusters",
                "databases",
                "poolers",
                "publications",
                "scheduledbackups",
                "subscriptions"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "backups/status",
                "databases/status",
                "publications/status",
                "scheduledbackups/status",
                "subscriptions/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "clusterimagecatalogs",
                "imagecatalogs"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "clusters/finalizers",
                "poolers/finalizers"
              ],
              "verbs": [
                "update"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "clusters/status",
                "failoverquorums/status",
                "poolers/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "failoverquorums"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "rbac.authorization.k8s.io"
              ],
              "resources": [
                "rolebindings",
                "roles"
              ],
              "verbs": [
                "create",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "snapshot.storage.k8s.io"
              ],
              "resources": [
                "volumesnapshots"
              ],
              "verbs": [
                "create",
                "get",
                "list",
                "patch",
                "watch"
              ]
            }
          ],
          "serviceAccountName": "cnpg-manager"
        }
      ],
      "cluster_permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "nodes"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "clusterimagecatalogs"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            }
          ],
          "serviceAccountName": "cnpg-manager"
        }
      ],
      "replaces": "cloudnative-pg.v1.26.1",
      "skips": [],
      "min_kube_version": "1.23.0"
    },
    {
      "name": "mariadb-operator.v25.8.3",
      "namespace": "operators",
      "display_name": "MariaDB Operator",
      "version": "25.8.3",
      "phase": "Succeeded",
      "description": "Install [`mariadb-operator`](https://github.com/mariadb-operator/mariadb-operator) via [OLM](https://olm.operatorframework.io/) using the [helm chart](https://artifacthub.io/packages/helm/mariadb-operator/mariadb-operator).\n\nThis helm operator provides provides a 1:1 mapping between the official helm chart and the [`MariadbOperator`](https://github.com/mariadb-operator/mariadb-operator-helm/blob/main/config/samples/helm_v1alpha1_mariadboperator.yaml) CRD, allowing to install [`mariadb-operator`](https://github.com/mariadb-operator/mariadb-operator) via OLM without having to do any change in the helm chart.\n\nNormally, you would install [`mariadb-operator`](https://github.com/mariadb-operator/mariadb-operator) providing this `values.yaml` to the helm chart:\n```yaml\nimage:\n  repository: ghcr.io/mariadb-operator/mariadb-operator\n  pullPolicy: IfNotPresent\nlogLevel: INFO\nha:\n  enabled: true\nmetrics:\n  enabled: true\n  serviceMonitor:\n    enabled: true\nwebhook:\n  cert:\n    certManager:\n      enabled: true\n```\n\nThis helm chart installation is abstracted in the [`MariadbOperator`](https://github.com/mariadb-operator/mariadb-operator-helm/blob/main/config/samples/helm_v1alpha1_mariadboperator.yaml) CRD, which will be reconciled by the helm operator:\n```yaml\napiVersion: helm.k8s.mariadb.com/v1alpha1\nkind: MariadbOperator\nmetadata:\n  name: mariadb-operator\nspec:\n  image:\n    repository: ghcr.io/mariadb-operator/mariadb-operator\n    pullPolicy: IfNotPresent\n  logLevel: INFO\n  ha:\n    enabled: true\n  metrics:\n    enabled: true\n    serviceMonitor:\n      enabled: true\n  webhook:\n    cert:\n      certManager:\n        enabled: true\n```\n\nOnce you have installed the operator, you will able to install a [`MariaDB`](https://github.com/mariadb-operator/mariadb-operator/blob/main/examples/manifests/mariadb_v1alpha1_mariadb.yaml) instance. Refer to the main [`mariadb-operator`](https://github.com/mariadb-operator/mariadb-operator) documentation for getting started with the rest of CRDs.\n\n## Documentation\n* [mariadb-operator](https://github.com/mariadb-operator/mariadb-operator/blob/main/README.md)\n* [mariadb-operator-helm](https://github.com/mariadb-operator/mariadb-operator-helm/blob/main/README.md)\n\n## Releases\nThis operator is automatically published in the following repositories whenever a new version of the [helm chart](https://artifacthub.io/packages/helm/mariadb-operator/mariadb-operator) is released:\n- [k8s-operatorhub/community-operators](https://github.com/k8s-operatorhub/community-operators)\n- [redhat-openshift-ecosystem/community-operators-prod](https://github.com/redhat-openshift-ecosystem/community-operators-prod)\n\n## Roadmap\nTake a look at our [roadmap](https://github.com/mariadb-operator/mariadb-operator/blob/main/ROADMAP.md) and feel free to open an issue to suggest new features.\n\n## Contributing\nWe welcome and encourage contributions to this project! Please check our [contributing](https://github.com/mariadb-operator/mariadb-operator/blob/main/CONTRIBUTING.md) and [development](https://github.com/mariadb-operator/mariadb-operator/blob/main/docs/DEVELOPMENT.md) guides. PRs welcome!\n\n## Get in touch\nJoin us on Slack: **[MariaDB Community Slack](https://r.mariadb.com/join-community-slack)**.\n",
      "provider": "mariadb-operator",
      "install_strategy": "OwnNamespace",
      "creation_timestamp": "2025-09-07T09:15:51Z",
      "labels": {
        "olm.managed": "true",
        "operators.coreos.com/mariadb-operator.operators": ""
      },
      "annotations": {
        "alm-examples": "[\n  {\n    \"apiVersion\": \"helm.mariadb.mmontes.io/v1alpha1\",\n    \"kind\": \"MariadbOperator\",\n    \"metadata\": {\n      \"name\": \"mariadb-operator\"\n    },\n    \"spec\": {\n      \"affinity\": {},\n      \"certController\": {\n        \"affinity\": {},\n        \"caValidity\": \"35064h\",\n        \"certValidity\": \"8766h\",\n        \"enabled\": true,\n        \"extrArgs\": [],\n        \"extraVolumeMounts\": [],\n        \"extraVolumes\": [],\n        \"ha\": {\n          \"enabled\": false,\n          \"replicas\": 3\n        },\n        \"image\": {\n          \"pullPolicy\": \"IfNotPresent\",\n          \"repository\": \"ghcr.io/mariadb-operator/mariadb-operator\",\n          \"tag\": \"\"\n        },\n        \"imagePullSecrets\": [],\n        \"lookaheadValidity\": \"2160h\",\n        \"nodeSelector\": {},\n        \"podAnnotations\": {},\n        \"podSecurityContext\": {},\n        \"requeueDuration\": \"5m\",\n        \"resources\": {},\n        \"securityContext\": {},\n        \"serviceAccount\": {\n          \"annotations\": {},\n          \"automount\": true,\n          \"enabled\": true,\n          \"extraLabels\": {},\n          \"name\": \"\"\n        },\n        \"serviceMonitor\": {\n          \"additionalLabels\": {},\n          \"enabled\": true,\n          \"interval\": \"30s\",\n          \"scrapeTimeout\": \"25s\"\n        },\n        \"tolerations\": []\n      },\n      \"clusterName\": \"cluster.local\",\n      \"extrArgs\": [],\n      \"extraVolumeMounts\": [],\n      \"extraVolumes\": [],\n      \"fullnameOverride\": \"\",\n      \"ha\": {\n        \"enabled\": false,\n        \"replicas\": 3\n      },\n      \"image\": {\n        \"pullPolicy\": \"IfNotPresent\",\n        \"repository\": \"ghcr.io/mariadb-operator/mariadb-operator\",\n        \"tag\": \"\"\n      },\n      \"imagePullSecrets\": [],\n      \"logLevel\": \"INFO\",\n      \"metrics\": {\n        \"enabled\": false,\n        \"serviceMonitor\": {\n          \"additionalLabels\": {},\n          \"enabled\": true,\n          \"interval\": \"30s\",\n          \"scrapeTimeout\": \"25s\"\n        }\n      },\n      \"nameOverride\": \"\",\n      \"nodeSelector\": {},\n      \"podAnnotations\": {},\n      \"podSecurityContext\": {},\n      \"rbac\": {\n        \"enabled\": true\n      },\n      \"resources\": {},\n      \"securityContext\": {},\n      \"serviceAccount\": {\n        \"annotations\": {},\n        \"automount\": true,\n        \"enabled\": true,\n        \"extraLabels\": {},\n        \"name\": \"\"\n      },\n      \"tolerations\": [],\n      \"webhook\": {\n        \"affinity\": {},\n        \"annotations\": {},\n        \"cert\": {\n          \"caPath\": \"/tmp/k8s-webhook-server/certificate-authority\",\n          \"certManager\": {\n            \"duration\": \"\",\n            \"enabled\": false,\n            \"issuerRef\": {},\n            \"renewBefore\": \"\"\n          },\n          \"path\": \"/tmp/k8s-webhook-server/serving-certs\",\n          \"secretAnnotations\": {}\n        },\n        \"extrArgs\": [],\n        \"extraVolumeMounts\": [],\n        \"extraVolumes\": [],\n        \"ha\": {\n          \"enabled\": false,\n          \"replicas\": 3\n        },\n        \"hostNetwork\": false,\n        \"image\": {\n          \"pullPolicy\": \"IfNotPresent\",\n          \"repository\": \"ghcr.io/mariadb-operator/mariadb-operator\",\n          \"tag\": \"\"\n        },\n        \"imagePullSecrets\": [],\n        \"nodeSelector\": {},\n        \"podAnnotations\": {},\n        \"podSecurityContext\": {},\n        \"port\": 10250,\n        \"resources\": {},\n        \"securityContext\": {},\n        \"serviceAccount\": {\n          \"annotations\": {},\n          \"automount\": true,\n          \"enabled\": true,\n          \"extraLabels\": {},\n          \"name\": \"\"\n        },\n        \"serviceMonitor\": {\n          \"additionalLabels\": {},\n          \"enabled\": true,\n          \"interval\": \"30s\",\n          \"scrapeTimeout\": \"25s\"\n        },\n        \"tolerations\": []\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"backup\"\n    },\n    \"spec\": {\n      \"args\": [\n        \"--single-transaction\",\n        \"--all-databases\"\n      ],\n      \"logLevel\": \"info\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"maxRetention\": \"720h\",\n      \"resources\": {\n        \"limits\": {\n          \"cpu\": \"300m\",\n          \"memory\": \"512Mi\"\n        },\n        \"requests\": {\n          \"cpu\": \"100m\",\n          \"memory\": \"128Mi\"\n        }\n      },\n      \"schedule\": {\n        \"cron\": \"*/1 * * * *\",\n        \"suspend\": false\n      },\n      \"storage\": {\n        \"s3\": {\n          \"accessKeyIdSecretKeyRef\": {\n            \"key\": \"access-key-id\",\n            \"name\": \"minio\"\n          },\n          \"bucket\": \"backups\",\n          \"endpoint\": \"minio.minio.svc.cluster.local:9000\",\n          \"prefix\": \"mariadb\",\n          \"secretAccessKeySecretKeyRef\": {\n            \"key\": \"secret-access-key\",\n            \"name\": \"minio\"\n          },\n          \"tls\": {\n            \"caSecretKeyRef\": {\n              \"key\": \"ca.crt\",\n              \"name\": \"minio-ca\"\n            },\n            \"enabled\": true\n          }\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Connection\",\n    \"metadata\": {\n      \"name\": \"connection\"\n    },\n    \"spec\": {\n      \"database\": \"mariadb\",\n      \"healthCheck\": {\n        \"interval\": \"10s\",\n        \"retryInterval\": \"3s\"\n      },\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"params\": {\n        \"parseTime\": \"true\"\n      },\n      \"passwordSecretKeyRef\": {\n        \"key\": \"password\",\n        \"name\": \"mariadb\"\n      },\n      \"secretName\": \"connection\",\n      \"secretTemplate\": {\n        \"annotations\": {\n          \"k8s.mariadb.com/connection\": \"sample\"\n        },\n        \"databaseKey\": \"database\",\n        \"hostKey\": \"host\",\n        \"key\": \"dsn\",\n        \"labels\": {\n          \"k8s.mariadb.com/connection\": \"sample\"\n        },\n        \"passwordKey\": \"password\",\n        \"portKey\": \"port\",\n        \"usernameKey\": \"username\"\n      },\n      \"serviceName\": \"mariadb\",\n      \"username\": \"mariadb\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Database\",\n    \"metadata\": {\n      \"name\": \"data-test\"\n    },\n    \"spec\": {\n      \"characterSet\": \"utf8\",\n      \"collate\": \"utf8_general_ci\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"retryInterval\": \"5s\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Grant\",\n    \"metadata\": {\n      \"name\": \"grant\"\n    },\n    \"spec\": {\n      \"database\": \"*\",\n      \"grantOption\": true,\n      \"host\": \"%\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"privileges\": [\n        \"SELECT\",\n        \"INSERT\",\n        \"UPDATE\"\n      ],\n      \"requeueInterval\": \"30s\",\n      \"retryInterval\": \"5s\",\n      \"table\": \"*\",\n      \"username\": \"user\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"MariaDB\",\n    \"metadata\": {\n      \"name\": \"mariadb\"\n    },\n    \"spec\": {\n      \"connection\": {\n        \"secretName\": \"mariadb-conn\",\n        \"secretTemplate\": {\n          \"key\": \"dsn\"\n        }\n      },\n      \"database\": \"mariadb\",\n      \"galera\": {\n        \"enabled\": true\n      },\n      \"metrics\": {\n        \"enabled\": true,\n        \"passwordSecretKeyRef\": {\n          \"generate\": true,\n          \"key\": \"password\",\n          \"name\": \"mariadb-metrics\"\n        }\n      },\n      \"myCnf\": \"[mariadb]\\nbind-address=*\\ndefault_storage_engine=InnoDB\\nbinlog_format=row\\ninnodb_autoinc_lock_mode=2\\ninnodb_buffer_pool_size=1024M\\nmax_allowed_packet=256M\\n\",\n      \"passwordSecretKeyRef\": {\n        \"generate\": true,\n        \"key\": \"password\",\n        \"name\": \"mariadb-password\"\n      },\n      \"primaryConnection\": {\n        \"secretName\": \"mariadb-conn-primary\",\n        \"secretTemplate\": {\n          \"key\": \"dsn\"\n        }\n      },\n      \"primaryService\": {\n        \"type\": \"ClusterIP\"\n      },\n      \"replicas\": 3,\n      \"rootPasswordSecretKeyRef\": {\n        \"generate\": true,\n        \"key\": \"password\",\n        \"name\": \"mariadb-root\"\n      },\n      \"secondaryConnection\": {\n        \"secretName\": \"mariadb-conn-secondary\",\n        \"secretTemplate\": {\n          \"key\": \"dsn\"\n        }\n      },\n      \"secondaryService\": {\n        \"type\": \"ClusterIP\"\n      },\n      \"service\": {\n        \"type\": \"ClusterIP\"\n      },\n      \"storage\": {\n        \"size\": \"1Gi\"\n      },\n      \"updateStrategy\": {\n        \"type\": \"ReplicasFirstPrimaryLast\"\n      },\n      \"username\": \"mariadb\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"MaxScale\",\n    \"metadata\": {\n      \"name\": \"maxscale-galera\"\n    },\n    \"spec\": {\n      \"admin\": {\n        \"guiEnabled\": true,\n        \"port\": 8989\n      },\n      \"auth\": {\n        \"generate\": true\n      },\n      \"config\": {\n        \"sync\": {\n          \"database\": \"mysql\",\n          \"interval\": \"5s\",\n          \"timeout\": \"10s\"\n        }\n      },\n      \"connection\": {\n        \"port\": 3306,\n        \"secretName\": \"mxs-galera-conn\"\n      },\n      \"guiKubernetesService\": {\n        \"metadata\": {\n          \"annotations\": {\n            \"metallb.universe.tf/loadBalancerIPs\": \"172.18.0.231\"\n          }\n        },\n        \"type\": \"LoadBalancer\"\n      },\n      \"kubernetesService\": {\n        \"annotations\": {\n          \"metallb.universe.tf/loadBalancerIPs\": \"172.18.0.224\"\n        },\n        \"type\": \"LoadBalancer\"\n      },\n      \"mariaDbRef\": {\n        \"name\": \"mariadb-galera\"\n      },\n      \"monitor\": {\n        \"cooperativeMonitoring\": \"majority_of_all\",\n        \"interval\": \"2s\",\n        \"params\": {\n          \"available_when_donor\": \"false\",\n          \"disable_master_failback\": \"false\",\n          \"disable_master_role_setting\": \"false\"\n        }\n      },\n      \"replicas\": 3,\n      \"requeueInterval\": \"10s\",\n      \"services\": [\n        {\n          \"listener\": {\n            \"params\": {\n              \"connection_metadata\": \"tx_isolation=auto\"\n            },\n            \"port\": 3306,\n            \"protocol\": \"MariaDBProtocol\"\n          },\n          \"name\": \"rw-router\",\n          \"params\": {\n            \"master_accept_reads\": \"true\",\n            \"max_replication_lag\": \"3s\",\n            \"max_slave_connections\": \"255\",\n            \"transaction_replay\": \"true\",\n            \"transaction_replay_attempts\": \"10\",\n            \"transaction_replay_timeout\": \"5s\"\n          },\n          \"router\": \"readwritesplit\"\n        },\n        {\n          \"listener\": {\n            \"port\": 3307\n          },\n          \"name\": \"rconn-master-router\",\n          \"params\": {\n            \"master_accept_reads\": \"true\",\n            \"max_replication_lag\": \"3s\",\n            \"router_options\": \"master\"\n          },\n          \"router\": \"readconnroute\"\n        },\n        {\n          \"listener\": {\n            \"port\": 3308\n          },\n          \"name\": \"rconn-slave-router\",\n          \"params\": {\n            \"max_replication_lag\": \"3s\",\n            \"router_options\": \"slave\"\n          },\n          \"router\": \"readconnroute\"\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"PhysicalBackup\",\n    \"metadata\": {\n      \"name\": \"physicalbackup\"\n    },\n    \"spec\": {\n      \"compression\": \"bzip2\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"maxRetention\": \"720h\",\n      \"podAffinity\": true,\n      \"resources\": {\n        \"limits\": {\n          \"cpu\": \"300m\",\n          \"memory\": \"512Mi\"\n        },\n        \"requests\": {\n          \"cpu\": \"100m\",\n          \"memory\": \"128Mi\"\n        }\n      },\n      \"schedule\": {\n        \"cron\": \"*/1 * * * *\",\n        \"immediate\": true,\n        \"suspend\": false\n      },\n      \"serviceAccountName\": \"backup\",\n      \"stagingStorage\": {\n        \"persistentVolumeClaim\": {\n          \"accessModes\": [\n            \"ReadWriteOnce\"\n          ],\n          \"resources\": {\n            \"requests\": {\n              \"storage\": \"1Gi\"\n            }\n          }\n        }\n      },\n      \"storage\": {\n        \"s3\": {\n          \"accessKeyIdSecretKeyRef\": {\n            \"key\": \"access-key-id\",\n            \"name\": \"minio\"\n          },\n          \"bucket\": \"physicalbackups\",\n          \"endpoint\": \"minio.minio.svc.cluster.local:9000\",\n          \"prefix\": \"mariadb\",\n          \"region\": \"us-east-1\",\n          \"secretAccessKeySecretKeyRef\": {\n            \"key\": \"secret-access-key\",\n            \"name\": \"minio\"\n          },\n          \"tls\": {\n            \"caSecretKeyRef\": {\n              \"key\": \"ca.crt\",\n              \"name\": \"minio-ca\"\n            },\n            \"enabled\": true\n          }\n        }\n      },\n      \"timeout\": \"1h\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Restore\",\n    \"metadata\": {\n      \"name\": \"restore\"\n    },\n    \"spec\": {\n      \"backupRef\": {\n        \"name\": \"backup\"\n      },\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"resources\": {\n        \"limits\": {\n          \"cpu\": \"300m\",\n          \"memory\": \"512Mi\"\n        },\n        \"requests\": {\n          \"cpu\": \"100m\",\n          \"memory\": \"128Mi\"\n        }\n      },\n      \"targetRecoveryTime\": \"2023-12-19T09:00:00Z\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"SqlJob\",\n    \"metadata\": {\n      \"name\": \"03-stars\"\n    },\n    \"spec\": {\n      \"database\": \"mariadb\",\n      \"dependsOn\": [\n        {\n          \"name\": \"01-users\"\n        },\n        {\n          \"name\": \"02-repos\"\n        }\n      ],\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"passwordSecretKeyRef\": {\n        \"key\": \"password\",\n        \"name\": \"mariadb\"\n      },\n      \"schedule\": {\n        \"cron\": \"*/1 * * * *\",\n        \"suspend\": false\n      },\n      \"sql\": \"CREATE TABLE IF NOT EXISTS stars (\\n  id bigint PRIMARY KEY AUTO_INCREMENT,\\n  user_id bigint NOT NULL,\\n  repo_id bigint NOT NULL,\\n  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,\\n  FOREIGN KEY (repo_id) REFERENCES repos(id) ON DELETE CASCADE,\\n  UNIQUE KEY (user_id, repo_id)\\n);\\nINSERT INTO stars(user_id, repo_id) \\n  VALUES((SELECT id FROM users ORDER BY RAND() LIMIT 1), (SELECT id FROM repos ORDER BY RAND() LIMIT 1))\\n  ON DUPLICATE KEY UPDATE id=id;\\nDELETE FROM stars WHERE id = (SELECT id FROM stars ORDER BY RAND() LIMIT 1);\\nSELECT r.name AS repo, COUNT(*) AS stars\\nFROM stars s\\nJOIN repos r\\nON s.repo_id = r.id\\nGROUP BY r.id\\nORDER BY stars DESC;\",\n      \"username\": \"mariadb\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"User\",\n    \"metadata\": {\n      \"name\": \"user\"\n    },\n    \"spec\": {\n      \"host\": \"%\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"maxUserConnections\": 20,\n      \"passwordSecretKeyRef\": {\n        \"key\": \"password\",\n        \"name\": \"mariadb\"\n      },\n      \"retryInterval\": \"5s\"\n    }\n  }\n]",
        "capabilities": "Deep Insights",
        "categories": "Database",
        "containerImage": "ghcr.io/mariadb-operator/mariadb-operator-helm:25.8.3",
        "createdAt": "2025-08-08T12:14:12Z",
        "description": "Run and operate MariaDB in a cloud native way",
        "features.operators.openshift.io/disconnected": "false",
        "features.operators.openshift.io/fips-compliant": "false",
        "features.operators.openshift.io/proxy-aware": "false",
        "features.operators.openshift.io/tls-profiles": "false",
        "features.operators.openshift.io/token-auth-aws": "false",
        "features.operators.openshift.io/token-auth-azure": "false",
        "features.operators.openshift.io/token-auth-gcp": "false",
        "olm.operatorGroup": "global-operators",
        "olm.operatorNamespace": "operators",
        "olm.targetNamespaces": "",
        "operatorframework.io/properties": "{\"properties\":[{\"type\":\"olm.gvk\",\"value\":{\"group\":\"helm.mariadb.mmontes.io\",\"kind\":\"MariadbOperator\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Backup\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Connection\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Database\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Grant\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"MariaDB\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"MaxScale\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"PhysicalBackup\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Restore\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"SqlJob\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"User\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.package\",\"value\":{\"packageName\":\"mariadb-operator\",\"version\":\"25.8.3\"}}]}",
        "operators.operatorframework.io/builder": "operator-sdk-v1.26.0",
        "operators.operatorframework.io/project_layout": "helm.sdk.operatorframework.io/v1",
        "repository": "https://github.com/mariadb-operator/mariadb-operator",
        "support": "mariadb-operator"
      },
      "owned_crds": [
        "backups.k8s.mariadb.com",
        "connections.k8s.mariadb.com",
        "databases.k8s.mariadb.com",
        "grants.k8s.mariadb.com",
        "mariadboperators.helm.mariadb.mmontes.io",
        "mariadbs.k8s.mariadb.com",
        "maxscales.k8s.mariadb.com",
        "physicalbackups.k8s.mariadb.com",
        "restores.k8s.mariadb.com",
        "sqljobs.k8s.mariadb.com",
        "users.k8s.mariadb.com"
      ],
      "required_crds": [],
      "permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps"
              ],
              "verbs": [
                "get",
                "list",
                "watch",
                "create",
                "update",
                "patch",
                "delete"
              ]
            },
            {
              "apiGroups": [
                "coordination.k8s.io"
              ],
              "resources": [
                "leases"
              ],
              "verbs": [
                "get",
                "list",
                "watch",
                "create",
                "update",
                "patch",
                "delete"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "events"
              ],
              "verbs": [
                "create",
                "patch"
              ]
            }
          ],
          "serviceAccountName": "mariadb-operator-helm-controller-manager"
        }
      ],
      "cluster_permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "namespaces"
              ],
              "verbs": [
                "get"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "secrets"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "events"
              ],
              "verbs": [
                "create"
              ]
            },
            {
              "apiGroups": [
                "helm.mariadb.mmontes.io"
              ],
              "resources": [
                "mariadboperators",
                "mariadboperators/status",
                "mariadboperators/finalizers"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "rbac.authorization.k8s.io"
              ],
              "resources": [
                "clusterrolebindings",
                "clusterroles"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "admissionregistration.k8s.io"
              ],
              "resources": [
                "validatingwebhookconfigurations",
                "mutatingwebhookconfigurations"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "rbac.authorization.k8s.io"
              ],
              "resources": [
                "rolebindings",
                "roles"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "apps"
              ],
              "resources": [
                "deployments"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "serviceaccounts",
                "services"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "apiextensions.k8s.io"
              ],
              "resources": [
                "customresourcedefinitions"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "cert-manager.io"
              ],
              "resources": [
                "certificates",
                "issuers"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "monitoring.coreos.com"
              ],
              "resources": [
                "servicemonitors"
              ],
              "verbs": [
                "*"
              ]
            }
          ],
          "serviceAccountName": "mariadb-operator-helm-controller-manager"
        }
      ],
      "replaces": "mariadb-operator.v25.8.2",
      "skips": [],
      "min_kube_version": "1.16.0"
    },
    {
      "name": "oracle-database-operator.v1.2.0",
      "namespace": "operators",
      "display_name": "Oracle Database Operator",
      "version": "1.2.0",
      "phase": "Installing",
      "description": "As part of Oracle's resolution to make Oracle Database Kubernetes native (that is, observable and operable by Kubernetes), Oracle released Oracle Database Operator for Kubernetes (OraOperator or the operator). OraOperator extends the Kubernetes API with custom resources and controllers for automating Oracle Database lifecycle management.\nIn this v1.2.0 production release, OraOperator supports the following database configurations and infrastructure:\n##Supported Database Configurations:\n* Oracle Cloud Infrastructure (OCI) Databases\n  * Oracle Autonomous Database Serverless (ADB-S)\n  * Oracle Autonomous Database on Dedicated on (ADB-D)\n  * Oracle Base Database Cloud Service (Base DB)\n* Containerized Database deployments on Kubernetes\n  * Oracle Kubernetes Engine (OKE) and Oracle Cloud Native Environments (OCNE)\n    * Single Instance databases (SIDB)\n    * Globally Distributed Databases (Shared)\n    * Oracle Data Guard\n    * True Cache (Preview release)\n    * Oracle Database Observability\n* On-Premises Databases\n  * Oracle Multitenant Databases (CDB/PDBs management)\n  * ORDS Services\n\nRefer to full feature list and capabilities: [https://github.com/oracle/oracle-database-operator/blob/main/README.md](https://github.com/oracle/oracle-database-operator/blob/main/README.md)\n",
      "provider": "Oracle",
      "install_strategy": "OwnNamespace",
      "creation_timestamp": "2025-09-07T09:13:34Z",
      "labels": {
        "olm.managed": "true",
        "operators.coreos.com/oracle-database-operator.operators": ""
      },
      "annotations": {
        "alm-examples": "[\n  {\n    \"apiVersion\": \"database.oracle.com/v1alpha1\",\n    \"kind\": \"CDB\",\n    \"metadata\": {\n      \"name\": \"cdb-dev\",\n      \"namespace\": \"oracle-database-operator-system\"\n    },\n    \"spec\": {\n      \"cdbAdminPwd\": {\n        \"secret\": {\n          \"key\": \"cdbadmin_pwd\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"cdbAdminUser\": {\n        \"secret\": {\n          \"key\": \"cdbadmin_user\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"cdbName\": \"devcdb\",\n      \"dbPort\": 1521,\n      \"dbServer\": \"172.17.0.4\",\n      \"ordsImage\": \"\",\n      \"ordsImagePullPolicy\": \"Always\",\n      \"ordsPwd\": {\n        \"secret\": {\n          \"key\": \"ords_pwd\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"replicas\": 1,\n      \"serviceName\": \"devdb.example.com\",\n      \"sysAdminPwd\": {\n        \"secret\": {\n          \"key\": \"sysadmin_pwd\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"webServerPwd\": {\n        \"secret\": {\n          \"key\": \"webserver_pwd\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"webServerUser\": {\n        \"secret\": {\n          \"key\": \"webserver_user\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v1alpha1\",\n    \"kind\": \"DbcsSystem\",\n    \"metadata\": {\n      \"name\": \"dbcssystem-sample\"\n    },\n    \"spec\": {\n      \"foo\": \"bar\"\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v1alpha1\",\n    \"kind\": \"PDB\",\n    \"metadata\": {\n      \"labels\": {\n        \"cdb\": \"cdb-dev\"\n      },\n      \"name\": \"pdb1\",\n      \"namespace\": \"oracle-database-operator-system\"\n    },\n    \"spec\": {\n      \"action\": \"Create\",\n      \"adminName\": {\n        \"secret\": {\n          \"key\": \"sysadmin_user\",\n          \"secretName\": \"pdb1-secret\"\n        }\n      },\n      \"adminPwd\": {\n        \"secret\": {\n          \"key\": \"sysadmin_pwd\",\n          \"secretName\": \"pdb1-secret\"\n        }\n      },\n      \"cdbName\": \"devcdb\",\n      \"cdbResName\": \"cdb-dev\",\n      \"fileNameConversions\": \"NONE\",\n      \"pdbName\": \"pdbdev\",\n      \"tempSize\": \"100M\",\n      \"totalSize\": \"1G\"\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v4\",\n    \"kind\": \"AutonomousContainerDatabase\",\n    \"metadata\": {\n      \"name\": \"autonomouscontainerdatabase-sample\"\n    },\n    \"spec\": {\n      \"autonomousExadataVMClusterOCID\": \"ocid1.autonomousexainfrastructure...\",\n      \"compartmentOCID\": \"ocid1.compartment... OR ocid1.tenancy...\",\n      \"displayName\": \"newACD\",\n      \"ociConfig\": {\n        \"configMapName\": \"oci-cred\",\n        \"secretName\": \"oci-privatekey\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v4\",\n    \"kind\": \"AutonomousDatabase\",\n    \"metadata\": {\n      \"name\": \"autonomousdatabase-sample\"\n    },\n    \"spec\": {\n      \"action\": \"Create\",\n      \"details\": {\n        \"adminPassword\": {\n          \"k8sSecret\": {\n            \"name\": \"admin-password\"\n          }\n        },\n        \"compartmentId\": \"ocid1.compartment... OR ocid1.tenancy...\",\n        \"cpuCoreCount\": 1,\n        \"dataStorageSizeInTBs\": 1,\n        \"dbName\": \"NewADB\",\n        \"displayName\": \"NewADB\"\n      },\n      \"ociConfig\": {\n        \"configMapName\": \"oci-cred\",\n        \"secretName\": \"oci-privatekey\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v4\",\n    \"kind\": \"AutonomousDatabaseBackup\",\n    \"metadata\": {\n      \"name\": \"autonomousdatabasebackup-sample\"\n    },\n    \"spec\": {\n      \"displayName\": \"autonomousdatabasebackup-sample\",\n      \"isLongTermBackup\": true,\n      \"ociConfig\": {\n        \"configMapName\": \"oci-cred\",\n        \"secretName\": \"oci-privatekey\"\n      },\n      \"retentionPeriodInDays\": 90,\n      \"target\": {\n        \"k8sADB\": {\n          \"name\": \"autonomousdatabase-sample\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v4\",\n    \"kind\": \"SingleInstanceDatabase\",\n    \"metadata\": {\n      \"name\": \"sidb-sample\",\n      \"namespace\": \"default\"\n    },\n    \"spec\": {\n      \"adminPassword\": {\n        \"secretName\": \"db-admin-secret\"\n      },\n      \"archiveLog\": true,\n      \"charset\": \"AL32UTF8\",\n      \"edition\": \"enterprise\",\n      \"image\": {\n        \"pullFrom\": \"container-registry.oracle.com/database/enterprise_ru:19\",\n        \"pullSecrets\": \"oracle-container-registry-secret\"\n      },\n      \"pdbName\": \"orclpdb1\",\n      \"persistence\": {\n        \"accessMode\": \"ReadWriteOnce\",\n        \"size\": \"100Gi\",\n        \"storageClass\": \"oci-bv\"\n      },\n      \"replicas\": 1,\n      \"sid\": \"ORCL1\"\n    }\n  },\n  {\n    \"apiVersion\": \"observability.oracle.com/v1alpha1\",\n    \"kind\": \"DatabaseObserver\",\n    \"metadata\": {\n      \"name\": \"obs-sample\"\n    },\n    \"spec\": {\n      \"database\": {\n        \"dbConnectionString\": {\n          \"key\": \"connection\",\n          \"secret\": \"db-secret\"\n        },\n        \"dbPassword\": {\n          \"key\": \"password\",\n          \"secret\": \"db-secret\"\n        },\n        \"dbUser\": {\n          \"key\": \"username\",\n          \"secret\": \"db-secret\"\n        },\n        \"dbWallet\": {\n          \"secret\": \"instance-wallet\"\n        }\n      },\n      \"exporter\": {\n        \"configuration\": {\n          \"configmap\": {\n            \"configmapName\": \"devcm-oradevdb-config\",\n            \"key\": \"config.toml\"\n          }\n        },\n        \"image\": \"container-registry.oracle.com/database/observability-exporter:latest\",\n        \"service\": {\n          \"port\": 9161\n        }\n      },\n      \"ociConfig\": {\n        \"configMapName\": \"oci-cred\",\n        \"secretName\": \"oci-privatekey\"\n      },\n      \"prometheus\": {\n        \"labels\": {\n          \"app\": \"app-sample-label\"\n        },\n        \"port\": \"metrics\"\n      },\n      \"replicas\": 1\n    }\n  }\n]",
        "capabilities": "Seamless Upgrades",
        "categories": "Database",
        "containerImage": "container-registry.oracle.com/database/operator:1.2.0",
        "createdAt": "2025-04-10T20:09:48Z",
        "olm.operatorGroup": "global-operators",
        "olm.operatorNamespace": "operators",
        "olm.targetNamespaces": "",
        "operatorframework.io/properties": "{\"properties\":[{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousContainerDatabase\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousContainerDatabase\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabase\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabase\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabaseBackup\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabaseBackup\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabaseRestore\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabaseRestore\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"CDB\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"CDB\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"DataguardBroker\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"DataguardBroker\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"DbcsSystem\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"DbcsSystem\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"LREST\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"LRPDB\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"OracleRestDataService\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"OracleRestDataService\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"OrdsSrvs\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"PDB\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"PDB\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"ShardingDatabase\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"ShardingDatabase\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"SingleInstanceDatabase\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"SingleInstanceDatabase\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"observability.oracle.com\",\"kind\":\"DatabaseObserver\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"observability.oracle.com\",\"kind\":\"DatabaseObserver\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"observability.oracle.com\",\"kind\":\"DatabaseObserver\",\"version\":\"v4\"}},{\"type\":\"olm.package\",\"value\":{\"packageName\":\"oracle-database-operator\",\"version\":\"1.2.0\"}}]}",
        "operators.operatorframework.io/builder": "operator-sdk-v1.39.2",
        "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v4"
      },
      "owned_crds": [
        "autonomouscontainerdatabases.database.oracle.com",
        "autonomouscontainerdatabases.database.oracle.com",
        "autonomousdatabasebackups.database.oracle.com",
        "autonomousdatabasebackups.database.oracle.com",
        "autonomousdatabaserestores.database.oracle.com",
        "autonomousdatabaserestores.database.oracle.com",
        "autonomousdatabases.database.oracle.com",
        "autonomousdatabases.database.oracle.com",
        "cdbs.database.oracle.com",
        "cdbs.database.oracle.com",
        "databaseobservers.observability.oracle.com",
        "databaseobservers.observability.oracle.com",
        "databaseobservers.observability.oracle.com",
        "dataguardbrokers.database.oracle.com",
        "dataguardbrokers.database.oracle.com",
        "dbcssystems.database.oracle.com",
        "dbcssystems.database.oracle.com",
        "lrests.database.oracle.com",
        "lrpdbs.database.oracle.com",
        "oraclerestdataservices.database.oracle.com",
        "oraclerestdataservices.database.oracle.com",
        "ordssrvs.database.oracle.com",
        "pdbs.database.oracle.com",
        "pdbs.database.oracle.com",
        "shardingdatabases.database.oracle.com",
        "shardingdatabases.database.oracle.com",
        "singleinstancedatabases.database.oracle.com",
        "singleinstancedatabases.database.oracle.com"
      ],
      "required_crds": [],
      "permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps"
              ],
              "verbs": [
                "get",
                "list",
                "watch",
                "create",
                "update",
                "patch",
                "delete"
              ]
            },
            {
              "apiGroups": [
                "coordination.k8s.io"
              ],
              "resources": [
                "leases"
              ],
              "verbs": [
                "get",
                "list",
                "watch",
                "create",
                "update",
                "patch",
                "delete"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps/status"
              ],
              "verbs": [
                "get",
                "update",
                "patch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "events"
              ],
              "verbs": [
                "create",
                "patch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps",
                "containers",
                "deployments",
                "events",
                "namespaces",
                "persistentvolumeclaims",
                "pods",
                "pods/exec",
                "pods/log",
                "replicasets",
                "secrets",
                "services"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps/status",
                "daemonsets/status",
                "deployments/status",
                "services/status",
                "statefulsets/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "persistentvolumes"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "secrets/status"
              ],
              "verbs": [
                "get"
              ]
            },
            {
              "apiGroups": [
                "''"
              ],
              "resources": [
                "statefulsets/finalizers"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "apps"
              ],
              "resources": [
                "configmaps"
              ],
              "verbs": [
                "get",
                "list"
              ]
            },
            {
              "apiGroups": [
                "apps"
              ],
              "resources": [
                "daemonsets",
                "deployments",
                "pods",
                "replicasets",
                "services",
                "statefulsets"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "coordination.k8s.io"
              ],
              "resources": [
                "leases"
              ],
              "verbs": [
                "create",
                "get",
                "list",
                "update"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "autonomouscontainerdatabases",
                "autonomousdatabases",
                "cdbs",
                "dataguardbrokers",
                "dbcssystems",
                "events",
                "lrests",
                "lrpdbs",
                "oraclerestdataservices",
                "ordssrvs",
                "pdbs",
                "shardingdatabases",
                "singleinstancedatabases"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "autonomouscontainerdatabases/status",
                "autonomousdatabasebackups/status",
                "autonomousdatabaserestores/status",
                "cdbs/status",
                "dataguardbrokers/status",
                "dbcssystems/status",
                "lrests/status",
                "lrpdbs/status",
                "oraclerestdataservices/status",
                "ordssrvs/status",
                "pdbs/status",
                "shardingdatabases/status",
                "singleinstancedatabases/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "autonomousdatabasebackups",
                "autonomousdatabaserestores"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "autonomousdatabases/status"
              ],
              "verbs": [
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "cdbs/finalizers",
                "dataguardbrokers/finalizers",
                "lrests/finalizers",
                "oraclerestdataservices/finalizers",
                "ordssrvs/finalizers",
                "singleinstancedatabases/finalizers"
              ],
              "verbs": [
                "update"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "dbcssystems/finalizers",
                "lrpdbs/finalizers",
                "pdbs/finalizers",
                "shardingdatabases/finalizers"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "monitoring.coreos.com"
              ],
              "resources": [
                "servicemonitors"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "observability.oracle.com"
              ],
              "resources": [
                "databaseobservers"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "observability.oracle.com"
              ],
              "resources": [
                "databaseobservers/finalizers"
              ],
              "verbs": [
                "update"
              ]
            },
            {
              "apiGroups": [
                "observability.oracle.com"
              ],
              "resources": [
                "databaseobservers/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "storage.k8s.io"
              ],
              "resources": [
                "storageclasses"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            }
          ],
          "serviceAccountName": "default"
        }
      ],
      "cluster_permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                "authentication.k8s.io"
              ],
              "resources": [
                "tokenreviews"
              ],
              "verbs": [
                "create"
              ]
            },
            {
              "apiGroups": [
                "authorization.k8s.io"
              ],
              "resources": [
                "subjectaccessreviews"
              ],
              "verbs": [
                "create"
              ]
            }
          ],
          "serviceAccountName": "default"
        }
      ],
      "replaces": "oracle-database-operator.v1.1.0",
      "skips": [],
      "min_kube_version": ""
    },
    {
      "name": "cloudnative-pg.v1.27.0",
      "namespace": "oracle-database-operator-system",
      "display_name": "CloudNativePG",
      "version": "1.27.0",
      "phase": "Succeeded",
      "description": "Main features:\n\n- Direct integration with the Kubernetes API server for High Availability,\n  eliminating the need for external tools.\n- Self-healing capabilities, including:\n    - Automated failover by promoting the most aligned replica.\n    - Automatic recreation of failed replicas.\n- Planned switchover of the primary instance by promoting a selected replica.\n- Declarative management of key PostgreSQL configurations, including:\n    - PostgreSQL settings.\n    - Roles, users, and groups.\n    - Databases, extensions, and schemas.\n    - Tablespaces (including temporary tablespaces).\n- Flexible instance definition, supporting any number of instances (minimum 1\n  primary server).\n- Scale-up/down capabilities to dynamically adjust cluster size.\n- Read-Write and Read-Only Services, ensuring applications connect correctly:\n    - *Read-Write Service*: Routes connections to the primary server.\n    - *Read-Only Service*: Distributes connections among replicas for read workloads.\n- Support for quorum-based and priority-based PostgreSQL Synchronous\n  Replication.\n- Replica clusters enabling PostgreSQL distributed topologies across multiple\n  Kubernetes clusters (private, public, hybrid, and multi-cloud).\n- Delayed Replica clusters for point-in-time access to historical data.\n- Persistent volume management, including:\n    - Support for Local Persistent Volumes with PVC templates.\n    - Reuse of Persistent Volumes storage in Pods.\n    - Separate volumes for WAL files and tablespaces.\n- Backup and recovery options, including:\n    - Integration with the [Barman Cloud plugin](https://github.com/cloudnative-pg/plugin-barman-cloud)\n      for continuous online backup via WAL archiving to AWS S3, S3-compatible\n      services, Azure Blob Storage, and Google Cloud Storage, with support for\n      retention policies based on a configurable recovery window.\n    - Backups using volume snapshots (where supported by storage classes).\n    - Full and Point-In-Time recovery from volume snapshots or object stores (via Barman Cloud plugin).\n    - Backup from standby replicas to reduce primary workload impact.\n- Offline and online import of PostgreSQL databases, including major upgrades:\n    - *Offline Import*: Direct restore from existing databases.\n    - *Online Import*: PostgreSQL native logical replication via the `Subscription` resource.\n- Offline In-Place Major Upgrades of PostgreSQL\n- High Availability physical replication slots, including synchronization of\n  user-defined replication slots.\n- Parallel WAL archiving and restore, ensuring high-performance data\n  synchronization in high-write environments.\n- TLS support, including:\n    - Secure connections and client certificate authentication.\n    - Custom TLS certificates (integrated with `cert-manager`).\n- Startup and readiness probes, including replica probes based on desired lag\n  from the primary.\n- Declarative rolling updates for:\n    - PostgreSQL minor versions.\n    - Operator upgrades (in-place or rolling updates).\n- Standard output logging of PostgreSQL error messages in JSON format for\n  easier integration with log aggregation tools.\n- Prometheus-compatible metrics exporter (`metrics` port 9187) for custom\n  monitoring.\n- `cnpg` plugin for `kubectl` to simplify cluster operations.\n- Cluster hibernation for resource efficiency in inactive states.\n- Fencing of PostgreSQL clusters (full cluster or subset) to isolate instances\n  when needed.\n- Connection pooling with PgBouncer for improved database efficiency.\n- OLM (Operator Lifecycle Manager) installation support for streamlined\n  deployments.\n- Multi-arch container images, including Software Bill of Materials (SBOM) and\n  provenance attestations for security compliance.\n",
      "provider": "The CloudNativePG Contributors",
      "install_strategy": "OwnNamespace",
      "creation_timestamp": "2025-09-07T09:12:57Z",
      "labels": {
        "olm.copiedFrom": "operators",
        "olm.managed": "true",
        "operatorframework.io/arch.amd64": "supported"
      },
      "annotations": {
        "alm-examples": "[\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"backup-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      }\n    },\n    \"status\": {\n      \"serverName\": null\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Cluster\",\n    \"metadata\": {\n      \"name\": \"cluster-sample\"\n    },\n    \"spec\": {\n      \"instances\": 3,\n      \"logLevel\": \"info\",\n      \"primaryUpdateStrategy\": \"unsupervised\",\n      \"storage\": {\n        \"size\": \"1Gi\"\n      },\n      \"walStorage\": {\n        \"size\": \"1Gi\"\n      }\n    },\n    \"status\": {\n      \"instances\": 3\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"ClusterImageCatalog\",\n    \"metadata\": {\n      \"name\": \"postgresql\"\n    },\n    \"spec\": {\n      \"images\": [\n        {\n          \"image\": \"ghcr.io/cloudnative-pg/postgresql@sha256:1c97e0d6e94d8b335be7f258eeda2202966df5fde0c934eef4b13c760ec6a891\",\n          \"major\": 15\n        },\n        {\n          \"image\": \"ghcr.io/cloudnative-pg/postgresql@sha256:ee2e3ce7f0ea935c3f4ab245c0b3959c9f1c49816ae02222ceb6bc347f48e43b\",\n          \"major\": 16\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Database\",\n    \"metadata\": {\n      \"name\": \"database-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      },\n      \"name\": \"database-sample\",\n      \"owner\": \"app\"\n    },\n    \"status\": {\n      \"applied\": false\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"ImageCatalog\",\n    \"metadata\": {\n      \"name\": \"postgresql\",\n      \"namespace\": \"default\"\n    },\n    \"spec\": {\n      \"images\": [\n        {\n          \"image\": \"ghcr.io/cloudnative-pg/postgresql@sha256:1c97e0d6e94d8b335be7f258eeda2202966df5fde0c934eef4b13c760ec6a891\",\n          \"major\": 15\n        },\n        {\n          \"image\": \"ghcr.io/cloudnative-pg/postgresql@sha256:ee2e3ce7f0ea935c3f4ab245c0b3959c9f1c49816ae02222ceb6bc347f48e43b\",\n          \"major\": 16\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Pooler\",\n    \"metadata\": {\n      \"name\": \"pooler-sample-rw\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      },\n      \"instances\": 1,\n      \"pgbouncer\": {\n        \"poolMode\": \"session\"\n      },\n      \"type\": \"rw\"\n    },\n    \"status\": {\n      \"instances\": 1\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Publication\",\n    \"metadata\": {\n      \"name\": \"publication-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      },\n      \"dbname\": \"app\",\n      \"name\": \"pub\",\n      \"target\": {\n        \"allTables\": true\n      }\n    },\n    \"status\": {\n      \"applied\": false\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"ScheduledBackup\",\n    \"metadata\": {\n      \"name\": \"scheduledbackup-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample\"\n      },\n      \"schedule\": \"0 0 0 * * *\"\n    },\n    \"status\": {\n      \"lastCheckTime\": null\n    }\n  },\n  {\n    \"apiVersion\": \"postgresql.cnpg.io/v1\",\n    \"kind\": \"Subscription\",\n    \"metadata\": {\n      \"name\": \"subscription-sample\"\n    },\n    \"spec\": {\n      \"cluster\": {\n        \"name\": \"cluster-sample-dest\"\n      },\n      \"dbname\": \"app\",\n      \"externalClusterName\": \"cluster-sample\",\n      \"name\": \"sub\",\n      \"publicationName\": \"pub\"\n    },\n    \"status\": {\n      \"applied\": false\n    }\n  }\n]",
        "capabilities": "Auto Pilot",
        "categories": "Database",
        "certified": "true",
        "containerImage": "ghcr.io/cloudnative-pg/cloudnative-pg@sha256:53995e9d6a7760c77d77e5298f78b49029427494f4dd933d5fa7a74f7af3bb44",
        "createdAt": "2025-08-12T14:08:35Z",
        "description": "CloudNativePG is an open source operator designed to manage highly available PostgreSQL databases with a primary/standby architecture on any supported Kubernetes cluster.",
        "features.operators.openshift.io/disconnected": "true",
        "features.operators.openshift.io/fips-compliant": "false",
        "features.operators.openshift.io/proxy-aware": "false",
        "features.operators.openshift.io/tls-profiles": "false",
        "features.operators.openshift.io/token-auth-aws": "false",
        "features.operators.openshift.io/token-auth-azure": "false",
        "features.operators.openshift.io/token-auth-gcp": "false",
        "olm.operatorGroup": "global-operators",
        "olm.operatorNamespace": "operators",
        "operatorframework.io/properties": "{\"properties\":[{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Backup\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Cluster\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"ClusterImageCatalog\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Database\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"FailoverQuorum\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"ImageCatalog\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Pooler\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Publication\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"ScheduledBackup\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"postgresql.cnpg.io\",\"kind\":\"Subscription\",\"version\":\"v1\"}},{\"type\":\"olm.package\",\"value\":{\"packageName\":\"cloudnative-pg\",\"version\":\"1.27.0\"}}]}",
        "operators.operatorframework.io/builder": "operator-sdk-v1.41.1",
        "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v4",
        "repository": "https://github.com/cloudnative-pg/cloudnative-pg",
        "support": "Community"
      },
      "owned_crds": [
        "backups.postgresql.cnpg.io",
        "clusterimagecatalogs.postgresql.cnpg.io",
        "clusters.postgresql.cnpg.io",
        "databases.postgresql.cnpg.io",
        "failoverquorums.postgresql.cnpg.io",
        "imagecatalogs.postgresql.cnpg.io",
        "poolers.postgresql.cnpg.io",
        "publications.postgresql.cnpg.io",
        "scheduledbackups.postgresql.cnpg.io",
        "subscriptions.postgresql.cnpg.io"
      ],
      "required_crds": [],
      "permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps",
                "secrets",
                "services"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps/status",
                "secrets/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "events"
              ],
              "verbs": [
                "create",
                "patch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "nodes"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "persistentvolumeclaims",
                "pods",
                "pods/exec"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "pods/status"
              ],
              "verbs": [
                "get"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "serviceaccounts"
              ],
              "verbs": [
                "create",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "admissionregistration.k8s.io"
              ],
              "resources": [
                "mutatingwebhookconfigurations",
                "validatingwebhookconfigurations"
              ],
              "verbs": [
                "get",
                "patch"
              ]
            },
            {
              "apiGroups": [
                "apps"
              ],
              "resources": [
                "deployments"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "batch"
              ],
              "resources": [
                "jobs"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "coordination.k8s.io"
              ],
              "resources": [
                "leases"
              ],
              "verbs": [
                "create",
                "get",
                "update"
              ]
            },
            {
              "apiGroups": [
                "monitoring.coreos.com"
              ],
              "resources": [
                "podmonitors"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "policy"
              ],
              "resources": [
                "poddisruptionbudgets"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "backups",
                "clusters",
                "databases",
                "poolers",
                "publications",
                "scheduledbackups",
                "subscriptions"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "backups/status",
                "databases/status",
                "publications/status",
                "scheduledbackups/status",
                "subscriptions/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "clusterimagecatalogs",
                "imagecatalogs"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "clusters/finalizers",
                "poolers/finalizers"
              ],
              "verbs": [
                "update"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "clusters/status",
                "failoverquorums/status",
                "poolers/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "failoverquorums"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "rbac.authorization.k8s.io"
              ],
              "resources": [
                "rolebindings",
                "roles"
              ],
              "verbs": [
                "create",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "snapshot.storage.k8s.io"
              ],
              "resources": [
                "volumesnapshots"
              ],
              "verbs": [
                "create",
                "get",
                "list",
                "patch",
                "watch"
              ]
            }
          ],
          "serviceAccountName": "cnpg-manager"
        }
      ],
      "cluster_permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "nodes"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "postgresql.cnpg.io"
              ],
              "resources": [
                "clusterimagecatalogs"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            }
          ],
          "serviceAccountName": "cnpg-manager"
        }
      ],
      "replaces": "cloudnative-pg.v1.26.1",
      "skips": [],
      "min_kube_version": "1.23.0"
    },
    {
      "name": "mariadb-operator.v25.8.3",
      "namespace": "oracle-database-operator-system",
      "display_name": "MariaDB Operator",
      "version": "25.8.3",
      "phase": "Succeeded",
      "description": "Install [`mariadb-operator`](https://github.com/mariadb-operator/mariadb-operator) via [OLM](https://olm.operatorframework.io/) using the [helm chart](https://artifacthub.io/packages/helm/mariadb-operator/mariadb-operator).\n\nThis helm operator provides provides a 1:1 mapping between the official helm chart and the [`MariadbOperator`](https://github.com/mariadb-operator/mariadb-operator-helm/blob/main/config/samples/helm_v1alpha1_mariadboperator.yaml) CRD, allowing to install [`mariadb-operator`](https://github.com/mariadb-operator/mariadb-operator) via OLM without having to do any change in the helm chart.\n\nNormally, you would install [`mariadb-operator`](https://github.com/mariadb-operator/mariadb-operator) providing this `values.yaml` to the helm chart:\n```yaml\nimage:\n  repository: ghcr.io/mariadb-operator/mariadb-operator\n  pullPolicy: IfNotPresent\nlogLevel: INFO\nha:\n  enabled: true\nmetrics:\n  enabled: true\n  serviceMonitor:\n    enabled: true\nwebhook:\n  cert:\n    certManager:\n      enabled: true\n```\n\nThis helm chart installation is abstracted in the [`MariadbOperator`](https://github.com/mariadb-operator/mariadb-operator-helm/blob/main/config/samples/helm_v1alpha1_mariadboperator.yaml) CRD, which will be reconciled by the helm operator:\n```yaml\napiVersion: helm.k8s.mariadb.com/v1alpha1\nkind: MariadbOperator\nmetadata:\n  name: mariadb-operator\nspec:\n  image:\n    repository: ghcr.io/mariadb-operator/mariadb-operator\n    pullPolicy: IfNotPresent\n  logLevel: INFO\n  ha:\n    enabled: true\n  metrics:\n    enabled: true\n    serviceMonitor:\n      enabled: true\n  webhook:\n    cert:\n      certManager:\n        enabled: true\n```\n\nOnce you have installed the operator, you will able to install a [`MariaDB`](https://github.com/mariadb-operator/mariadb-operator/blob/main/examples/manifests/mariadb_v1alpha1_mariadb.yaml) instance. Refer to the main [`mariadb-operator`](https://github.com/mariadb-operator/mariadb-operator) documentation for getting started with the rest of CRDs.\n\n## Documentation\n* [mariadb-operator](https://github.com/mariadb-operator/mariadb-operator/blob/main/README.md)\n* [mariadb-operator-helm](https://github.com/mariadb-operator/mariadb-operator-helm/blob/main/README.md)\n\n## Releases\nThis operator is automatically published in the following repositories whenever a new version of the [helm chart](https://artifacthub.io/packages/helm/mariadb-operator/mariadb-operator) is released:\n- [k8s-operatorhub/community-operators](https://github.com/k8s-operatorhub/community-operators)\n- [redhat-openshift-ecosystem/community-operators-prod](https://github.com/redhat-openshift-ecosystem/community-operators-prod)\n\n## Roadmap\nTake a look at our [roadmap](https://github.com/mariadb-operator/mariadb-operator/blob/main/ROADMAP.md) and feel free to open an issue to suggest new features.\n\n## Contributing\nWe welcome and encourage contributions to this project! Please check our [contributing](https://github.com/mariadb-operator/mariadb-operator/blob/main/CONTRIBUTING.md) and [development](https://github.com/mariadb-operator/mariadb-operator/blob/main/docs/DEVELOPMENT.md) guides. PRs welcome!\n\n## Get in touch\nJoin us on Slack: **[MariaDB Community Slack](https://r.mariadb.com/join-community-slack)**.\n",
      "provider": "mariadb-operator",
      "install_strategy": "OwnNamespace",
      "creation_timestamp": "2025-09-07T09:15:58Z",
      "labels": {
        "olm.copiedFrom": "operators",
        "olm.managed": "true"
      },
      "annotations": {
        "alm-examples": "[\n  {\n    \"apiVersion\": \"helm.mariadb.mmontes.io/v1alpha1\",\n    \"kind\": \"MariadbOperator\",\n    \"metadata\": {\n      \"name\": \"mariadb-operator\"\n    },\n    \"spec\": {\n      \"affinity\": {},\n      \"certController\": {\n        \"affinity\": {},\n        \"caValidity\": \"35064h\",\n        \"certValidity\": \"8766h\",\n        \"enabled\": true,\n        \"extrArgs\": [],\n        \"extraVolumeMounts\": [],\n        \"extraVolumes\": [],\n        \"ha\": {\n          \"enabled\": false,\n          \"replicas\": 3\n        },\n        \"image\": {\n          \"pullPolicy\": \"IfNotPresent\",\n          \"repository\": \"ghcr.io/mariadb-operator/mariadb-operator\",\n          \"tag\": \"\"\n        },\n        \"imagePullSecrets\": [],\n        \"lookaheadValidity\": \"2160h\",\n        \"nodeSelector\": {},\n        \"podAnnotations\": {},\n        \"podSecurityContext\": {},\n        \"requeueDuration\": \"5m\",\n        \"resources\": {},\n        \"securityContext\": {},\n        \"serviceAccount\": {\n          \"annotations\": {},\n          \"automount\": true,\n          \"enabled\": true,\n          \"extraLabels\": {},\n          \"name\": \"\"\n        },\n        \"serviceMonitor\": {\n          \"additionalLabels\": {},\n          \"enabled\": true,\n          \"interval\": \"30s\",\n          \"scrapeTimeout\": \"25s\"\n        },\n        \"tolerations\": []\n      },\n      \"clusterName\": \"cluster.local\",\n      \"extrArgs\": [],\n      \"extraVolumeMounts\": [],\n      \"extraVolumes\": [],\n      \"fullnameOverride\": \"\",\n      \"ha\": {\n        \"enabled\": false,\n        \"replicas\": 3\n      },\n      \"image\": {\n        \"pullPolicy\": \"IfNotPresent\",\n        \"repository\": \"ghcr.io/mariadb-operator/mariadb-operator\",\n        \"tag\": \"\"\n      },\n      \"imagePullSecrets\": [],\n      \"logLevel\": \"INFO\",\n      \"metrics\": {\n        \"enabled\": false,\n        \"serviceMonitor\": {\n          \"additionalLabels\": {},\n          \"enabled\": true,\n          \"interval\": \"30s\",\n          \"scrapeTimeout\": \"25s\"\n        }\n      },\n      \"nameOverride\": \"\",\n      \"nodeSelector\": {},\n      \"podAnnotations\": {},\n      \"podSecurityContext\": {},\n      \"rbac\": {\n        \"enabled\": true\n      },\n      \"resources\": {},\n      \"securityContext\": {},\n      \"serviceAccount\": {\n        \"annotations\": {},\n        \"automount\": true,\n        \"enabled\": true,\n        \"extraLabels\": {},\n        \"name\": \"\"\n      },\n      \"tolerations\": [],\n      \"webhook\": {\n        \"affinity\": {},\n        \"annotations\": {},\n        \"cert\": {\n          \"caPath\": \"/tmp/k8s-webhook-server/certificate-authority\",\n          \"certManager\": {\n            \"duration\": \"\",\n            \"enabled\": false,\n            \"issuerRef\": {},\n            \"renewBefore\": \"\"\n          },\n          \"path\": \"/tmp/k8s-webhook-server/serving-certs\",\n          \"secretAnnotations\": {}\n        },\n        \"extrArgs\": [],\n        \"extraVolumeMounts\": [],\n        \"extraVolumes\": [],\n        \"ha\": {\n          \"enabled\": false,\n          \"replicas\": 3\n        },\n        \"hostNetwork\": false,\n        \"image\": {\n          \"pullPolicy\": \"IfNotPresent\",\n          \"repository\": \"ghcr.io/mariadb-operator/mariadb-operator\",\n          \"tag\": \"\"\n        },\n        \"imagePullSecrets\": [],\n        \"nodeSelector\": {},\n        \"podAnnotations\": {},\n        \"podSecurityContext\": {},\n        \"port\": 10250,\n        \"resources\": {},\n        \"securityContext\": {},\n        \"serviceAccount\": {\n          \"annotations\": {},\n          \"automount\": true,\n          \"enabled\": true,\n          \"extraLabels\": {},\n          \"name\": \"\"\n        },\n        \"serviceMonitor\": {\n          \"additionalLabels\": {},\n          \"enabled\": true,\n          \"interval\": \"30s\",\n          \"scrapeTimeout\": \"25s\"\n        },\n        \"tolerations\": []\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"backup\"\n    },\n    \"spec\": {\n      \"args\": [\n        \"--single-transaction\",\n        \"--all-databases\"\n      ],\n      \"logLevel\": \"info\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"maxRetention\": \"720h\",\n      \"resources\": {\n        \"limits\": {\n          \"cpu\": \"300m\",\n          \"memory\": \"512Mi\"\n        },\n        \"requests\": {\n          \"cpu\": \"100m\",\n          \"memory\": \"128Mi\"\n        }\n      },\n      \"schedule\": {\n        \"cron\": \"*/1 * * * *\",\n        \"suspend\": false\n      },\n      \"storage\": {\n        \"s3\": {\n          \"accessKeyIdSecretKeyRef\": {\n            \"key\": \"access-key-id\",\n            \"name\": \"minio\"\n          },\n          \"bucket\": \"backups\",\n          \"endpoint\": \"minio.minio.svc.cluster.local:9000\",\n          \"prefix\": \"mariadb\",\n          \"secretAccessKeySecretKeyRef\": {\n            \"key\": \"secret-access-key\",\n            \"name\": \"minio\"\n          },\n          \"tls\": {\n            \"caSecretKeyRef\": {\n              \"key\": \"ca.crt\",\n              \"name\": \"minio-ca\"\n            },\n            \"enabled\": true\n          }\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Connection\",\n    \"metadata\": {\n      \"name\": \"connection\"\n    },\n    \"spec\": {\n      \"database\": \"mariadb\",\n      \"healthCheck\": {\n        \"interval\": \"10s\",\n        \"retryInterval\": \"3s\"\n      },\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"params\": {\n        \"parseTime\": \"true\"\n      },\n      \"passwordSecretKeyRef\": {\n        \"key\": \"password\",\n        \"name\": \"mariadb\"\n      },\n      \"secretName\": \"connection\",\n      \"secretTemplate\": {\n        \"annotations\": {\n          \"k8s.mariadb.com/connection\": \"sample\"\n        },\n        \"databaseKey\": \"database\",\n        \"hostKey\": \"host\",\n        \"key\": \"dsn\",\n        \"labels\": {\n          \"k8s.mariadb.com/connection\": \"sample\"\n        },\n        \"passwordKey\": \"password\",\n        \"portKey\": \"port\",\n        \"usernameKey\": \"username\"\n      },\n      \"serviceName\": \"mariadb\",\n      \"username\": \"mariadb\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Database\",\n    \"metadata\": {\n      \"name\": \"data-test\"\n    },\n    \"spec\": {\n      \"characterSet\": \"utf8\",\n      \"collate\": \"utf8_general_ci\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"retryInterval\": \"5s\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Grant\",\n    \"metadata\": {\n      \"name\": \"grant\"\n    },\n    \"spec\": {\n      \"database\": \"*\",\n      \"grantOption\": true,\n      \"host\": \"%\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"privileges\": [\n        \"SELECT\",\n        \"INSERT\",\n        \"UPDATE\"\n      ],\n      \"requeueInterval\": \"30s\",\n      \"retryInterval\": \"5s\",\n      \"table\": \"*\",\n      \"username\": \"user\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"MariaDB\",\n    \"metadata\": {\n      \"name\": \"mariadb\"\n    },\n    \"spec\": {\n      \"connection\": {\n        \"secretName\": \"mariadb-conn\",\n        \"secretTemplate\": {\n          \"key\": \"dsn\"\n        }\n      },\n      \"database\": \"mariadb\",\n      \"galera\": {\n        \"enabled\": true\n      },\n      \"metrics\": {\n        \"enabled\": true,\n        \"passwordSecretKeyRef\": {\n          \"generate\": true,\n          \"key\": \"password\",\n          \"name\": \"mariadb-metrics\"\n        }\n      },\n      \"myCnf\": \"[mariadb]\\nbind-address=*\\ndefault_storage_engine=InnoDB\\nbinlog_format=row\\ninnodb_autoinc_lock_mode=2\\ninnodb_buffer_pool_size=1024M\\nmax_allowed_packet=256M\\n\",\n      \"passwordSecretKeyRef\": {\n        \"generate\": true,\n        \"key\": \"password\",\n        \"name\": \"mariadb-password\"\n      },\n      \"primaryConnection\": {\n        \"secretName\": \"mariadb-conn-primary\",\n        \"secretTemplate\": {\n          \"key\": \"dsn\"\n        }\n      },\n      \"primaryService\": {\n        \"type\": \"ClusterIP\"\n      },\n      \"replicas\": 3,\n      \"rootPasswordSecretKeyRef\": {\n        \"generate\": true,\n        \"key\": \"password\",\n        \"name\": \"mariadb-root\"\n      },\n      \"secondaryConnection\": {\n        \"secretName\": \"mariadb-conn-secondary\",\n        \"secretTemplate\": {\n          \"key\": \"dsn\"\n        }\n      },\n      \"secondaryService\": {\n        \"type\": \"ClusterIP\"\n      },\n      \"service\": {\n        \"type\": \"ClusterIP\"\n      },\n      \"storage\": {\n        \"size\": \"1Gi\"\n      },\n      \"updateStrategy\": {\n        \"type\": \"ReplicasFirstPrimaryLast\"\n      },\n      \"username\": \"mariadb\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"MaxScale\",\n    \"metadata\": {\n      \"name\": \"maxscale-galera\"\n    },\n    \"spec\": {\n      \"admin\": {\n        \"guiEnabled\": true,\n        \"port\": 8989\n      },\n      \"auth\": {\n        \"generate\": true\n      },\n      \"config\": {\n        \"sync\": {\n          \"database\": \"mysql\",\n          \"interval\": \"5s\",\n          \"timeout\": \"10s\"\n        }\n      },\n      \"connection\": {\n        \"port\": 3306,\n        \"secretName\": \"mxs-galera-conn\"\n      },\n      \"guiKubernetesService\": {\n        \"metadata\": {\n          \"annotations\": {\n            \"metallb.universe.tf/loadBalancerIPs\": \"172.18.0.231\"\n          }\n        },\n        \"type\": \"LoadBalancer\"\n      },\n      \"kubernetesService\": {\n        \"annotations\": {\n          \"metallb.universe.tf/loadBalancerIPs\": \"172.18.0.224\"\n        },\n        \"type\": \"LoadBalancer\"\n      },\n      \"mariaDbRef\": {\n        \"name\": \"mariadb-galera\"\n      },\n      \"monitor\": {\n        \"cooperativeMonitoring\": \"majority_of_all\",\n        \"interval\": \"2s\",\n        \"params\": {\n          \"available_when_donor\": \"false\",\n          \"disable_master_failback\": \"false\",\n          \"disable_master_role_setting\": \"false\"\n        }\n      },\n      \"replicas\": 3,\n      \"requeueInterval\": \"10s\",\n      \"services\": [\n        {\n          \"listener\": {\n            \"params\": {\n              \"connection_metadata\": \"tx_isolation=auto\"\n            },\n            \"port\": 3306,\n            \"protocol\": \"MariaDBProtocol\"\n          },\n          \"name\": \"rw-router\",\n          \"params\": {\n            \"master_accept_reads\": \"true\",\n            \"max_replication_lag\": \"3s\",\n            \"max_slave_connections\": \"255\",\n            \"transaction_replay\": \"true\",\n            \"transaction_replay_attempts\": \"10\",\n            \"transaction_replay_timeout\": \"5s\"\n          },\n          \"router\": \"readwritesplit\"\n        },\n        {\n          \"listener\": {\n            \"port\": 3307\n          },\n          \"name\": \"rconn-master-router\",\n          \"params\": {\n            \"master_accept_reads\": \"true\",\n            \"max_replication_lag\": \"3s\",\n            \"router_options\": \"master\"\n          },\n          \"router\": \"readconnroute\"\n        },\n        {\n          \"listener\": {\n            \"port\": 3308\n          },\n          \"name\": \"rconn-slave-router\",\n          \"params\": {\n            \"max_replication_lag\": \"3s\",\n            \"router_options\": \"slave\"\n          },\n          \"router\": \"readconnroute\"\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"PhysicalBackup\",\n    \"metadata\": {\n      \"name\": \"physicalbackup\"\n    },\n    \"spec\": {\n      \"compression\": \"bzip2\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"maxRetention\": \"720h\",\n      \"podAffinity\": true,\n      \"resources\": {\n        \"limits\": {\n          \"cpu\": \"300m\",\n          \"memory\": \"512Mi\"\n        },\n        \"requests\": {\n          \"cpu\": \"100m\",\n          \"memory\": \"128Mi\"\n        }\n      },\n      \"schedule\": {\n        \"cron\": \"*/1 * * * *\",\n        \"immediate\": true,\n        \"suspend\": false\n      },\n      \"serviceAccountName\": \"backup\",\n      \"stagingStorage\": {\n        \"persistentVolumeClaim\": {\n          \"accessModes\": [\n            \"ReadWriteOnce\"\n          ],\n          \"resources\": {\n            \"requests\": {\n              \"storage\": \"1Gi\"\n            }\n          }\n        }\n      },\n      \"storage\": {\n        \"s3\": {\n          \"accessKeyIdSecretKeyRef\": {\n            \"key\": \"access-key-id\",\n            \"name\": \"minio\"\n          },\n          \"bucket\": \"physicalbackups\",\n          \"endpoint\": \"minio.minio.svc.cluster.local:9000\",\n          \"prefix\": \"mariadb\",\n          \"region\": \"us-east-1\",\n          \"secretAccessKeySecretKeyRef\": {\n            \"key\": \"secret-access-key\",\n            \"name\": \"minio\"\n          },\n          \"tls\": {\n            \"caSecretKeyRef\": {\n              \"key\": \"ca.crt\",\n              \"name\": \"minio-ca\"\n            },\n            \"enabled\": true\n          }\n        }\n      },\n      \"timeout\": \"1h\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"Restore\",\n    \"metadata\": {\n      \"name\": \"restore\"\n    },\n    \"spec\": {\n      \"backupRef\": {\n        \"name\": \"backup\"\n      },\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"resources\": {\n        \"limits\": {\n          \"cpu\": \"300m\",\n          \"memory\": \"512Mi\"\n        },\n        \"requests\": {\n          \"cpu\": \"100m\",\n          \"memory\": \"128Mi\"\n        }\n      },\n      \"targetRecoveryTime\": \"2023-12-19T09:00:00Z\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"SqlJob\",\n    \"metadata\": {\n      \"name\": \"03-stars\"\n    },\n    \"spec\": {\n      \"database\": \"mariadb\",\n      \"dependsOn\": [\n        {\n          \"name\": \"01-users\"\n        },\n        {\n          \"name\": \"02-repos\"\n        }\n      ],\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"passwordSecretKeyRef\": {\n        \"key\": \"password\",\n        \"name\": \"mariadb\"\n      },\n      \"schedule\": {\n        \"cron\": \"*/1 * * * *\",\n        \"suspend\": false\n      },\n      \"sql\": \"CREATE TABLE IF NOT EXISTS stars (\\n  id bigint PRIMARY KEY AUTO_INCREMENT,\\n  user_id bigint NOT NULL,\\n  repo_id bigint NOT NULL,\\n  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,\\n  FOREIGN KEY (repo_id) REFERENCES repos(id) ON DELETE CASCADE,\\n  UNIQUE KEY (user_id, repo_id)\\n);\\nINSERT INTO stars(user_id, repo_id) \\n  VALUES((SELECT id FROM users ORDER BY RAND() LIMIT 1), (SELECT id FROM repos ORDER BY RAND() LIMIT 1))\\n  ON DUPLICATE KEY UPDATE id=id;\\nDELETE FROM stars WHERE id = (SELECT id FROM stars ORDER BY RAND() LIMIT 1);\\nSELECT r.name AS repo, COUNT(*) AS stars\\nFROM stars s\\nJOIN repos r\\nON s.repo_id = r.id\\nGROUP BY r.id\\nORDER BY stars DESC;\",\n      \"username\": \"mariadb\"\n    }\n  },\n  {\n    \"apiVersion\": \"k8s.mariadb.com/v1alpha1\",\n    \"kind\": \"User\",\n    \"metadata\": {\n      \"name\": \"user\"\n    },\n    \"spec\": {\n      \"host\": \"%\",\n      \"mariaDbRef\": {\n        \"name\": \"mariadb\"\n      },\n      \"maxUserConnections\": 20,\n      \"passwordSecretKeyRef\": {\n        \"key\": \"password\",\n        \"name\": \"mariadb\"\n      },\n      \"retryInterval\": \"5s\"\n    }\n  }\n]",
        "capabilities": "Deep Insights",
        "categories": "Database",
        "containerImage": "ghcr.io/mariadb-operator/mariadb-operator-helm:25.8.3",
        "createdAt": "2025-08-08T12:14:12Z",
        "description": "Run and operate MariaDB in a cloud native way",
        "features.operators.openshift.io/disconnected": "false",
        "features.operators.openshift.io/fips-compliant": "false",
        "features.operators.openshift.io/proxy-aware": "false",
        "features.operators.openshift.io/tls-profiles": "false",
        "features.operators.openshift.io/token-auth-aws": "false",
        "features.operators.openshift.io/token-auth-azure": "false",
        "features.operators.openshift.io/token-auth-gcp": "false",
        "olm.operatorGroup": "global-operators",
        "olm.operatorNamespace": "operators",
        "operatorframework.io/properties": "{\"properties\":[{\"type\":\"olm.gvk\",\"value\":{\"group\":\"helm.mariadb.mmontes.io\",\"kind\":\"MariadbOperator\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Backup\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Connection\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Database\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Grant\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"MariaDB\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"MaxScale\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"PhysicalBackup\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"Restore\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"SqlJob\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"k8s.mariadb.com\",\"kind\":\"User\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.package\",\"value\":{\"packageName\":\"mariadb-operator\",\"version\":\"25.8.3\"}}]}",
        "operators.operatorframework.io/builder": "operator-sdk-v1.26.0",
        "operators.operatorframework.io/project_layout": "helm.sdk.operatorframework.io/v1",
        "repository": "https://github.com/mariadb-operator/mariadb-operator",
        "support": "mariadb-operator"
      },
      "owned_crds": [
        "backups.k8s.mariadb.com",
        "connections.k8s.mariadb.com",
        "databases.k8s.mariadb.com",
        "grants.k8s.mariadb.com",
        "mariadboperators.helm.mariadb.mmontes.io",
        "mariadbs.k8s.mariadb.com",
        "maxscales.k8s.mariadb.com",
        "physicalbackups.k8s.mariadb.com",
        "restores.k8s.mariadb.com",
        "sqljobs.k8s.mariadb.com",
        "users.k8s.mariadb.com"
      ],
      "required_crds": [],
      "permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps"
              ],
              "verbs": [
                "get",
                "list",
                "watch",
                "create",
                "update",
                "patch",
                "delete"
              ]
            },
            {
              "apiGroups": [
                "coordination.k8s.io"
              ],
              "resources": [
                "leases"
              ],
              "verbs": [
                "get",
                "list",
                "watch",
                "create",
                "update",
                "patch",
                "delete"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "events"
              ],
              "verbs": [
                "create",
                "patch"
              ]
            }
          ],
          "serviceAccountName": "mariadb-operator-helm-controller-manager"
        }
      ],
      "cluster_permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "namespaces"
              ],
              "verbs": [
                "get"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "secrets"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "events"
              ],
              "verbs": [
                "create"
              ]
            },
            {
              "apiGroups": [
                "helm.mariadb.mmontes.io"
              ],
              "resources": [
                "mariadboperators",
                "mariadboperators/status",
                "mariadboperators/finalizers"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "rbac.authorization.k8s.io"
              ],
              "resources": [
                "clusterrolebindings",
                "clusterroles"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "admissionregistration.k8s.io"
              ],
              "resources": [
                "validatingwebhookconfigurations",
                "mutatingwebhookconfigurations"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "rbac.authorization.k8s.io"
              ],
              "resources": [
                "rolebindings",
                "roles"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "apps"
              ],
              "resources": [
                "deployments"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "serviceaccounts",
                "services"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "apiextensions.k8s.io"
              ],
              "resources": [
                "customresourcedefinitions"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "cert-manager.io"
              ],
              "resources": [
                "certificates",
                "issuers"
              ],
              "verbs": [
                "*"
              ]
            },
            {
              "apiGroups": [
                "monitoring.coreos.com"
              ],
              "resources": [
                "servicemonitors"
              ],
              "verbs": [
                "*"
              ]
            }
          ],
          "serviceAccountName": "mariadb-operator-helm-controller-manager"
        }
      ],
      "replaces": "mariadb-operator.v25.8.2",
      "skips": [],
      "min_kube_version": "1.16.0"
    },
    {
      "name": "oracle-database-operator.v1.2.0",
      "namespace": "oracle-database-operator-system",
      "display_name": "Oracle Database Operator",
      "version": "1.2.0",
      "phase": "Installing",
      "description": "As part of Oracle's resolution to make Oracle Database Kubernetes native (that is, observable and operable by Kubernetes), Oracle released Oracle Database Operator for Kubernetes (OraOperator or the operator). OraOperator extends the Kubernetes API with custom resources and controllers for automating Oracle Database lifecycle management.\nIn this v1.2.0 production release, OraOperator supports the following database configurations and infrastructure:\n##Supported Database Configurations:\n* Oracle Cloud Infrastructure (OCI) Databases\n  * Oracle Autonomous Database Serverless (ADB-S)\n  * Oracle Autonomous Database on Dedicated on (ADB-D)\n  * Oracle Base Database Cloud Service (Base DB)\n* Containerized Database deployments on Kubernetes\n  * Oracle Kubernetes Engine (OKE) and Oracle Cloud Native Environments (OCNE)\n    * Single Instance databases (SIDB)\n    * Globally Distributed Databases (Shared)\n    * Oracle Data Guard\n    * True Cache (Preview release)\n    * Oracle Database Observability\n* On-Premises Databases\n  * Oracle Multitenant Databases (CDB/PDBs management)\n  * ORDS Services\n\nRefer to full feature list and capabilities: [https://github.com/oracle/oracle-database-operator/blob/main/README.md](https://github.com/oracle/oracle-database-operator/blob/main/README.md)\n",
      "provider": "Oracle",
      "install_strategy": "OwnNamespace",
      "creation_timestamp": "2025-09-07T09:13:38Z",
      "labels": {
        "olm.copiedFrom": "operators",
        "olm.managed": "true"
      },
      "annotations": {
        "alm-examples": "[\n  {\n    \"apiVersion\": \"database.oracle.com/v1alpha1\",\n    \"kind\": \"CDB\",\n    \"metadata\": {\n      \"name\": \"cdb-dev\",\n      \"namespace\": \"oracle-database-operator-system\"\n    },\n    \"spec\": {\n      \"cdbAdminPwd\": {\n        \"secret\": {\n          \"key\": \"cdbadmin_pwd\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"cdbAdminUser\": {\n        \"secret\": {\n          \"key\": \"cdbadmin_user\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"cdbName\": \"devcdb\",\n      \"dbPort\": 1521,\n      \"dbServer\": \"172.17.0.4\",\n      \"ordsImage\": \"\",\n      \"ordsImagePullPolicy\": \"Always\",\n      \"ordsPwd\": {\n        \"secret\": {\n          \"key\": \"ords_pwd\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"replicas\": 1,\n      \"serviceName\": \"devdb.example.com\",\n      \"sysAdminPwd\": {\n        \"secret\": {\n          \"key\": \"sysadmin_pwd\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"webServerPwd\": {\n        \"secret\": {\n          \"key\": \"webserver_pwd\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      },\n      \"webServerUser\": {\n        \"secret\": {\n          \"key\": \"webserver_user\",\n          \"secretName\": \"cdb1-secret\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v1alpha1\",\n    \"kind\": \"DbcsSystem\",\n    \"metadata\": {\n      \"name\": \"dbcssystem-sample\"\n    },\n    \"spec\": {\n      \"foo\": \"bar\"\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v1alpha1\",\n    \"kind\": \"PDB\",\n    \"metadata\": {\n      \"labels\": {\n        \"cdb\": \"cdb-dev\"\n      },\n      \"name\": \"pdb1\",\n      \"namespace\": \"oracle-database-operator-system\"\n    },\n    \"spec\": {\n      \"action\": \"Create\",\n      \"adminName\": {\n        \"secret\": {\n          \"key\": \"sysadmin_user\",\n          \"secretName\": \"pdb1-secret\"\n        }\n      },\n      \"adminPwd\": {\n        \"secret\": {\n          \"key\": \"sysadmin_pwd\",\n          \"secretName\": \"pdb1-secret\"\n        }\n      },\n      \"cdbName\": \"devcdb\",\n      \"cdbResName\": \"cdb-dev\",\n      \"fileNameConversions\": \"NONE\",\n      \"pdbName\": \"pdbdev\",\n      \"tempSize\": \"100M\",\n      \"totalSize\": \"1G\"\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v4\",\n    \"kind\": \"AutonomousContainerDatabase\",\n    \"metadata\": {\n      \"name\": \"autonomouscontainerdatabase-sample\"\n    },\n    \"spec\": {\n      \"autonomousExadataVMClusterOCID\": \"ocid1.autonomousexainfrastructure...\",\n      \"compartmentOCID\": \"ocid1.compartment... OR ocid1.tenancy...\",\n      \"displayName\": \"newACD\",\n      \"ociConfig\": {\n        \"configMapName\": \"oci-cred\",\n        \"secretName\": \"oci-privatekey\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v4\",\n    \"kind\": \"AutonomousDatabase\",\n    \"metadata\": {\n      \"name\": \"autonomousdatabase-sample\"\n    },\n    \"spec\": {\n      \"action\": \"Create\",\n      \"details\": {\n        \"adminPassword\": {\n          \"k8sSecret\": {\n            \"name\": \"admin-password\"\n          }\n        },\n        \"compartmentId\": \"ocid1.compartment... OR ocid1.tenancy...\",\n        \"cpuCoreCount\": 1,\n        \"dataStorageSizeInTBs\": 1,\n        \"dbName\": \"NewADB\",\n        \"displayName\": \"NewADB\"\n      },\n      \"ociConfig\": {\n        \"configMapName\": \"oci-cred\",\n        \"secretName\": \"oci-privatekey\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v4\",\n    \"kind\": \"AutonomousDatabaseBackup\",\n    \"metadata\": {\n      \"name\": \"autonomousdatabasebackup-sample\"\n    },\n    \"spec\": {\n      \"displayName\": \"autonomousdatabasebackup-sample\",\n      \"isLongTermBackup\": true,\n      \"ociConfig\": {\n        \"configMapName\": \"oci-cred\",\n        \"secretName\": \"oci-privatekey\"\n      },\n      \"retentionPeriodInDays\": 90,\n      \"target\": {\n        \"k8sADB\": {\n          \"name\": \"autonomousdatabase-sample\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"database.oracle.com/v4\",\n    \"kind\": \"SingleInstanceDatabase\",\n    \"metadata\": {\n      \"name\": \"sidb-sample\",\n      \"namespace\": \"default\"\n    },\n    \"spec\": {\n      \"adminPassword\": {\n        \"secretName\": \"db-admin-secret\"\n      },\n      \"archiveLog\": true,\n      \"charset\": \"AL32UTF8\",\n      \"edition\": \"enterprise\",\n      \"image\": {\n        \"pullFrom\": \"container-registry.oracle.com/database/enterprise_ru:19\",\n        \"pullSecrets\": \"oracle-container-registry-secret\"\n      },\n      \"pdbName\": \"orclpdb1\",\n      \"persistence\": {\n        \"accessMode\": \"ReadWriteOnce\",\n        \"size\": \"100Gi\",\n        \"storageClass\": \"oci-bv\"\n      },\n      \"replicas\": 1,\n      \"sid\": \"ORCL1\"\n    }\n  },\n  {\n    \"apiVersion\": \"observability.oracle.com/v1alpha1\",\n    \"kind\": \"DatabaseObserver\",\n    \"metadata\": {\n      \"name\": \"obs-sample\"\n    },\n    \"spec\": {\n      \"database\": {\n        \"dbConnectionString\": {\n          \"key\": \"connection\",\n          \"secret\": \"db-secret\"\n        },\n        \"dbPassword\": {\n          \"key\": \"password\",\n          \"secret\": \"db-secret\"\n        },\n        \"dbUser\": {\n          \"key\": \"username\",\n          \"secret\": \"db-secret\"\n        },\n        \"dbWallet\": {\n          \"secret\": \"instance-wallet\"\n        }\n      },\n      \"exporter\": {\n        \"configuration\": {\n          \"configmap\": {\n            \"configmapName\": \"devcm-oradevdb-config\",\n            \"key\": \"config.toml\"\n          }\n        },\n        \"image\": \"container-registry.oracle.com/database/observability-exporter:latest\",\n        \"service\": {\n          \"port\": 9161\n        }\n      },\n      \"ociConfig\": {\n        \"configMapName\": \"oci-cred\",\n        \"secretName\": \"oci-privatekey\"\n      },\n      \"prometheus\": {\n        \"labels\": {\n          \"app\": \"app-sample-label\"\n        },\n        \"port\": \"metrics\"\n      },\n      \"replicas\": 1\n    }\n  }\n]",
        "capabilities": "Seamless Upgrades",
        "categories": "Database",
        "containerImage": "container-registry.oracle.com/database/operator:1.2.0",
        "createdAt": "2025-04-10T20:09:48Z",
        "olm.operatorGroup": "global-operators",
        "olm.operatorNamespace": "operators",
        "operatorframework.io/properties": "{\"properties\":[{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousContainerDatabase\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousContainerDatabase\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabase\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabase\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabaseBackup\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabaseBackup\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabaseRestore\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"AutonomousDatabaseRestore\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"CDB\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"CDB\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"DataguardBroker\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"DataguardBroker\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"DbcsSystem\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"DbcsSystem\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"LREST\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"LRPDB\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"OracleRestDataService\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"OracleRestDataService\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"OrdsSrvs\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"PDB\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"PDB\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"ShardingDatabase\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"ShardingDatabase\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"SingleInstanceDatabase\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"database.oracle.com\",\"kind\":\"SingleInstanceDatabase\",\"version\":\"v4\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"observability.oracle.com\",\"kind\":\"DatabaseObserver\",\"version\":\"v1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"observability.oracle.com\",\"kind\":\"DatabaseObserver\",\"version\":\"v1alpha1\"}},{\"type\":\"olm.gvk\",\"value\":{\"group\":\"observability.oracle.com\",\"kind\":\"DatabaseObserver\",\"version\":\"v4\"}},{\"type\":\"olm.package\",\"value\":{\"packageName\":\"oracle-database-operator\",\"version\":\"1.2.0\"}}]}",
        "operators.operatorframework.io/builder": "operator-sdk-v1.39.2",
        "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v4"
      },
      "owned_crds": [
        "autonomouscontainerdatabases.database.oracle.com",
        "autonomouscontainerdatabases.database.oracle.com",
        "autonomousdatabasebackups.database.oracle.com",
        "autonomousdatabasebackups.database.oracle.com",
        "autonomousdatabaserestores.database.oracle.com",
        "autonomousdatabaserestores.database.oracle.com",
        "autonomousdatabases.database.oracle.com",
        "autonomousdatabases.database.oracle.com",
        "cdbs.database.oracle.com",
        "cdbs.database.oracle.com",
        "databaseobservers.observability.oracle.com",
        "databaseobservers.observability.oracle.com",
        "databaseobservers.observability.oracle.com",
        "dataguardbrokers.database.oracle.com",
        "dataguardbrokers.database.oracle.com",
        "dbcssystems.database.oracle.com",
        "dbcssystems.database.oracle.com",
        "lrests.database.oracle.com",
        "lrpdbs.database.oracle.com",
        "oraclerestdataservices.database.oracle.com",
        "oraclerestdataservices.database.oracle.com",
        "ordssrvs.database.oracle.com",
        "pdbs.database.oracle.com",
        "pdbs.database.oracle.com",
        "shardingdatabases.database.oracle.com",
        "shardingdatabases.database.oracle.com",
        "singleinstancedatabases.database.oracle.com",
        "singleinstancedatabases.database.oracle.com"
      ],
      "required_crds": [],
      "permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps"
              ],
              "verbs": [
                "get",
                "list",
                "watch",
                "create",
                "update",
                "patch",
                "delete"
              ]
            },
            {
              "apiGroups": [
                "coordination.k8s.io"
              ],
              "resources": [
                "leases"
              ],
              "verbs": [
                "get",
                "list",
                "watch",
                "create",
                "update",
                "patch",
                "delete"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps/status"
              ],
              "verbs": [
                "get",
                "update",
                "patch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "events"
              ],
              "verbs": [
                "create",
                "patch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps",
                "containers",
                "deployments",
                "events",
                "namespaces",
                "persistentvolumeclaims",
                "pods",
                "pods/exec",
                "pods/log",
                "replicasets",
                "secrets",
                "services"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "configmaps/status",
                "daemonsets/status",
                "deployments/status",
                "services/status",
                "statefulsets/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "persistentvolumes"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            },
            {
              "apiGroups": [
                ""
              ],
              "resources": [
                "secrets/status"
              ],
              "verbs": [
                "get"
              ]
            },
            {
              "apiGroups": [
                "''"
              ],
              "resources": [
                "statefulsets/finalizers"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "apps"
              ],
              "resources": [
                "configmaps"
              ],
              "verbs": [
                "get",
                "list"
              ]
            },
            {
              "apiGroups": [
                "apps"
              ],
              "resources": [
                "daemonsets",
                "deployments",
                "pods",
                "replicasets",
                "services",
                "statefulsets"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "coordination.k8s.io"
              ],
              "resources": [
                "leases"
              ],
              "verbs": [
                "create",
                "get",
                "list",
                "update"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "autonomouscontainerdatabases",
                "autonomousdatabases",
                "cdbs",
                "dataguardbrokers",
                "dbcssystems",
                "events",
                "lrests",
                "lrpdbs",
                "oraclerestdataservices",
                "ordssrvs",
                "pdbs",
                "shardingdatabases",
                "singleinstancedatabases"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "autonomouscontainerdatabases/status",
                "autonomousdatabasebackups/status",
                "autonomousdatabaserestores/status",
                "cdbs/status",
                "dataguardbrokers/status",
                "dbcssystems/status",
                "lrests/status",
                "lrpdbs/status",
                "oraclerestdataservices/status",
                "ordssrvs/status",
                "pdbs/status",
                "shardingdatabases/status",
                "singleinstancedatabases/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "autonomousdatabasebackups",
                "autonomousdatabaserestores"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "autonomousdatabases/status"
              ],
              "verbs": [
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "cdbs/finalizers",
                "dataguardbrokers/finalizers",
                "lrests/finalizers",
                "oraclerestdataservices/finalizers",
                "ordssrvs/finalizers",
                "singleinstancedatabases/finalizers"
              ],
              "verbs": [
                "update"
              ]
            },
            {
              "apiGroups": [
                "database.oracle.com"
              ],
              "resources": [
                "dbcssystems/finalizers",
                "lrpdbs/finalizers",
                "pdbs/finalizers",
                "shardingdatabases/finalizers"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "monitoring.coreos.com"
              ],
              "resources": [
                "servicemonitors"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "observability.oracle.com"
              ],
              "resources": [
                "databaseobservers"
              ],
              "verbs": [
                "create",
                "delete",
                "get",
                "list",
                "patch",
                "update",
                "watch"
              ]
            },
            {
              "apiGroups": [
                "observability.oracle.com"
              ],
              "resources": [
                "databaseobservers/finalizers"
              ],
              "verbs": [
                "update"
              ]
            },
            {
              "apiGroups": [
                "observability.oracle.com"
              ],
              "resources": [
                "databaseobservers/status"
              ],
              "verbs": [
                "get",
                "patch",
                "update"
              ]
            },
            {
              "apiGroups": [
                "storage.k8s.io"
              ],
              "resources": [
                "storageclasses"
              ],
              "verbs": [
                "get",
                "list",
                "watch"
              ]
            }
          ],
          "serviceAccountName": "default"
        }
      ],
      "cluster_permissions": [
        {
          "rules": [
            {
              "apiGroups": [
                "authentication.k8s.io"
              ],
              "resources": [
                "tokenreviews"
              ],
              "verbs": [
                "create"
              ]
            },
            {
              "apiGroups": [
                "authorization.k8s.io"
              ],
              "resources": [
                "subjectaccessreviews"
              ],
              "verbs": [
                "create"
              ]
            }
          ],
          "serviceAccountName": "default"
        }
      ],
      "replaces": "oracle-database-operator.v1.1.0",
      "skips": [],
      "min_kube_version": ""
    }
  ]
}